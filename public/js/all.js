/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/all.js":
/*!*****************************!*\
  !*** ./resources/js/all.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _app_scripts_common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app-scripts/common.js */ "./resources/js/app-scripts/common.js");
/* harmony import */ var _app_scripts_common_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_app_scripts_common_js__WEBPACK_IMPORTED_MODULE_0__);


/***/ }),

/***/ "./resources/js/app-scripts/common.js":
/*!********************************************!*\
  !*** ./resources/js/app-scripts/common.js ***!
  \********************************************/
/***/ (() => {

eval("var boatCommon = function boatCommon() {\n  // Ajax header declared\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    }\n  }); // Main Delete record function\n\n  deleteConfirmation = function deleteConfirmation(url, redirectUrl) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: \"Delete\",\n      confirmButtonColor: \"#dc3545\"\n    }).then(function (result) {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        $.ajax({\n          url: url,\n          type: \"DELETE\",\n          success: function success(response) {\n            window.location = redirectUrl;\n          },\n          error: function error(response) {\n            window.location = redirectUrl;\n          }\n        });\n      }\n    });\n  };\n}; // Modal View settings use to show form contents modal\n\n\n$(document).on('click', '.open-model-btn', function () {\n  var url = $(this).attr(\"data-href\");\n  var title = $(this).attr(\"data-title\");\n  var size = $(this).attr(\"data-size\");\n  $(\"#boatModalBox .modal-body\").load(url, function (result) {\n    $(\"#boatModalBox .modal-title\").html(title);\n\n    if (size == 'lg') {\n      $(\"#modalMainDiv\").addClass('modal-lg');\n    } else {\n      if ($(\"#modalMainDiv\").hasClass('modal-lg')) {\n        $(\"#modalMainDiv\").removeClass('modal-lg');\n      }\n    }\n\n    $(\"#boatModalBox\").modal({\n      backdrop: \"static\",\n      keyboard: false,\n      show: true\n    });\n  });\n}); // Preview Profile Image\n\n$(document).on('change', '#getFile', function () {\n  var reader = new FileReader();\n\n  reader.onload = function (e) {\n    $('#previewImage').attr('src', e.target.result);\n  };\n\n  reader.readAsDataURL(this.files[0]);\n}); // Save modal form\n\n$(document).on('click', '.save-data', function (e) {\n  e.preventDefault();\n  var $form = $(this).parents('form');\n  var url = $form.attr('action');\n  $.ajax({\n    type: $form.attr('method'),\n    url: url,\n    data: $form.serialize(),\n    success: function success(response) {\n      location.reload();\n    },\n    error: function error(reject) {\n      if (reject.status === 422) {\n        var errors = $.parseJSON(reject.responseText);\n        $.each(errors.errors, function (key, val) {\n          if (!$('#' + key).hasClass(\"is-invalid\")) {\n            $('#' + key).addClass(\"is-invalid\");\n          }\n\n          $(\"#\" + key + \"_error\").text(val);\n        });\n      }\n    }\n  });\n}); // // Remove temporary image after reset\n// $(document).on(\"click\", \".reset-user\", function () {\n//     const defaultImagePath = $(this).attr('default-image');\n//     const uploadedImage = ((base_url == $(this).data('image')) || (base_url + '/' == $(this).data('image')) ) ? $(this).data('image') : '';\n//     console.log(base_url+'  '+$(this).data('image'));\n//     if(uploadedImage) {\n//         $('.avatar').attr('src', uploadedImage);\n//     }else {\n//         $('.avatar').attr('src', defaultImagePath);\n//     }\n// });\n// delete confirmation box for all modules\n\n$(document).on(\"click\", \".delete-confirmation\", function (event) {\n  event.preventDefault();\n  var url = $(this).attr(\"href\");\n  var redirectUrl = $(this).data(\"redirect-url\");\n  deleteConfirmation(url, redirectUrl);\n});\n\nvar commonListing = function commonListing() {\n  var tostrMessage = function tostrMessage(type, message) {\n    toastr.options = {\n      closeButton: true,\n      progressBar: true,\n      showMethod: 'slideDown' // timeOut: 4000\n\n    };\n\n    if (type != '' && message != '') {\n      if (type == 'success') {\n        toastr.success(message);\n      } else {\n        toastr.error(message);\n      }\n    }\n  }; //on click change brand status\n\n\n  $(document).on('click', '.brand-status', function () {\n    var uuid = $(this).attr('data-uuid');\n    var status = $(this).attr('data-status');\n    var statusButton = $(this);\n\n    if ($('#brandsDatatable').length) {\n      Swal.fire({\n        title: \"Are you sure, you want to change status?\",\n        showCancelButton: true,\n        confirmButtonText: \"Confirm\",\n        confirmButtonColor: \"#dc3545\"\n      }).then(function (result) {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n          $.ajaxSetup({\n            headers: {\n              \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr(\"content\")\n            }\n          });\n          $.ajax({\n            url: base_url + '/admin/brands-status/' + uuid + '/' + status,\n            type: 'GET',\n            beforeSend: function beforeSend() {\n              $(\".loading\").show();\n            },\n            complete: function complete() {\n              $(\".loading\").hide();\n            },\n            success: function success(response) {\n              if (response.brand.is_active == 'N') {\n                statusButton.attr(\"checked\", false);\n              } else {\n                statusButton.attr(\"checked\", true);\n              }\n\n              if (response.status == 'prohibited') {\n                tostrMessage('error', response.message);\n                $('#brandsDatatable').DataTable().ajax.reload();\n              } else {\n                tostrMessage('success', 'Brand status updated successfully!');\n                statusButton.attr(\"data-status\", response.brand.is_active);\n              }\n            },\n            error: function error(xhr, status, _error) {\n              tostrMessage('error', 'Failed to update brand status!');\n            }\n          });\n        } else {\n          $('#brandsDatatable').DataTable().ajax.reload();\n        }\n      });\n    }\n  }); //on click change model status\n\n  $(document).on('click', '.model-status', function () {\n    var uuid = $(this).attr('data-uuid');\n    var status = $(this).attr('data-status');\n    var statusButton = $(this);\n\n    if ($('#modelsDatatable').length) {\n      Swal.fire({\n        title: \"Are you sure, you want to change status?\",\n        showCancelButton: true,\n        confirmButtonText: \"Confirm\",\n        confirmButtonColor: \"#dc3545\"\n      }).then(function (result) {\n        /* Read more about isConfirmed, isDenied below */\n        if (result.isConfirmed) {\n          $.ajaxSetup({\n            headers: {\n              \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr(\"content\")\n            }\n          });\n          $.ajax({\n            url: base_url + '/admin/models-status/' + uuid + '/' + status,\n            type: 'GET',\n            beforeSend: function beforeSend() {\n              $(\".loading\").show();\n            },\n            complete: function complete() {\n              $(\".loading\").hide();\n            },\n            success: function success(response) {\n              tostrMessage('success', 'Model status updated successfully!');\n\n              if (response.model.is_active == 'N') {\n                statusButton.attr(\"checked\", false);\n              } else {\n                statusButton.attr(\"checked\", true);\n              }\n\n              statusButton.attr(\"data-status\", response.model.is_active);\n            },\n            error: function error(response) {\n              tostrMessage('error', 'Failed to update model status!');\n            }\n          });\n        } else {\n          $('#modelsDatatable').DataTable().ajax.reload();\n        }\n      });\n    }\n  });\n  var url = $('#usersDatatable').data('ajax-url');\n  var userTable = $('#usersDatatable').DataTable({\n    responsive: true,\n    serverSide: true,\n    ajax: {\n      url: url,\n      data: function data(d) {\n        d.search = $('input[type=\"search\"]').val();\n      }\n    },\n    columns: [{\n      data: 'name',\n      name: 'name'\n    }, {\n      data: 'email',\n      name: 'email'\n    }, {\n      data: 'contact_number',\n      name: 'contact_number'\n    }, {\n      data: 'action',\n      name: 'action',\n      bSortable: false\n    }]\n  });\n  userTable.draw();\n  $(document).on('change', 'input[type=\"search\"]', function (e) {\n    userTable.draw();\n  });\n\n  if ($('#brandsDatatable').length) {\n    var url = $('#brandsDatatable').data('ajax-url');\n    $('#brandsDatatable').DataTable({\n      // processing: true,\n      responsive: true,\n      serverSide: true,\n      ajax: url,\n      columns: [{\n        data: 'name',\n        name: 'name'\n      }, {\n        data: 'status',\n        name: 'status',\n        bSortable: false\n      }, {\n        data: 'action',\n        name: 'action',\n        bSortable: false\n      }]\n    });\n  }\n\n  if ($('#modelsDatatable').length) {\n    var url = $('#modelsDatatable').attr('data-ajax-url');\n    $('#modelsDatatable').DataTable({\n      // processing: true,\n      responsive: true,\n      serverSide: true,\n      ajax: url,\n      columns: [{\n        data: 'model_name',\n        name: 'model_name'\n      }, {\n        data: 'brand_name',\n        name: 'brand_name'\n      }, {\n        data: 'status',\n        name: 'status',\n        bSortable: false\n      }, {\n        data: 'action',\n        name: 'action',\n        bSortable: false\n      }]\n    });\n  }\n\n  if ($('#plansDatatable').length) {\n    var url = $('#plansDatatable').data('ajax-url');\n    $('#plansDatatable').DataTable({\n      // processing: true,\n      responsive: true,\n      serverSide: true,\n      ajax: url,\n      columns: [{\n        data: 'name',\n        name: 'name'\n      }, {\n        data: 'price',\n        name: 'price',\n        bSortable: false\n      }, {\n        data: 'duration_weeks',\n        name: 'duration_weeks',\n        bSortable: false\n      }, {\n        data: 'image_number',\n        name: 'image_number',\n        bSortable: false\n      }, {\n        data: 'video_number',\n        name: 'video_number',\n        bSortable: false\n      }, {\n        data: 'action',\n        name: 'action',\n        bSortable: false\n      }]\n    });\n  }\n\n  if ($('#couponsDatatable').length) {\n    var url = $('#couponsDatatable').data('ajax-url');\n    $('#couponsDatatable').DataTable({\n      // processing: true,\n      responsive: true,\n      serverSide: true,\n      ajax: url,\n      columns: [{\n        data: 'code',\n        name: 'code'\n      }, {\n        data: 'type',\n        name: 'type'\n      }, {\n        data: 'amount',\n        name: 'amount',\n        bSortable: false\n      }, {\n        data: 'expiry_date',\n        name: 'expiry_date',\n        bSortable: false\n      }, {\n        data: 'action',\n        name: 'action',\n        bSortable: false\n      }]\n    });\n  }\n\n  if ($('#planAddonsDatatable').length) {\n    var url = $('#planAddonsDatatable').data('ajax-url');\n    $('#planAddonsDatatable').DataTable({\n      // processing: true,\n      responsive: true,\n      serverSide: true,\n      ajax: url,\n      columns: [{\n        data: 'addon_name',\n        name: 'addon_name'\n      }, {\n        data: 'plan_name',\n        name: 'plan_name',\n        bSortable: false\n      }, {\n        data: 'addon_cost',\n        name: 'addon_cost',\n        bSortable: false\n      }, {\n        data: 'action',\n        name: 'action',\n        bSortable: false\n      }]\n    });\n  }\n  /*Options Listing*/\n\n\n  url = $('#optionsDatatable').data('ajax-url');\n  var optionsTable = $('#optionsDatatable').DataTable({\n    processing: true,\n    serverSide: true,\n    ajax: {\n      url: url,\n      data: function data(d) {\n        d.option_type = $('#select_option_type').val();\n        d.search = $('input[type=\"search\"]').val();\n      }\n    },\n    columns: [{\n      data: 'name',\n      name: 'name'\n    }, {\n      data: 'option_type',\n      name: 'option_type'\n    }, {\n      data: 'is_active',\n      name: 'is_active',\n      bSortable: false\n    }, {\n      data: 'action',\n      name: 'action',\n      bSortable: false\n    }]\n  });\n  optionsTable.draw();\n  $(document).on('change', '#select_option_type, input[type=\"search\"]', function (e) {\n    optionsTable.draw();\n  }); //Update options Status\n\n  var updateStatus = function updateStatus(tableId, url) {\n    Swal.fire({\n      title: \"Are you sure, you want to change status?\",\n      showCancelButton: true,\n      confirmButtonText: \"Confirm\",\n      confirmButtonColor: \"#dc3545\"\n    }).then(function (result) {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        $.ajaxSetup({\n          headers: {\n            \"X-CSRF-TOKEN\": $('meta[name=\"csrf-token\"]').attr(\"content\")\n          }\n        });\n        $.ajax({\n          type: \"GET\",\n          dataType: \"json\",\n          url: url,\n          success: function success(response) {\n            tostrMessage('success', response.message);\n          },\n          error: function error(response) {\n            tostrMessage('error', response.responseJSON.message);\n            $('#' + tableId).DataTable().ajax.reload();\n          }\n        });\n      } else {\n        $('#' + tableId).DataTable().ajax.reload();\n      }\n    });\n  }; //check Options status toggle change\n\n\n  $(document).on('click', '.optionStatus', function () {\n    var option_uuid = $(this).data(\"uuid\");\n    var base_url = $(this).data(\"url\");\n    var url = base_url + \"/admin/option-status/\" + option_uuid;\n    var tableId = $(this).parents('table').attr('id');\n    updateStatus(tableId, url);\n  });\n  /*Categories Datatable listing*/\n\n  url = $('#categoriesDatatable').data('ajax-url');\n  $('#categoriesDatatable').DataTable({\n    responsive: true,\n    serverSide: true,\n    ajax: url,\n    columns: [{\n      data: 'name',\n      name: 'name'\n    }, {\n      data: 'type',\n      name: 'type'\n    }, {\n      data: 'is_active',\n      name: 'is_active',\n      bSortable: false\n    }, {\n      data: 'action',\n      name: 'action',\n      bSortable: false\n    }]\n  }); //check Category status toggle change\n\n  $(document).on('click', '.categoryStatus', function () {\n    var category_uuid = $(this).data(\"uuid\");\n    var base_url = $(this).data(\"url\");\n    var url = base_url + \"/admin/category-status/\" + category_uuid;\n    var tableId = $(this).parents('table').attr('id');\n    updateStatus(tableId, url);\n  });\n};\n\nInitSummernote = function InitSummernote() {\n  //Category Description Summernote\n  $('.summernote').summernote({\n    toolbar: [// [groupName, [list of button]]\n    ['style', ['bold', 'italic', 'underline']], ['para', ['ul', 'ol']]],\n    placeholder: 'Description',\n    tabSize: 2,\n    height: 80\n  });\n};\n\n$(document).ready(function () {\n  InitSummernote();\n  boatCommon();\n  commonListing();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app-scripts/common.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./resources/js/all.js");
/******/ 	
/******/ })()
;