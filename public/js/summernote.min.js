/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/jQuery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jQuery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.6.0\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2021-03-02T17:08Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif (  true && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar flat = arr.flat ? function( array ) {\n\treturn arr.flat.call( array );\n} : function( array ) {\n\treturn arr.concat.apply( [], array );\n};\n\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\nvar isFunction = function isFunction( obj ) {\n\n\t\t// Support: Chrome <=57, Firefox <=52\n\t\t// In some browsers, typeof returns \"function\" for HTML <object> elements\n\t\t// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n\t\t// We don't want to classify *any* DOM node as a function.\n\t\t// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n\t\t// Plus for old WebKit, typeof returns \"function\" for HTML collections\n\t\t// (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n\t\treturn typeof obj === \"function\" && typeof obj.nodeType !== \"number\" &&\n\t\t\ttypeof obj.item !== \"function\";\n\t};\n\n\nvar isWindow = function isWindow( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t};\n\n\nvar document = window.document;\n\n\n\n\tvar preservedScriptAttributes = {\n\t\ttype: true,\n\t\tsrc: true,\n\t\tnonce: true,\n\t\tnoModule: true\n\t};\n\n\tfunction DOMEval( code, node, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar i, val,\n\t\t\tscript = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tif ( node ) {\n\t\t\tfor ( i in preservedScriptAttributes ) {\n\n\t\t\t\t// Support: Firefox 64+, Edge 18+\n\t\t\t\t// Some browsers don't support the \"nonce\" property on scripts.\n\t\t\t\t// On the other hand, just using `getAttribute` is not enough as\n\t\t\t\t// the `nonce` attribute is reset to an empty string whenever it\n\t\t\t\t// becomes browsing-context connected.\n\t\t\t\t// See https://github.com/whatwg/html/issues/2369\n\t\t\t\t// See https://html.spec.whatwg.org/#nonce-attributes\n\t\t\t\t// The `node.getAttribute` check was added for the sake of\n\t\t\t\t// `jQuery.globalEval` so that it can fake a nonce-containing node\n\t\t\t\t// via an object.\n\t\t\t\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\n\t\t\t\tif ( val ) {\n\t\t\t\t\tscript.setAttribute( i, val );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n\n\nfunction toType( obj ) {\n\tif ( obj == null ) {\n\t\treturn obj + \"\";\n\t}\n\n\t// Support: Android <=2.3 only (functionish RegExp)\n\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\ttypeof obj;\n}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.6.0\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teven: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn ( i + 1 ) % 2;\n\t\t} ) );\n\t},\n\n\todd: function() {\n\t\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\n\t\t\treturn i % 2;\n\t\t} ) );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent Object.prototype pollution\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( name === \"__proto__\" || target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\t\t\t\t\tsrc = target[ name ];\n\n\t\t\t\t\t// Ensure proper type for the source value\n\t\t\t\t\tif ( copyIsArray && !Array.isArray( src ) ) {\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\n\t\t\t\t\t\tclone = {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src;\n\t\t\t\t\t}\n\t\t\t\t\tcopyIsArray = false;\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\t// Evaluates a script in a provided context; falls back to the global one\n\t// if not specified.\n\tglobalEval: function( code, options, doc ) {\n\t\tDOMEval( code, { nonce: options && options.nonce }, doc );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn flat( ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\n\tfunction( _i, name ) {\n\t\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n\t} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = toType( obj );\n\n\tif ( isFunction( obj ) || isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.6\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://js.foundation/\n *\n * Date: 2021-02-16\n */\n( function( window ) {\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tnonnativeSelectorCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ( {} ).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpushNative = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\n\t\t\"ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n\tidentifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace +\n\t\t\"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\n\t\t// \"Attribute values must be CSS identifiers [capture 5]\n\t\t// or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" +\n\t\twhitespace + \"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" +\n\t\twhitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\n\t\t\"*\" ),\n\trdescend = new RegExp( whitespace + \"|>\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" +\n\t\t\twhitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\n\t\t\twhitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace +\n\t\t\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace +\n\t\t\t\"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trhtml = /HTML$/i,\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\" ),\n\tfunescape = function( escape, nonHex ) {\n\t\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\n\n\t\treturn nonHex ?\n\n\t\t\t// Strip the backslash prefix from a non-hex escape sequence\n\t\t\tnonHex :\n\n\t\t\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\n\t\t\t// Support: IE <=11+\n\t\t\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\n\t\t\t// surrogate pair\n\t\t\thigh < 0 ?\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" +\n\t\t\t\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tinDisabledFieldset = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t( arr = slice.call( preferredDoc.childNodes ) ),\n\t\tpreferredDoc.childNodes\n\t);\n\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\t// eslint-disable-next-line no-unused-expressions\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpushNative.apply( target, slice.call( els ) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\t\tsetDocument( context );\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( ( m = match[ 1 ] ) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( ( elem = context.getElementById( m ) ) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[ 2 ] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!nonnativeSelectorCache[ selector + \" \" ] &&\n\t\t\t\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\n\n\t\t\t\t// Support: IE 8 only\n\t\t\t\t// Exclude object elements\n\t\t\t\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\n\n\t\t\t\tnewSelector = selector;\n\t\t\t\tnewContext = context;\n\n\t\t\t\t// qSA considers elements outside a scoping root when evaluating child or\n\t\t\t\t// descendant combinators, which is not what we want.\n\t\t\t\t// In such cases, we work around the behavior by prefixing every selector in the\n\t\t\t\t// list with an ID selector referencing the scope context.\n\t\t\t\t// The technique has to be used as well when a leading combinator is used\n\t\t\t\t// as such selectors are not recognized by querySelectorAll.\n\t\t\t\t// Thanks to Andrew Dupont for this technique.\n\t\t\t\tif ( nodeType === 1 &&\n\t\t\t\t\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\n\t\t\t\t\t// We can use :scope instead of the ID hack if the browser\n\t\t\t\t\t// supports it & if we're not changing the context.\n\t\t\t\t\tif ( newContext !== context || !support.scope ) {\n\n\t\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\t\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\n\t\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.setAttribute( \"id\", ( nid = expando ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\n\t\t\t\t\t\t\ttoSelector( groups[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\tnonnativeSelectorCache( selector, true );\n\t\t\t\t} finally {\n\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn ( cache[ key + \" \" ] = value );\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement( \"fieldset\" );\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch ( e ) {\n\t\treturn false;\n\t} finally {\n\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split( \"|\" ),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[ i ] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( ( cur = cur.nextSibling ) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\tinDisabledFieldset( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction( function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction( function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\n\t\t\t\t\tseed[ j ] = !( matches[ j ] = seed[ j ] );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t} );\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\tvar namespace = elem && elem.namespaceURI,\n\t\tdocElem = elem && ( elem.ownerDocument || elem ).documentElement;\n\n\t// Support: IE <=8\n\t// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes\n\t// https://bugs.jquery.com/ticket/4833\n\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( preferredDoc != document &&\n\t\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\n\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\n\t// IE/Edge & older browsers don't support the :scope pseudo-class.\n\t// Support: Safari 6.0 only\n\t// Safari 6.0 supports :scope but it's an alias of :root there.\n\tsupport.scope = assert( function( el ) {\n\t\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\n\t\treturn typeof el.querySelectorAll !== \"undefined\" &&\n\t\t\t!el.querySelectorAll( \":scope fieldset div\" ).length;\n\t} );\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert( function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute( \"className\" );\n\t} );\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert( function( el ) {\n\t\tel.appendChild( document.createComment( \"\" ) );\n\t\treturn !el.getElementsByTagName( \"*\" ).length;\n\t} );\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert( function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t} );\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[ \"ID\" ] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute( \"id\" ) === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[ \"ID\" ] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode( \"id\" );\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[ \"ID\" ] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( ( elem = elems[ i++ ] ) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode( \"id\" );\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\n\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert( function( el ) {\n\n\t\t\tvar input;\n\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll( \"[msallowcapture^='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"~=\" );\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 15 - 18+\n\t\t\t// IE 11/Edge don't find elements on a `[name='']` query in some cases.\n\t\t\t// Adding a temporary attribute to the document before the selection works\n\t\t\t// around the issue.\n\t\t\t// Interestingly, IE 10 & older don't seem to have the issue.\n\t\t\tinput = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"name\", \"\" );\n\t\t\tel.appendChild( input );\n\t\t\tif ( !el.querySelectorAll( \"[name='']\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\n\t\t\t\t\twhitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll( \":checked\" ).length ) {\n\t\t\t\trbuggyQSA.push( \":checked\" );\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push( \".#.+[+~]\" );\n\t\t\t}\n\n\t\t\t// Support: Firefox <=3.6 - 5 only\n\t\t\t// Old Firefox doesn't throw on a badly-escaped identifier.\n\t\t\tel.querySelectorAll( \"\\\\\\f\" );\n\t\t\trbuggyQSA.push( \"[\\\\r\\\\n\\\\f]\" );\n\t\t} );\n\n\t\tassert( function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement( \"input\" );\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: Opera 10 - 11 only\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll( \"*,:x\" );\n\t\t\trbuggyQSA.push( \",.*:\" );\n\t\t} );\n\t}\n\n\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector ) ) ) ) {\n\n\t\tassert( function( el ) {\n\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t} );\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t) );\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( ( b = b.parentNode ) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t// two documents; shallow comparisons work.\n\t\t// eslint-disable-next-line eqeqeq\n\t\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( a == document || a.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, a ) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\tif ( b == document || b.ownerDocument == preferredDoc &&\n\t\t\t\tcontains( preferredDoc, b ) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\treturn a == document ? -1 :\n\t\t\t\tb == document ? 1 :\n\t\t\t\t/* eslint-enable eqeqeq */\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( ( cur = cur.parentNode ) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[ i ] === bp[ i ] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[ i ], bp[ i ] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t// two documents; shallow comparisons work.\n\t\t\t/* eslint-disable eqeqeq */\n\t\t\tap[ i ] == preferredDoc ? -1 :\n\t\t\tbp[ i ] == preferredDoc ? 1 :\n\t\t\t/* eslint-enable eqeqeq */\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\tsetDocument( elem );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!nonnativeSelectorCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\n\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t// fragment in IE 9\n\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch ( e ) {\n\t\t\tnonnativeSelectorCache( expr, true );\n\t\t}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( context.ownerDocument || context ) != document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\n\t// Set document vars if needed\n\t// Support: IE 11+, Edge 17 - 18+\n\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t// two documents; shallow comparisons work.\n\t// eslint-disable-next-line eqeqeq\n\tif ( ( elem.ownerDocument || elem ) != document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( ( elem = results[ i++ ] ) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( ( node = elem[ i++ ] ) ) {\n\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\n\t\t\t\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[ 2 ] === \"~=\" ) {\n\t\t\t\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[ 1 ] = match[ 1 ].toLowerCase();\n\n\t\t\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\n\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[ 3 ] ) {\n\t\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[ 4 ] = +( match[ 4 ] ?\n\t\t\t\t\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\n\t\t\t\t\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\n\t\t\t\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\n\n\t\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[ 3 ] ) {\n\t\t\t\tSizzle.error( match[ 0 ] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[ 6 ] && match[ 2 ];\n\n\t\t\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[ 3 ] ) {\n\t\t\t\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t( excess = tokenize( unquoted, true ) ) &&\n\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\n\t\t\t\tmatch[ 2 ] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() {\n\t\t\t\t\treturn true;\n\t\t\t\t} :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t( pattern = new RegExp( \"(^|\" + whitespace +\n\t\t\t\t\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\n\t\t\t\t\t\tclassName, function( elem ) {\n\t\t\t\t\t\t\treturn pattern.test(\n\t\t\t\t\t\t\t\ttypeof elem.className === \"string\" && elem.className ||\n\t\t\t\t\t\t\t\ttypeof elem.getAttribute !== \"undefined\" &&\n\t\t\t\t\t\t\t\t\telem.getAttribute( \"class\" ) ||\n\t\t\t\t\t\t\t\t\"\"\n\t\t\t\t\t\t\t);\n\t\t\t\t} );\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\t/* eslint-disable max-len */\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t\t/* eslint-enable max-len */\n\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, _argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( ( node = node[ dir ] ) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || ( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( node[ expando ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t( outerCache[ node.uniqueID ] = {} );\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction( function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[ i ] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction( function( selector ) {\n\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction( function( seed, matches, _context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\t\t\t\t\tseed[ i ] = !( matches[ i ] = elem );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} ) :\n\t\t\t\tfunction( elem, _context, xml ) {\n\t\t\t\t\tinput[ 0 ] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[ 0 ] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t} ),\n\n\t\t\"has\": markFunction( function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t} ),\n\n\t\t\"contains\": markFunction( function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t} ),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test( lang || \"\" ) ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( ( elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t} ),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement &&\n\t\t\t\t( !document.hasFocus || document.hasFocus() ) &&\n\t\t\t\t!!( elem.type || elem.href || ~elem.tabIndex );\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn ( nodeName === \"input\" && !!elem.checked ) ||\n\t\t\t\t( nodeName === \"option\" && !!elem.selected );\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\t// eslint-disable-next-line no-unused-expressions\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[ \"empty\" ]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\n\t\t\t\t\tattr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo( function() {\n\t\t\treturn [ 0 ];\n\t\t} ),\n\n\t\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t} ),\n\n\t\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t} ),\n\n\t\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ?\n\t\t\t\targument + length :\n\t\t\t\targument > length ?\n\t\t\t\t\tlength :\n\t\t\t\t\targument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} ),\n\n\t\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t} )\n\t}\n};\n\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\n\t\t\tif ( match ) {\n\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( ( tokens = [] ) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( ( match = rcombinators.exec( soFar ) ) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push( {\n\t\t\t\tvalue: matched,\n\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[ 0 ].replace( rtrim, \" \" )\n\t\t\t} );\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\n\t\t\t\t( match = preFilters[ type ]( match ) ) ) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push( {\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t} );\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[ i ].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( ( elem = elem[ dir ] ) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] ||\n\t\t\t\t\t\t\t( outerCache[ elem.uniqueID ] = {} );\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[ i ]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[ 0 ];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[ i ], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( elem = unmatched[ i ] ) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction( function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts(\n\t\t\t\tselector || \"*\",\n\t\t\t\tcontext.nodeType ? [ context ] : context,\n\t\t\t\t[]\n\t\t\t),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( ( elem = temp[ i ] ) ) {\n\t\t\t\t\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) ) {\n\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( ( matcherIn[ i ] = elem ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, ( matcherOut = [] ), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( ( elem = matcherOut[ i ] ) &&\n\t\t\t\t\t\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\n\n\t\t\t\t\t\tseed[ temp ] = !( results[ temp ] = elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t} );\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t( checkContext = context ).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\n\t\t\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[ j ].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\n\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\ttokens\n\t\t\t\t\t\t.slice( 0, i - 1 )\n\t\t\t\t\t\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\n\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\n\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\toutermostContext = context == document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\n\t\t\t\t\t// Support: IE 11+, Edge 17 - 18+\n\t\t\t\t\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n\t\t\t\t\t// two documents; shallow comparisons work.\n\t\t\t\t\t// eslint-disable-next-line eqeqeq\n\t\t\t\t\tif ( !context && elem.ownerDocument != document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( ( elem = !matcher && elem ) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\n\t\t\t\t\t\t\t\tsetMatched[ i ] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[ i ] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache(\n\t\t\tselector,\n\t\t\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\n\t\t);\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\n\t\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\n\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\n\n\t\t\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\n\t\t\t\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[ i ];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ ( type = token.type ) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( ( find = Expr.find[ type ] ) ) {\n\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( ( seed = find(\n\t\t\t\t\ttoken.matches[ 0 ].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext\n\t\t\t\t) ) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert( function( el ) {\n\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\n} );\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert( function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\n} ) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert( function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n} ) ) {\n\taddHandle( \"value\", function( elem, _name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t} );\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert( function( el ) {\n\treturn el.getAttribute( \"disabled\" ) == null;\n} ) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t( val = elem.getAttributeNode( name ) ) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\t\tnull;\n\t\t}\n\t} );\n}\n\nreturn Sizzle;\n\n} )( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n}\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Filtered directly for both simple and complex selectors\n\treturn jQuery.filter( qualifier, elements, not );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, _i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\tif ( elem.contentDocument != null &&\n\n\t\t\t// Support: IE 11+\n\t\t\t// <object> elements with no `data` attribute has an object\n\t\t\t// `contentDocument` with a `null` prototype.\n\t\t\tgetProto( elem.contentDocument ) ) {\n\n\t\t\treturn elem.contentDocument;\n\t\t}\n\n\t\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n\t\t// Treat the template element as a regular one in browsers that\n\t\t// don't support it.\n\t\tif ( nodeName( elem, \"template\" ) ) {\n\t\t\telem = elem.content || elem;\n\t\t}\n\n\t\treturn jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( _i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tisFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// rejected_handlers.disable\n\t\t\t\t\t// fulfilled_handlers.disable\n\t\t\t\t\ttuples[ 3 - i ][ 3 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock,\n\n\t\t\t\t\t// progress_handlers.lock\n\t\t\t\t\ttuples[ 0 ][ 3 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the primary Deferred\n\t\t\tprimary = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tprimary.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( primary.state() === \"pending\" ||\n\t\t\t\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn primary.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );\n\t\t}\n\n\t\treturn primary.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( toType( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, _key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\t\tvalue :\n\t\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\n\n\n// Matches dashed string for camelizing\nvar rmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g;\n\n// Used by camelCase as callback to replace()\nfunction fcamelCase( _all, letter ) {\n\treturn letter.toUpperCase();\n}\n\n// Convert dashed to camelCase; used by the css and data modules\n// Support: IE <=9 - 11, Edge 12 - 15\n// Microsoft forgot to hump their vendor prefix (#9572)\nfunction camelCase( string ) {\n\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n}\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( camelCase );\n\t\t\t} else {\n\t\t\t\tkey = camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar documentElement = document.documentElement;\n\n\n\n\tvar isAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem );\n\t\t},\n\t\tcomposed = { composed: true };\n\n\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\n\t// Support: iOS 10.0-10.2 only\n\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n\t// leading to errors. We need to check for `getRootNode`.\n\tif ( documentElement.getRootNode ) {\n\t\tisAttached = function( elem ) {\n\t\t\treturn jQuery.contains( elem.ownerDocument, elem ) ||\n\t\t\t\telem.getRootNode( composed ) === elem.ownerDocument;\n\t\t};\n\t}\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tisAttached( elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted, scale,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = elem.nodeType &&\n\t\t\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Support: Firefox <=54\n\t\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n\t\tinitial = initial / 2;\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\twhile ( maxIterations-- ) {\n\n\t\t\t// Evaluate and update our best guess (doubling guesses that zero out).\n\t\t\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\t\t\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\n\t\t\t\tmaxIterations = 0;\n\t\t\t}\n\t\t\tinitialInUnit = initialInUnit / scale;\n\n\t\t}\n\n\t\tinitialInUnit = initialInUnit * 2;\n\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i );\n\nvar rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\n\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n\n\t// Support: IE <=9 only\n\t// IE <=9 replaces <option> tags with their contents when inserted outside of\n\t// the select element.\n\tdiv.innerHTML = \"<option></option>\";\n\tsupport.option = !!div.lastChild;\n} )();\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: IE <=9 only\nif ( !support.option ) {\n\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple='multiple'>\", \"</select>\" ];\n}\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, attached, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( toType( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tattached = isAttached( elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( attached ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\nvar rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 - 11+\n// focus() and blur() are asynchronous, except when they are no-op.\n// So expect focus to be synchronous when the element is already active,\n// and blur to be synchronous when the element is not already active.\n// (focus and blur are always synchronous in other supported browsers,\n// this just defines when we can count on it).\nfunction expectSync( elem, type ) {\n\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\n}\n\n// Support: IE <=9 only\n// Accessing document.activeElement can throw unexpectedly\n// https://bugs.jquery.com/ticket/13393\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Only attach events to objects that accept data\n\t\tif ( !acceptData( elem ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = Object.create( null );\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\n\t\t\t// Make a writable jQuery.Event from the native event object\n\t\t\tevent = jQuery.event.fix( nativeEvent ),\n\n\t\t\thandlers = (\n\t\t\t\tdataPriv.get( this, \"events\" ) || Object.create( null )\n\t\t\t)[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// If the event is namespaced, then each handler is only invoked if it is\n\t\t\t\t// specially universal or its namespaces are a superset of the event's.\n\t\t\t\tif ( !event.rnamespace || handleObj.namespace === false ||\n\t\t\t\t\tevent.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tclick: {\n\n\t\t\t// Utilize native event to ensure correct state for checkable inputs\n\t\t\tsetup: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Claim the first handler\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\t// dataPriv.set( el, \"click\", ... )\n\t\t\t\t\tleverageNative( el, \"click\", returnTrue );\n\t\t\t\t}\n\n\t\t\t\t// Return false to allow normal processing in the caller\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\ttrigger: function( data ) {\n\n\t\t\t\t// For mutual compressibility with _default, replace `this` access with a local var.\n\t\t\t\t// `|| data` is dead code meant only to preserve the variable through minification.\n\t\t\t\tvar el = this || data;\n\n\t\t\t\t// Force setup before triggering a click\n\t\t\t\tif ( rcheckableType.test( el.type ) &&\n\t\t\t\t\tel.click && nodeName( el, \"input\" ) ) {\n\n\t\t\t\t\tleverageNative( el, \"click\" );\n\t\t\t\t}\n\n\t\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\t\treturn true;\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, suppress native .click() on links\n\t\t\t// Also prevent it if we're currently inside a leveraged native-event stack\n\t\t\t_default: function( event ) {\n\t\t\t\tvar target = event.target;\n\t\t\t\treturn rcheckableType.test( target.type ) &&\n\t\t\t\t\ttarget.click && nodeName( target, \"input\" ) &&\n\t\t\t\t\tdataPriv.get( target, \"click\" ) ||\n\t\t\t\t\tnodeName( target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Ensure the presence of an event listener that handles manually-triggered\n// synthetic events by interrupting progress until reinvoked in response to\n// *native* events that it fires directly, ensuring that state changes have\n// already occurred before other listeners are invoked.\nfunction leverageNative( el, type, expectSync ) {\n\n\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\n\tif ( !expectSync ) {\n\t\tif ( dataPriv.get( el, type ) === undefined ) {\n\t\t\tjQuery.event.add( el, type, returnTrue );\n\t\t}\n\t\treturn;\n\t}\n\n\t// Register the controller as a special universal handler for all event namespaces\n\tdataPriv.set( el, type, false );\n\tjQuery.event.add( el, type, {\n\t\tnamespace: false,\n\t\thandler: function( event ) {\n\t\t\tvar notAsync, result,\n\t\t\t\tsaved = dataPriv.get( this, type );\n\n\t\t\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\n\n\t\t\t\t// Interrupt processing of the outer synthetic .trigger()ed event\n\t\t\t\t// Saved data should be false in such cases, but might be a leftover capture object\n\t\t\t\t// from an async native handler (gh-4350)\n\t\t\t\tif ( !saved.length ) {\n\n\t\t\t\t\t// Store arguments for use when handling the inner native event\n\t\t\t\t\t// There will always be at least one argument (an event object), so this array\n\t\t\t\t\t// will not be confused with a leftover capture object.\n\t\t\t\t\tsaved = slice.call( arguments );\n\t\t\t\t\tdataPriv.set( this, type, saved );\n\n\t\t\t\t\t// Trigger the native event and capture its result\n\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t// focus() and blur() are asynchronous\n\t\t\t\t\tnotAsync = expectSync( this, type );\n\t\t\t\t\tthis[ type ]();\n\t\t\t\t\tresult = dataPriv.get( this, type );\n\t\t\t\t\tif ( saved !== result || notAsync ) {\n\t\t\t\t\t\tdataPriv.set( this, type, false );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = {};\n\t\t\t\t\t}\n\t\t\t\t\tif ( saved !== result ) {\n\n\t\t\t\t\t\t// Cancel the outer synthetic event\n\t\t\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\t\t// Support: Chrome 86+\n\t\t\t\t\t\t// In Chrome, if an element having a focusout handler is blurred by\n\t\t\t\t\t\t// clicking outside of it, it invokes the handler synchronously. If\n\t\t\t\t\t\t// that handler calls `.remove()` on the element, the data is cleared,\n\t\t\t\t\t\t// leaving `result` undefined. We need to guard against this.\n\t\t\t\t\t\treturn result && result.value;\n\t\t\t\t\t}\n\n\t\t\t\t// If this is an inner synthetic event for an event with a bubbling surrogate\n\t\t\t\t// (focus or blur), assume that the surrogate already propagated from triggering the\n\t\t\t\t// native event and prevent that from happening again here.\n\t\t\t\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n\t\t\t\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\n\t\t\t\t// less bad than duplication.\n\t\t\t\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t}\n\n\t\t\t// If this is a native event triggered above, everything is now in order\n\t\t\t// Fire an inner synthetic event with the original arguments\n\t\t\t} else if ( saved.length ) {\n\n\t\t\t\t// ...and capture the result\n\t\t\t\tdataPriv.set( this, type, {\n\t\t\t\t\tvalue: jQuery.event.trigger(\n\n\t\t\t\t\t\t// Support: IE <=9 - 11+\n\t\t\t\t\t\t// Extend with the prototype to reset the above stopImmediatePropagation()\n\t\t\t\t\t\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\n\t\t\t\t\t\tsaved.slice( 1 ),\n\t\t\t\t\t\tthis\n\t\t\t\t\t)\n\t\t\t\t} );\n\n\t\t\t\t// Abort handling of the native event\n\t\t\t\tevent.stopImmediatePropagation();\n\t\t\t}\n\t\t}\n\t} );\n}\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || Date.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcode: true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\twhich: true\n}, jQuery.event.addProp );\n\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\n\tjQuery.event.special[ type ] = {\n\n\t\t// Utilize native event if possible so blur/focus sequence is correct\n\t\tsetup: function() {\n\n\t\t\t// Claim the first handler\n\t\t\t// dataPriv.set( this, \"focus\", ... )\n\t\t\t// dataPriv.set( this, \"blur\", ... )\n\t\t\tleverageNative( this, type, expectSync );\n\n\t\t\t// Return false to allow normal processing in the caller\n\t\t\treturn false;\n\t\t},\n\t\ttrigger: function() {\n\n\t\t\t// Force setup before trigger\n\t\t\tleverageNative( this, type );\n\n\t\t\t// Return non-false to allow normal event-path propagation\n\t\t\treturn true;\n\t\t},\n\n\t\t// Suppress native focus or blur as it's already being fired\n\t\t// in leverageNative.\n\t\t_default: function() {\n\t\t\treturn true;\n\t\t},\n\n\t\tdelegateType: delegateType\n\t};\n} );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t// Support: IE <=10 - 11, Edge 12 - 13 only\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\n\t\telem.type = elem.type.slice( 5 );\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.get( src );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdataPriv.remove( dest, \"handle events\" );\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = flat( args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tvalueIsFunction = isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( valueIsFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl && !node.noModule ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src, {\n\t\t\t\t\t\t\t\t\tnonce: node.nonce || node.getAttribute( \"nonce\" )\n\t\t\t\t\t\t\t\t}, doc );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && isAttached( node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html;\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = isAttached( elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\nvar swap = function( elem, options, callback ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.call( elem );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\n\t\t\t\"margin-top:1px;padding:0;border:0\";\n\t\tdiv.style.cssText =\n\t\t\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"width:60%;top:1%\";\n\t\tdocumentElement.appendChild( container ).appendChild( div );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\n\n\t\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.right = \"60%\";\n\t\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\n\n\t\t// Support: IE 9 - 11 only\n\t\t// Detect misreporting of content dimensions for box-sizing:border-box elements\n\t\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\n\n\t\t// Support: IE 9 only\n\t\t// Detect overflow:scroll screwiness (gh-3699)\n\t\t// Support: Chrome <=64\n\t\t// Don't get tricked when zoom affects offsetWidth (gh-4029)\n\t\tdiv.style.position = \"absolute\";\n\t\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tfunction roundPixelMeasures( measure ) {\n\t\treturn Math.round( parseFloat( measure ) );\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\n\t\treliableTrDimensionsVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tjQuery.extend( support, {\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelBoxStyles: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelBoxStylesVal;\n\t\t},\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t},\n\t\tscrollboxSize: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn scrollboxSizeVal;\n\t\t},\n\n\t\t// Support: IE 9 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Behavior in IE 9 is more subtle than in newer versions & it passes\n\t\t// some versions of this test; make sure not to make it pass there!\n\t\t//\n\t\t// Support: Firefox 70+\n\t\t// Only Firefox includes border widths\n\t\t// in computed dimensions. (gh-4529)\n\t\treliableTrDimensions: function() {\n\t\t\tvar table, tr, trChild, trStyle;\n\t\t\tif ( reliableTrDimensionsVal == null ) {\n\t\t\t\ttable = document.createElement( \"table\" );\n\t\t\t\ttr = document.createElement( \"tr\" );\n\t\t\t\ttrChild = document.createElement( \"div\" );\n\n\t\t\t\ttable.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n\t\t\t\ttr.style.cssText = \"border:1px solid\";\n\n\t\t\t\t// Support: Chrome 86+\n\t\t\t\t// Height set through cssText does not get applied.\n\t\t\t\t// Computed height then comes back as 0.\n\t\t\t\ttr.style.height = \"1px\";\n\t\t\t\ttrChild.style.height = \"9px\";\n\n\t\t\t\t// Support: Android 8 Chrome 86+\n\t\t\t\t// In our bodyBackground.html iframe,\n\t\t\t\t// display for all div elements is set to \"inline\",\n\t\t\t\t// which causes a problem only in Android 8 Chrome 86.\n\t\t\t\t// Ensuring the div is display: block\n\t\t\t\t// gets around this issue.\n\t\t\t\ttrChild.style.display = \"block\";\n\n\t\t\t\tdocumentElement\n\t\t\t\t\t.appendChild( table )\n\t\t\t\t\t.appendChild( tr )\n\t\t\t\t\t.appendChild( trChild );\n\n\t\t\t\ttrStyle = window.getComputedStyle( tr );\n\t\t\t\treliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderTopWidth, 10 ) +\n\t\t\t\t\tparseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;\n\n\t\t\t\tdocumentElement.removeChild( table );\n\t\t\t}\n\t\t\treturn reliableTrDimensionsVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !isAttached( elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style,\n\tvendorProps = {};\n\n// Return a vendor-prefixed property or undefined\nfunction vendorPropName( name ) {\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\nfunction finalPropName( name ) {\n\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\n\n\tif ( final ) {\n\t\treturn final;\n\t}\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\treturn vendorProps[ name ] = vendorPropName( name ) || name;\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t};\n\nfunction setPositiveNumber( _elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\n\tvar i = dimension === \"width\" ? 1 : 0,\n\t\textra = 0,\n\t\tdelta = 0;\n\n\t// Adjustment may not be necessary\n\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\treturn 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin\n\t\tif ( box === \"margin\" ) {\n\t\t\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\t// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\t\tif ( !isBorderBox ) {\n\n\t\t\t// Add padding\n\t\t\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// For \"border\" or \"margin\", add border\n\t\t\tif ( box !== \"padding\" ) {\n\t\t\t\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\n\t\t\t// But still keep track of it otherwise\n\t\t\t} else {\n\t\t\t\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\n\t\t// If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n\t\t// \"padding\" or \"margin\"\n\t\t} else {\n\n\t\t\t// For \"content\", subtract padding\n\t\t\tif ( box === \"content\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// For \"content\" or \"padding\", subtract border\n\t\t\tif ( box !== \"margin\" ) {\n\t\t\t\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Account for positive content-box scroll gutter when requested by providing computedVal\n\tif ( !isBorderBox && computedVal >= 0 ) {\n\n\t\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n\t\t// Assuming integer scroll gutter, subtract the rest and round down\n\t\tdelta += Math.max( 0, Math.ceil(\n\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\tcomputedVal -\n\t\t\tdelta -\n\t\t\textra -\n\t\t\t0.5\n\n\t\t// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n\t\t// Use an explicit zero to avoid NaN (gh-3964)\n\t\t) ) || 0;\n\t}\n\n\treturn delta;\n}\n\nfunction getWidthOrHeight( elem, dimension, extra ) {\n\n\t// Start with computed style\n\tvar styles = getStyles( elem ),\n\n\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n\t\t// Fake content-box until we know it's needed to know the true value.\n\t\tboxSizingNeeded = !support.boxSizingReliable() || extra,\n\t\tisBorderBox = boxSizingNeeded &&\n\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\tvalueIsBorderBox = isBorderBox,\n\n\t\tval = curCSS( elem, dimension, styles ),\n\t\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\n\n\t// Support: Firefox <=54\n\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\n\tif ( rnumnonpx.test( val ) ) {\n\t\tif ( !extra ) {\n\t\t\treturn val;\n\t\t}\n\t\tval = \"auto\";\n\t}\n\n\n\t// Support: IE 9 - 11 only\n\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\n\t// In those cases, the computed value can be trusted to be border-box.\n\tif ( ( !support.boxSizingReliable() && isBorderBox ||\n\n\t\t// Support: IE 10 - 11+, Edge 15 - 18+\n\t\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\n\t\t// set in CSS while `offset*` properties report correct values.\n\t\t// Interestingly, in some cases IE 9 doesn't suffer from this issue.\n\t\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\n\n\t\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\n\t\t// This happens for inline elements with no explicit setting (gh-3571)\n\t\tval === \"auto\" ||\n\n\t\t// Support: Android <=4.1 - 4.3 only\n\t\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\t\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\n\n\t\t// Make sure the element is visible & connected\n\t\telem.getClientRects().length ) {\n\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\n\t\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n\t\t// retrieved value as a content box dimension.\n\t\tvalueIsBorderBox = offsetProp in elem;\n\t\tif ( valueIsBorderBox ) {\n\t\t\tval = elem[ offsetProp ];\n\t\t}\n\t}\n\n\t// Normalize \"\" and auto\n\tval = parseFloat( val ) || 0;\n\n\t// Adjust for the element's box model\n\treturn ( val +\n\t\tboxModelAdjustment(\n\t\t\telem,\n\t\t\tdimension,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles,\n\n\t\t\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\n\t\t\tval\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"gridArea\": true,\n\t\t\"gridColumn\": true,\n\t\t\"gridColumnEnd\": true,\n\t\t\"gridColumnStart\": true,\n\t\t\"gridRow\": true,\n\t\t\"gridRowEnd\": true,\n\t\t\"gridRowStart\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n\t\t\t// \"px\" to a few hardcoded values.\n\t\t\tif ( type === \"number\" && !isCustomProp ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\n\tjQuery.cssHooks[ dimension ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, dimension, extra );\n\t\t\t\t\t} ) :\n\t\t\t\t\tgetWidthOrHeight( elem, dimension, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = getStyles( elem ),\n\n\t\t\t\t// Only read styles.position if the test has a chance to fail\n\t\t\t\t// to avoid forcing a reflow.\n\t\t\t\tscrollboxSizeBuggy = !support.scrollboxSize() &&\n\t\t\t\t\tstyles.position === \"absolute\",\n\n\t\t\t\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n\t\t\t\tboxSizingNeeded = scrollboxSizeBuggy || extra,\n\t\t\t\tisBorderBox = boxSizingNeeded &&\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\tsubtract = extra ?\n\t\t\t\t\tboxModelAdjustment(\n\t\t\t\t\t\telem,\n\t\t\t\t\t\tdimension,\n\t\t\t\t\t\textra,\n\t\t\t\t\t\tisBorderBox,\n\t\t\t\t\t\tstyles\n\t\t\t\t\t) :\n\t\t\t\t\t0;\n\n\t\t\t// Account for unreliable border-box dimensions by comparing offset* to computed and\n\t\t\t// faking a content-box to get border and padding (gh-3699)\n\t\t\tif ( isBorderBox && scrollboxSizeBuggy ) {\n\t\t\t\tsubtract -= Math.ceil(\n\t\t\t\t\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\n\t\t\t\t\tparseFloat( styles[ dimension ] ) -\n\t\t\t\t\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\n\t\t\t\t\t0.5\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ dimension ] = value;\n\t\t\t\tvalue = jQuery.css( elem, dimension );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( prefix !== \"margin\" ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 && (\n\t\t\t\tjQuery.cssHooks[ tween.prop ] ||\n\t\t\t\t\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = Date.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 15\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY and Edge just mirrors\n\t\t// the overflowX value there.\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tresult.stop.bind( result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tisFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\n\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = Date.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( _i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\nfunction classesToArray( value ) {\n\tif ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\tif ( typeof value === \"string\" ) {\n\t\treturn value.match( rnothtmlwhite ) || [];\n\t}\n\treturn [];\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tclasses = classesToArray( value );\n\n\t\tif ( classes.length ) {\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value,\n\t\t\tisValidValue = type === \"string\" || Array.isArray( value );\n\n\t\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( isValidValue ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = classesToArray( value );\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, valueIsFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvalueIsFunction = isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( valueIsFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\tstopPropagationCallback = function( e ) {\n\t\te.stopPropagation();\n\t};\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = lastElement = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tlastElement = cur;\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || Object.create( null ) )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.addEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\telem[ type ]();\n\n\t\t\t\t\tif ( event.isPropagationStopped() ) {\n\t\t\t\t\t\tlastElement.removeEventListener( type, stopPropagationCallback );\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\n\t\t\t\t// Handle: regular nodes (via `this.ownerDocument`), window\n\t\t\t\t// (via `this.document`) & document (via `this`).\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this.document || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = { guid: Date.now() };\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, parserErrorElem;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {}\n\n\tparserErrorElem = xml && xml.getElementsByTagName( \"parsererror\" )[ 0 ];\n\tif ( !xml || parserErrorElem ) {\n\t\tjQuery.error( \"Invalid XML: \" + (\n\t\t\tparserErrorElem ?\n\t\t\t\tjQuery.map( parserErrorElem.childNodes, function( el ) {\n\t\t\t\t\treturn el.textContent;\n\t\t\t\t} ).join( \"\\n\" ) :\n\t\t\t\tdata\n\t\t) );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && toType( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\tif ( a == null ) {\n\t\treturn \"\";\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} ).filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} ).map( function( _i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\noriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\n\t\t\t\t\t\t\t\t\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\n\t\t\t\t\t\t\t\t\t\t.concat( match[ 2 ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match.join( \", \" );\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 15\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available and should be processed, append data to url\n\t\t\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\n\t\t\t\t\tuncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Use a noop converter for missing script but not if jsonp\n\t\t\tif ( !isSuccess &&\n\t\t\t\tjQuery.inArray( \"script\", s.dataTypes ) > -1 &&\n\t\t\t\tjQuery.inArray( \"json\", s.dataTypes ) < 0 ) {\n\t\t\t\ts.converters[ \"text script\" ] = function() {};\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\njQuery.ajaxPrefilter( function( s ) {\n\tvar i;\n\tfor ( i in s.headers ) {\n\t\tif ( i.toLowerCase() === \"content-type\" ) {\n\t\t\ts.contentType = s.headers[ i ] || \"\";\n\t\t}\n\t}\n} );\n\n\njQuery._evalUrl = function( url, options, doc ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\n\t\t// Only evaluate the response if it is successful (gh-4126)\n\t\t// dataFilter is not invoked for failure responses, so using it instead\n\t\t// of the default converter is kludgy but it works.\n\t\tconverters: {\n\t\t\t\"text script\": function() {}\n\t\t},\n\t\tdataFilter: function( response ) {\n\t\t\tjQuery.globalEval( response, options, doc );\n\t\t}\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar htmlIsFunction = isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.ontimeout =\n\t\t\t\t\t\t\t\t\txhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain or forced-by-attrs requests\n\tif ( s.crossDomain || s.scriptAttrs ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" )\n\t\t\t\t\t.attr( s.scriptAttrs || {} )\n\t\t\t\t\t.prop( { charset: s.scriptCharset, src: s.url } )\n\t\t\t\t\t.on( \"load error\", callback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\n\t// offset() relates an element's border box to the document origin\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\t\trect = elem.getBoundingClientRect();\n\t\twin = elem.ownerDocument.defaultView;\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset,\n\t\t\tleft: rect.left + win.pageXOffset\n\t\t};\n\t},\n\n\t// position() relates an element's margin box to its offset parent's padding box\n\t// This corresponds to the behavior of CSS absolute positioning\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset, doc,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// position:fixed elements are offset from the viewport, which itself always has zero offset\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume position:fixed implies availability of getBoundingClientRect\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\toffset = this.offset();\n\n\t\t\t// Account for the *real* offset parent, which can be the document or its root element\n\t\t\t// when a statically positioned element is identified\n\t\t\tdoc = elem.ownerDocument;\n\t\t\toffsetParent = elem.offsetParent || doc.documentElement;\n\t\t\twhile ( offsetParent &&\n\t\t\t\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\n\t\t\t\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\n\t\t\t\toffsetParent = offsetParent.parentNode;\n\t\t\t}\n\t\t\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\n\n\t\t\t\t// Incorporate borders into its offset, since they are outside its content origin\n\t\t\t\tparentOffset = jQuery( offsetParent ).offset();\n\t\t\t\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\n\t\t\t\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\n\t\t\t}\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( {\n\t\tpadding: \"inner\" + name,\n\t\tcontent: type,\n\t\t\"\": \"outer\" + name\n\t}, function( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( _i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t},\n\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\njQuery.each(\n\t( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( _i, name ) {\n\n\t\t// Handle event binding\n\t\tjQuery.fn[ name ] = function( data, fn ) {\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\tthis.on( name, null, data, fn ) :\n\t\t\t\tthis.trigger( name );\n\t\t};\n\t}\n);\n\n\n\n\n// Support: Android <=4.0 only\n// Make sure we trim BOM and NBSP\nvar rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n// Bind a function to a context, optionally partially applying any\n// arguments.\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n// However, it is not slated for removal any time soon\njQuery.proxy = function( fn, context ) {\n\tvar tmp, args, proxy;\n\n\tif ( typeof context === \"string\" ) {\n\t\ttmp = fn[ context ];\n\t\tcontext = fn;\n\t\tfn = tmp;\n\t}\n\n\t// Quick check to determine if target is callable, in the spec\n\t// this throws a TypeError, but we will just return undefined.\n\tif ( !isFunction( fn ) ) {\n\t\treturn undefined;\n\t}\n\n\t// Simulated bind\n\targs = slice.call( arguments, 2 );\n\tproxy = function() {\n\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t};\n\n\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\treturn proxy;\n};\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\njQuery.isFunction = isFunction;\njQuery.isWindow = isWindow;\njQuery.camelCase = camelCase;\njQuery.type = toType;\n\njQuery.now = Date.now;\n\njQuery.isNumeric = function( obj ) {\n\n\t// As of jQuery 3.0, isNumeric is limited to\n\t// strings and numbers (primitives or objects)\n\t// that can be coerced to finite numbers (gh-2662)\n\tvar type = jQuery.type( obj );\n\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\t!isNaN( obj - parseFloat( obj ) );\n};\n\njQuery.trim = function( text ) {\n\treturn text == null ?\n\t\t\"\" :\n\t\t( text + \"\" ).replace( rtrim, \"\" );\n};\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( true ) {\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n\t\treturn jQuery;\n\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === \"undefined\" ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/jQuery/dist/jquery.js\n");

/***/ }),

/***/ "./resources/sass/app.scss":
/*!*********************************!*\
  !*** ./resources/sass/app.scss ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9hcHAuc2Nzcz9hODBiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/sass/app.scss\n");

/***/ }),

/***/ "./resources/sass/custom.scss":
/*!************************************!*\
  !*** ./resources/sass/custom.scss ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvc2Fzcy9jdXN0b20uc2Nzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvc2Fzcy9jdXN0b20uc2Nzcz8yNTgyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/sass/custom.scss\n");

/***/ }),

/***/ "./resources/css/front.css":
/*!*********************************!*\
  !*** ./resources/css/front.css ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvY3NzL2Zyb250LmNzcy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvY3NzL2Zyb250LmNzcz8yYzg0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/css/front.css\n");

/***/ }),

/***/ "./resources/css/mail-invoice.css":
/*!****************************************!*\
  !*** ./resources/css/mail-invoice.css ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvY3NzL21haWwtaW52b2ljZS5jc3MuanMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2Nzcy9tYWlsLWludm9pY2UuY3NzP2E1NjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/css/mail-invoice.css\n");

/***/ }),

/***/ "./node_modules/summernote/dist/summernote-bs5.min.js":
/*!************************************************************!*\
  !*** ./node_modules/summernote/dist/summernote-bs5.min.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*! Summernote v0.8.20 | (c) 2013- Alan Hong and contributors | MIT license */\n!function(t,e){if(true)module.exports=e(__webpack_require__(/*! jQuery */ \"./node_modules/jQuery/dist/jquery.js\"));else { var o, n; }}(self,(function(t){return(()=>{\"use strict\";var e={9770:(t,e,n)=>{var o=n(1145),i=n.n(o);i().summernote=i().summernote||{lang:{}},i().extend(i().summernote.lang,{\"en-US\":{font:{bold:\"Bold\",italic:\"Italic\",underline:\"Underline\",clear:\"Remove Font Style\",height:\"Line Height\",name:\"Font Family\",strikethrough:\"Strikethrough\",subscript:\"Subscript\",superscript:\"Superscript\",size:\"Font Size\",sizeunit:\"Font Size Unit\"},image:{image:\"Picture\",insert:\"Insert Image\",resizeFull:\"Resize full\",resizeHalf:\"Resize half\",resizeQuarter:\"Resize quarter\",resizeNone:\"Original size\",floatLeft:\"Float Left\",floatRight:\"Float Right\",floatNone:\"Remove float\",shapeRounded:\"Shape: Rounded\",shapeCircle:\"Shape: Circle\",shapeThumbnail:\"Shape: Thumbnail\",shapeNone:\"Shape: None\",dragImageHere:\"Drag image or text here\",dropImage:\"Drop image or Text\",selectFromFiles:\"Select from files\",maximumFileSize:\"Maximum file size\",maximumFileSizeError:\"Maximum file size exceeded.\",url:\"Image URL\",remove:\"Remove Image\",original:\"Original\"},video:{video:\"Video\",videoLink:\"Video Link\",insert:\"Insert Video\",url:\"Video URL\",providers:\"(YouTube, Google Drive, Vimeo, Vine, Instagram, DailyMotion, Youku, Peertube)\"},link:{link:\"Link\",insert:\"Insert Link\",unlink:\"Unlink\",edit:\"Edit\",textToDisplay:\"Text to display\",url:\"To what URL should this link go?\",openInNewWindow:\"Open in new window\",useProtocol:\"Use default protocol\"},table:{table:\"Table\",addRowAbove:\"Add row above\",addRowBelow:\"Add row below\",addColLeft:\"Add column left\",addColRight:\"Add column right\",delRow:\"Delete row\",delCol:\"Delete column\",delTable:\"Delete table\"},hr:{insert:\"Insert Horizontal Rule\"},style:{style:\"Style\",p:\"Normal\",blockquote:\"Quote\",pre:\"Code\",h1:\"Header 1\",h2:\"Header 2\",h3:\"Header 3\",h4:\"Header 4\",h5:\"Header 5\",h6:\"Header 6\"},lists:{unordered:\"Unordered list\",ordered:\"Ordered list\"},options:{help:\"Help\",fullscreen:\"Full Screen\",codeview:\"Code View\"},paragraph:{paragraph:\"Paragraph\",outdent:\"Outdent\",indent:\"Indent\",left:\"Align left\",center:\"Align center\",right:\"Align right\",justify:\"Justify full\"},color:{recent:\"Recent Color\",more:\"More Color\",background:\"Background Color\",foreground:\"Text Color\",transparent:\"Transparent\",setTransparent:\"Set transparent\",reset:\"Reset\",resetToDefault:\"Reset to default\",cpSelect:\"Select\"},shortcut:{shortcuts:\"Keyboard shortcuts\",close:\"Close\",textFormatting:\"Text formatting\",action:\"Action\",paragraphFormatting:\"Paragraph formatting\",documentStyle:\"Document Style\",extraKeys:\"Extra keys\"},help:{escape:\"Escape\",insertParagraph:\"Insert Paragraph\",undo:\"Undo the last command\",redo:\"Redo the last command\",tab:\"Tab\",untab:\"Untab\",bold:\"Set a bold style\",italic:\"Set a italic style\",underline:\"Set a underline style\",strikethrough:\"Set a strikethrough style\",removeFormat:\"Clean a style\",justifyLeft:\"Set left align\",justifyCenter:\"Set center align\",justifyRight:\"Set right align\",justifyFull:\"Set full align\",insertUnorderedList:\"Toggle unordered list\",insertOrderedList:\"Toggle ordered list\",outdent:\"Outdent on current paragraph\",indent:\"Indent on current paragraph\",formatPara:\"Change current block's format as a paragraph(P tag)\",formatH1:\"Change current block's format as H1\",formatH2:\"Change current block's format as H2\",formatH3:\"Change current block's format as H3\",formatH4:\"Change current block's format as H4\",formatH5:\"Change current block's format as H5\",formatH6:\"Change current block's format as H6\",insertHorizontalRule:\"Insert horizontal rule\",\"linkDialog.show\":\"Show Link Dialog\"},history:{undo:\"Undo\",redo:\"Redo\"},specialChar:{specialChar:\"SPECIAL CHARACTERS\",select:\"Select Special characters\"},output:{noSelection:\"No Selection Made!\"}}})},1145:e=>{e.exports=t}},n={};function o(t){var i=n[t];if(void 0!==i)return i.exports;var r=n[t]={exports:{}};return e[t](r,r.exports,o),r.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var i={};return(()=>{o.r(i);var t=o(1145),e=o.n(t),n=(o(9770),[\"sans-serif\",\"serif\",\"monospace\",\"cursive\",\"fantasy\"]);function r(t){return-1===e().inArray(t.toLowerCase(),n)?\"'\".concat(t,\"'\"):t}var a,s=navigator.userAgent,l=/MSIE|Trident/i.test(s);if(l){var c=/MSIE (\\d+[.]\\d+)/.exec(s);c&&(a=parseFloat(c[1])),(c=/Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(s))&&(a=parseFloat(c[1]))}var u=/Edge\\/\\d+/.test(s),d=\"ontouchstart\"in window||navigator.MaxTouchPoints>0||navigator.msMaxTouchPoints>0,h=l?\"DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted\":\"input\";const f={isMac:navigator.appVersion.indexOf(\"Mac\")>-1,isMSIE:l,isEdge:u,isFF:!u&&/firefox/i.test(s),isPhantom:/PhantomJS/i.test(s),isWebkit:!u&&/webkit/i.test(s),isChrome:!u&&/chrome/i.test(s),isSafari:!u&&/safari/i.test(s)&&!/chrome/i.test(s),browserVersion:a,isSupportTouch:d,isFontInstalled:function(t){var e=\"Comic Sans MS\"===t?\"Courier New\":\"Comic Sans MS\",n=\"mmmmmmmmmmwwwww\",o=document.createElement(\"canvas\").getContext(\"2d\");o.font=\"200px '\"+e+\"'\";var i=o.measureText(n).width;return o.font=\"200px \"+r(t)+', \"'+e+'\"',i!==o.measureText(n).width},isW3CRangeSupport:!!document.createRange,inputEventName:h,genericFontFamilies:n,validFontName:r};var p=0;const m={eq:function(t){return function(e){return t===e}},eq2:function(t,e){return t===e},peq2:function(t){return function(e,n){return e[t]===n[t]}},ok:function(){return!0},fail:function(){return!1},self:function(t){return t},not:function(t){return function(){return!t.apply(t,arguments)}},and:function(t,e){return function(n){return t(n)&&e(n)}},invoke:function(t,e){return function(){return t[e].apply(t,arguments)}},resetUniqueId:function(){p=0},uniqueId:function(t){var e=++p+\"\";return t?t+e:e},rect2bnd:function(t){var n=e()(document);return{top:t.top+n.scrollTop(),left:t.left+n.scrollLeft(),width:t.right-t.left,height:t.bottom-t.top}},invertObject:function(t){var e={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[t[n]]=n);return e},namespaceToCamel:function(t,e){return(e=e||\"\")+t.split(\".\").map((function(t){return t.substring(0,1).toUpperCase()+t.substring(1)})).join(\"\")},debounce:function(t,e,n){var o;return function(){var i=this,r=arguments,a=function(){o=null,n||t.apply(i,r)},s=n&&!o;clearTimeout(o),o=setTimeout(a,e),s&&t.apply(i,r)}},isValidUrl:function(t){return/[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi.test(t)}};function v(t){return t[0]}function g(t){return t[t.length-1]}function b(t){return t.slice(1)}function y(t,e){if(t&&t.length&&e){if(t.indexOf)return-1!==t.indexOf(e);if(t.contains)return t.contains(e)}return!1}const k={head:v,last:g,initial:function(t){return t.slice(0,t.length-1)},tail:b,prev:function(t,e){if(t&&t.length&&e){var n=t.indexOf(e);return-1===n?null:t[n-1]}return null},next:function(t,e){if(t&&t.length&&e){var n=t.indexOf(e);return-1===n?null:t[n+1]}return null},find:function(t,e){for(var n=0,o=t.length;n<o;n++){var i=t[n];if(e(i))return i}},contains:y,all:function(t,e){for(var n=0,o=t.length;n<o;n++)if(!e(t[n]))return!1;return!0},sum:function(t,e){return e=e||m.self,t.reduce((function(t,n){return t+e(n)}),0)},from:function(t){for(var e=[],n=t.length,o=-1;++o<n;)e[o]=t[o];return e},isEmpty:function(t){return!t||!t.length},clusterBy:function(t,e){return t.length?b(t).reduce((function(t,n){var o=g(t);return e(g(o),n)?o[o.length]=n:t[t.length]=[n],t}),[[v(t)]]):[]},compact:function(t){for(var e=[],n=0,o=t.length;n<o;n++)t[n]&&e.push(t[n]);return e},unique:function(t){for(var e=[],n=0,o=t.length;n<o;n++)y(e,t[n])||e.push(t[n]);return e}};var w=String.fromCharCode(160);function C(t){return t&&e()(t).hasClass(\"note-editable\")}function x(t){return t=t.toUpperCase(),function(e){return e&&e.nodeName.toUpperCase()===t}}function S(t){return t&&3===t.nodeType}function T(t){return t&&/^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT|^AUDIO|^VIDEO|^EMBED/.test(t.nodeName.toUpperCase())}function E(t){return!C(t)&&(t&&/^DIV|^P|^LI|^H[1-7]/.test(t.nodeName.toUpperCase()))}var I=x(\"PRE\"),$=x(\"LI\");var N=x(\"TABLE\"),P=x(\"DATA\");function R(t){return!(H(t)||L(t)||A(t)||E(t)||N(t)||D(t)||P(t))}function L(t){return t&&/^UL|^OL/.test(t.nodeName.toUpperCase())}var A=x(\"HR\");function F(t){return t&&/^TD|^TH/.test(t.nodeName.toUpperCase())}var D=x(\"BLOCKQUOTE\");function H(t){return F(t)||D(t)||C(t)}var z=x(\"A\");var B=x(\"BODY\");var M=f.isMSIE&&f.browserVersion<11?\"&nbsp;\":\"<br>\";function O(t){return S(t)?t.nodeValue.length:t?t.childNodes.length:0}function U(t){var e=O(t);return 0===e||(!S(t)&&1===e&&t.innerHTML===M||!(!k.all(t.childNodes,S)||\"\"!==t.innerHTML))}function j(t){T(t)||O(t)||(t.innerHTML=M)}function W(t,e){for(;t;){if(e(t))return t;if(C(t))break;t=t.parentNode}return null}function K(t,e){e=e||m.fail;var n=[];return W(t,(function(t){return C(t)||n.push(t),e(t)})),n}function V(t,e){e=e||m.fail;for(var n=[];t&&!e(t);)n.push(t),t=t.nextSibling;return n}function q(t,e){var n=e.nextSibling,o=e.parentNode;return n?o.insertBefore(t,n):o.appendChild(t),t}function _(t,n){return e().each(n,(function(e,n){t.appendChild(n)})),t}function G(t){return 0===t.offset}function Y(t){return t.offset===O(t.node)}function Z(t){return G(t)||Y(t)}function Q(t,e){for(;t&&t!==e;){if(0!==J(t))return!1;t=t.parentNode}return!0}function X(t,e){if(!e)return!1;for(;t&&t!==e;){if(J(t)!==O(t.parentNode)-1)return!1;t=t.parentNode}return!0}function J(t){for(var e=0;t=t.previousSibling;)e+=1;return e}function tt(t){return!!(t&&t.childNodes&&t.childNodes.length)}function et(t,e){var n,o;if(0===t.offset){if(C(t.node))return null;n=t.node.parentNode,o=J(t.node)}else tt(t.node)?o=O(n=t.node.childNodes[t.offset-1]):(n=t.node,o=e?0:t.offset-1);return{node:n,offset:o}}function nt(t,e){var n,o;if(O(t.node)===t.offset){if(C(t.node))return null;var i=it(t.node);i?(n=i,o=0):(n=t.node.parentNode,o=J(t.node)+1)}else tt(t.node)?(n=t.node.childNodes[t.offset],o=0):(n=t.node,o=e?O(t.node):t.offset+1);return{node:n,offset:o}}function ot(t,e){var n,o=0;if(U(t.node))return null===t.node?null:{node:n=t.node.nextSibling,offset:o=0};if(O(t.node)===t.offset){if(C(t.node))return null;n=t.node.parentNode,o=J(t.node)+1,C(n)&&(n=t.node.nextSibling,o=0)}else if(tt(t.node)){if(o=0,U(n=t.node.childNodes[t.offset]))return U(t.node.nextSibling)?null:{node:t.node.nextSibling,offset:o}}else if(n=t.node,o=e?O(t.node):t.offset+1,U(n))return null;return{node:n,offset:o}}function it(t){if(t.nextSibling&&t.parent===t.nextSibling.parent)return S(t.nextSibling)?t.nextSibling:it(t.nextSibling)}function rt(t,e){return t.node===e.node&&t.offset===e.offset}function at(t,e){var n=e&&e.isSkipPaddingBlankHTML,o=e&&e.isNotSplitEdgePoint,i=e&&e.isDiscardEmptySplits;if(i&&(n=!0),Z(t)&&(S(t.node)||o)){if(G(t))return t.node;if(Y(t))return t.node.nextSibling}if(S(t.node))return t.node.splitText(t.offset);var r=t.node.childNodes[t.offset],a=q(t.node.cloneNode(!1),t.node);return _(a,V(r)),n||(j(t.node),j(a)),i&&(U(t.node)&&ct(t.node),U(a))?(ct(a),t.node.nextSibling):a}function st(t,e,n){var o=K(e.node,m.eq(t));return o.length?1===o.length?at(e,n):o.reduce((function(t,o){return t===e.node&&(t=at(e,n)),at({node:o,offset:t?J(t):O(o)},n)})):null}function lt(t){return document.createElement(t)}function ct(t,e){if(t&&t.parentNode){if(t.removeNode)return t.removeNode(e);var n=t.parentNode;if(!e){for(var o=[],i=0,r=t.childNodes.length;i<r;i++)o.push(t.childNodes[i]);for(var a=0,s=o.length;a<s;a++)n.insertBefore(o[a],t)}n.removeChild(t)}}var ut=x(\"TEXTAREA\");function dt(t,e){var n=ut(t[0])?t.val():t.html();return e?n.replace(/[\\n\\r]/g,\"\"):n}const ht={NBSP_CHAR:w,ZERO_WIDTH_NBSP_CHAR:\"\\ufeff\",blank:M,emptyPara:\"<p>\".concat(M,\"</p>\"),makePredByNodeName:x,isEditable:C,isControlSizing:function(t){return t&&e()(t).hasClass(\"note-control-sizing\")},isText:S,isElement:function(t){return t&&1===t.nodeType},isVoid:T,isPara:E,isPurePara:function(t){return E(t)&&!$(t)},isHeading:function(t){return t&&/^H[1-7]/.test(t.nodeName.toUpperCase())},isInline:R,isBlock:m.not(R),isBodyInline:function(t){return R(t)&&!W(t,E)},isBody:B,isParaInline:function(t){return R(t)&&!!W(t,E)},isPre:I,isList:L,isTable:N,isData:P,isCell:F,isBlockquote:D,isBodyContainer:H,isAnchor:z,isDiv:x(\"DIV\"),isLi:$,isBR:x(\"BR\"),isSpan:x(\"SPAN\"),isB:x(\"B\"),isU:x(\"U\"),isS:x(\"S\"),isI:x(\"I\"),isImg:x(\"IMG\"),isTextarea:ut,deepestChildIsEmpty:function(t){do{if(null===t.firstElementChild||\"\"===t.firstElementChild.innerHTML)break}while(t=t.firstElementChild);return U(t)},isEmpty:U,isEmptyAnchor:m.and(z,U),isClosestSibling:function(t,e){return t.nextSibling===e||t.previousSibling===e},withClosestSiblings:function(t,e){e=e||m.ok;var n=[];return t.previousSibling&&e(t.previousSibling)&&n.push(t.previousSibling),n.push(t),t.nextSibling&&e(t.nextSibling)&&n.push(t.nextSibling),n},nodeLength:O,isLeftEdgePoint:G,isRightEdgePoint:Y,isEdgePoint:Z,isLeftEdgeOf:Q,isRightEdgeOf:X,isLeftEdgePointOf:function(t,e){return G(t)&&Q(t.node,e)},isRightEdgePointOf:function(t,e){return Y(t)&&X(t.node,e)},prevPoint:et,nextPoint:nt,nextPointWithEmptyNode:ot,isSamePoint:rt,isVisiblePoint:function(t){if(S(t.node)||!tt(t.node)||U(t.node))return!0;var e=t.node.childNodes[t.offset-1],n=t.node.childNodes[t.offset];return!((e&&!T(e)||n&&!T(n))&&!N(n))},prevPointUntil:function(t,e){for(;t;){if(e(t))return t;t=et(t)}return null},nextPointUntil:function(t,e){for(;t;){if(e(t))return t;t=nt(t)}return null},isCharPoint:function(t){if(!S(t.node))return!1;var e=t.node.nodeValue.charAt(t.offset-1);return e&&\" \"!==e&&e!==w},isSpacePoint:function(t){if(!S(t.node))return!1;var e=t.node.nodeValue.charAt(t.offset-1);return\" \"===e||e===w},walkPoint:function(t,e,n,o){for(var i=t;i&&(n(i),!rt(i,e));){i=ot(i,o&&t.node!==i.node&&e.node!==i.node)}},ancestor:W,singleChildAncestor:function(t,e){for(t=t.parentNode;t&&1===O(t);){if(e(t))return t;if(C(t))break;t=t.parentNode}return null},listAncestor:K,lastAncestor:function(t,e){var n=K(t);return k.last(n.filter(e))},listNext:V,listPrev:function(t,e){e=e||m.fail;for(var n=[];t&&!e(t);)n.push(t),t=t.previousSibling;return n},listDescendant:function(t,e){var n=[];return e=e||m.ok,function o(i){t!==i&&e(i)&&n.push(i);for(var r=0,a=i.childNodes.length;r<a;r++)o(i.childNodes[r])}(t),n},commonAncestor:function(t,e){for(var n=K(t),o=e;o;o=o.parentNode)if(n.indexOf(o)>-1)return o;return null},wrap:function(t,n){var o=t.parentNode,i=e()(\"<\"+n+\">\")[0];return o.insertBefore(i,t),i.appendChild(t),i},insertAfter:q,appendChildNodes:_,position:J,hasChildren:tt,makeOffsetPath:function(t,e){return K(e,m.eq(t)).map(J).reverse()},fromOffsetPath:function(t,e){for(var n=t,o=0,i=e.length;o<i;o++)n=n.childNodes.length<=e[o]?n.childNodes[n.childNodes.length-1]:n.childNodes[e[o]];return n},splitTree:st,splitPoint:function(t,e){var n,o,i=e?E:H,r=K(t.node,i),a=k.last(r)||t.node;i(a)?(n=r[r.length-2],o=a):o=(n=a).parentNode;var s=n&&st(n,t,{isSkipPaddingBlankHTML:e,isNotSplitEdgePoint:e});return s||o!==t.node||(s=t.node.childNodes[t.offset]),{rightNode:s,container:o}},create:lt,createText:function(t){return document.createTextNode(t)},remove:ct,removeWhile:function(t,e){for(;t&&!C(t)&&e(t);){var n=t.parentNode;ct(t),t=n}},replace:function(t,e){if(t.nodeName.toUpperCase()===e.toUpperCase())return t;var n=lt(e);return t.style.cssText&&(n.style.cssText=t.style.cssText),_(n,k.from(t.childNodes)),q(n,t),ct(t),n},html:function(t,e){var n=dt(t);if(e){n=(n=n.replace(/<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g,(function(t,e,n){n=n.toUpperCase();var o=/^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(n)&&!!e,i=/^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(n);return t+(o||i?\"\\n\":\"\")}))).trim()}return n},value:dt,posFromPlaceholder:function(t){var n=e()(t),o=n.offset(),i=n.outerHeight(!0);return{left:o.left,top:o.top+i}},attachEvents:function(t,e){Object.keys(e).forEach((function(n){t.on(n,e[n])}))},detachEvents:function(t,e){Object.keys(e).forEach((function(n){t.off(n,e[n])}))},isCustomStyleTag:function(t){return t&&!S(t)&&k.contains(t.classList,\"note-styletag\")}};function ft(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var pt=function(){function t(n,o){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.$note=n,this.memos={},this.modules={},this.layoutInfo={},this.options=e().extend(!0,{},o),e().summernote.ui=e().summernote.ui_template(this.options),this.ui=e().summernote.ui,this.initialize()}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){return this.layoutInfo=this.ui.createLayout(this.$note),this._initialize(),this.$note.hide(),this}},{key:\"destroy\",value:function(){this._destroy(),this.$note.removeData(\"summernote\"),this.ui.removeLayout(this.$note,this.layoutInfo)}},{key:\"reset\",value:function(){var t=this.isDisabled();this.code(ht.emptyPara),this._destroy(),this._initialize(),t&&this.disable()}},{key:\"_initialize\",value:function(){var t=this;this.options.id=m.uniqueId(e().now()),this.options.container=this.options.container||this.layoutInfo.editor;var n=e().extend({},this.options.buttons);Object.keys(n).forEach((function(e){t.memo(\"button.\"+e,n[e])}));var o=e().extend({},this.options.modules,e().summernote.plugins||{});Object.keys(o).forEach((function(e){t.module(e,o[e],!0)})),Object.keys(this.modules).forEach((function(e){t.initializeModule(e)}))}},{key:\"_destroy\",value:function(){var t=this;Object.keys(this.modules).reverse().forEach((function(e){t.removeModule(e)})),Object.keys(this.memos).forEach((function(e){t.removeMemo(e)})),this.triggerEvent(\"destroy\",this)}},{key:\"code\",value:function(t){var e=this.invoke(\"codeview.isActivated\");if(void 0===t)return this.invoke(\"codeview.sync\"),e?this.layoutInfo.codable.val():this.layoutInfo.editable.html();e?this.invoke(\"codeview.sync\",t):this.layoutInfo.editable.html(t),this.$note.val(t),this.triggerEvent(\"change\",t,this.layoutInfo.editable)}},{key:\"isDisabled\",value:function(){return\"false\"===this.layoutInfo.editable.attr(\"contenteditable\")}},{key:\"enable\",value:function(){this.layoutInfo.editable.attr(\"contenteditable\",!0),this.invoke(\"toolbar.activate\",!0),this.triggerEvent(\"disable\",!1),this.options.editing=!0}},{key:\"disable\",value:function(){this.invoke(\"codeview.isActivated\")&&this.invoke(\"codeview.deactivate\"),this.layoutInfo.editable.attr(\"contenteditable\",!1),this.options.editing=!1,this.invoke(\"toolbar.deactivate\",!0),this.triggerEvent(\"disable\",!0)}},{key:\"triggerEvent\",value:function(){var t=k.head(arguments),e=k.tail(k.from(arguments)),n=this.options.callbacks[m.namespaceToCamel(t,\"on\")];n&&n.apply(this.$note[0],e),this.$note.trigger(\"summernote.\"+t,e)}},{key:\"initializeModule\",value:function(t){var e=this.modules[t];e.shouldInitialize=e.shouldInitialize||m.ok,e.shouldInitialize()&&(e.initialize&&e.initialize(),e.events&&ht.attachEvents(this.$note,e.events))}},{key:\"module\",value:function(t,e,n){if(1===arguments.length)return this.modules[t];this.modules[t]=new e(this),n||this.initializeModule(t)}},{key:\"removeModule\",value:function(t){var e=this.modules[t];e.shouldInitialize()&&(e.events&&ht.detachEvents(this.$note,e.events),e.destroy&&e.destroy()),delete this.modules[t]}},{key:\"memo\",value:function(t,e){if(1===arguments.length)return this.memos[t];this.memos[t]=e}},{key:\"removeMemo\",value:function(t){this.memos[t]&&this.memos[t].destroy&&this.memos[t].destroy(),delete this.memos[t]}},{key:\"createInvokeHandlerAndUpdateState\",value:function(t,e){var n=this;return function(o){n.createInvokeHandler(t,e)(o),n.invoke(\"buttons.updateCurrentStyle\")}}},{key:\"createInvokeHandler\",value:function(t,n){var o=this;return function(i){i.preventDefault();var r=e()(i.target);o.invoke(t,n||r.closest(\"[data-value]\").data(\"value\"),r)}}},{key:\"invoke\",value:function(){var t=k.head(arguments),e=k.tail(k.from(arguments)),n=t.split(\".\"),o=n.length>1,i=o&&k.head(n),r=o?k.last(n):k.head(n),a=this.modules[i||\"editor\"];return!i&&this[r]?this[r].apply(this,e):a&&a[r]&&a.shouldInitialize()?a[r].apply(a,e):void 0}}],o&&ft(n.prototype,o),i&&ft(n,i),t}();function mt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function vt(t,e){var n,o,i=t.parentElement(),r=document.body.createTextRange(),a=k.from(i.childNodes);for(n=0;n<a.length;n++)if(!ht.isText(a[n])){if(r.moveToElementText(a[n]),r.compareEndPoints(\"StartToStart\",t)>=0)break;o=a[n]}if(0!==n&&ht.isText(a[n-1])){var s=document.body.createTextRange(),l=null;s.moveToElementText(o||i),s.collapse(!o),l=o?o.nextSibling:i.firstChild;var c=t.duplicate();c.setEndPoint(\"StartToStart\",s);for(var u=c.text.replace(/[\\r\\n]/g,\"\").length;u>l.nodeValue.length&&l.nextSibling;)u-=l.nodeValue.length,l=l.nextSibling;l.nodeValue;e&&l.nextSibling&&ht.isText(l.nextSibling)&&u===l.nodeValue.length&&(u-=l.nodeValue.length,l=l.nextSibling),i=l,n=u}return{cont:i,offset:n}}function gt(t){var e=document.body.createTextRange(),n=function t(e,n){var o,i;if(ht.isText(e)){var r=ht.listPrev(e,m.not(ht.isText)),a=k.last(r).previousSibling;o=a||e.parentNode,n+=k.sum(k.tail(r),ht.nodeLength),i=!a}else{if(o=e.childNodes[n]||e,ht.isText(o))return t(o,0);n=0,i=!1}return{node:o,collapseToStart:i,offset:n}}(t.node,t.offset);return e.moveToElementText(n.node),e.collapse(n.collapseToStart),e.moveStart(\"character\",n.offset),e}e().fn.extend({summernote:function(){var t=e().type(k.head(arguments)),n=\"string\"===t,o=\"object\"===t,i=e().extend({},e().summernote.options,o?k.head(arguments):{});i.langInfo=e().extend(!0,{},e().summernote.lang[\"en-US\"],e().summernote.lang[i.lang]),i.icons=e().extend(!0,{},e().summernote.options.icons,i.icons),i.tooltip=\"auto\"===i.tooltip?!f.isSupportTouch:i.tooltip,this.each((function(t,n){var o=e()(n);if(!o.data(\"summernote\")){var r=new pt(o,i);o.data(\"summernote\",r),o.data(\"summernote\").triggerEvent(\"init\",r.layoutInfo)}}));var r=this.first();if(r.length){var a=r.data(\"summernote\");if(n)return a.invoke.apply(a,k.from(arguments));i.focus&&a.invoke(\"editor.focus\")}return this}});var bt=function(){function t(e,n,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.sc=e,this.so=n,this.ec=o,this.eo=i,this.isOnEditable=this.makeIsOn(ht.isEditable),this.isOnList=this.makeIsOn(ht.isList),this.isOnAnchor=this.makeIsOn(ht.isAnchor),this.isOnCell=this.makeIsOn(ht.isCell),this.isOnData=this.makeIsOn(ht.isData)}var n,o,i;return n=t,o=[{key:\"nativeRange\",value:function(){if(f.isW3CRangeSupport){var t=document.createRange();return t.setStart(this.sc,this.so),t.setEnd(this.ec,this.eo),t}var e=gt({node:this.sc,offset:this.so});return e.setEndPoint(\"EndToEnd\",gt({node:this.ec,offset:this.eo})),e}},{key:\"getPoints\",value:function(){return{sc:this.sc,so:this.so,ec:this.ec,eo:this.eo}}},{key:\"getStartPoint\",value:function(){return{node:this.sc,offset:this.so}}},{key:\"getEndPoint\",value:function(){return{node:this.ec,offset:this.eo}}},{key:\"select\",value:function(){var t=this.nativeRange();if(f.isW3CRangeSupport){var e=document.getSelection();e.rangeCount>0&&e.removeAllRanges(),e.addRange(t)}else t.select();return this}},{key:\"scrollIntoView\",value:function(t){var n=e()(t).height();return t.scrollTop+n<this.sc.offsetTop&&(t.scrollTop+=Math.abs(t.scrollTop+n-this.sc.offsetTop)),this}},{key:\"normalize\",value:function(){var e=function(t,e){if(!t)return t;if(ht.isVisiblePoint(t)&&(!ht.isEdgePoint(t)||ht.isRightEdgePoint(t)&&!e||ht.isLeftEdgePoint(t)&&e||ht.isRightEdgePoint(t)&&e&&ht.isVoid(t.node.nextSibling)||ht.isLeftEdgePoint(t)&&!e&&ht.isVoid(t.node.previousSibling)||ht.isBlock(t.node)&&ht.isEmpty(t.node)))return t;var n=ht.ancestor(t.node,ht.isBlock),o=!1;if(!o){var i=ht.prevPoint(t)||{node:null};o=(ht.isLeftEdgePointOf(t,n)||ht.isVoid(i.node))&&!e}var r=!1;if(!r){var a=ht.nextPoint(t)||{node:null};r=(ht.isRightEdgePointOf(t,n)||ht.isVoid(a.node))&&e}if(o||r){if(ht.isVisiblePoint(t))return t;e=!e}return(e?ht.nextPointUntil(ht.nextPoint(t),ht.isVisiblePoint):ht.prevPointUntil(ht.prevPoint(t),ht.isVisiblePoint))||t},n=e(this.getEndPoint(),!1),o=this.isCollapsed()?n:e(this.getStartPoint(),!0);return new t(o.node,o.offset,n.node,n.offset)}},{key:\"nodes\",value:function(t,e){t=t||m.ok;var n=e&&e.includeAncestor,o=e&&e.fullyContains,i=this.getStartPoint(),r=this.getEndPoint(),a=[],s=[];return ht.walkPoint(i,r,(function(e){var i;ht.isEditable(e.node)||(o?(ht.isLeftEdgePoint(e)&&s.push(e.node),ht.isRightEdgePoint(e)&&k.contains(s,e.node)&&(i=e.node)):i=n?ht.ancestor(e.node,t):e.node,i&&t(i)&&a.push(i))}),!0),k.unique(a)}},{key:\"commonAncestor\",value:function(){return ht.commonAncestor(this.sc,this.ec)}},{key:\"expand\",value:function(e){var n=ht.ancestor(this.sc,e),o=ht.ancestor(this.ec,e);if(!n&&!o)return new t(this.sc,this.so,this.ec,this.eo);var i=this.getPoints();return n&&(i.sc=n,i.so=0),o&&(i.ec=o,i.eo=ht.nodeLength(o)),new t(i.sc,i.so,i.ec,i.eo)}},{key:\"collapse\",value:function(e){return e?new t(this.sc,this.so,this.sc,this.so):new t(this.ec,this.eo,this.ec,this.eo)}},{key:\"splitText\",value:function(){var e=this.sc===this.ec,n=this.getPoints();return ht.isText(this.ec)&&!ht.isEdgePoint(this.getEndPoint())&&this.ec.splitText(this.eo),ht.isText(this.sc)&&!ht.isEdgePoint(this.getStartPoint())&&(n.sc=this.sc.splitText(this.so),n.so=0,e&&(n.ec=n.sc,n.eo=this.eo-this.so)),new t(n.sc,n.so,n.ec,n.eo)}},{key:\"deleteContents\",value:function(){if(this.isCollapsed())return this;var n=this.splitText(),o=n.nodes(null,{fullyContains:!0}),i=ht.prevPointUntil(n.getStartPoint(),(function(t){return!k.contains(o,t.node)})),r=[];return e().each(o,(function(t,e){var n=e.parentNode;i.node!==n&&1===ht.nodeLength(n)&&r.push(n),ht.remove(e,!1)})),e().each(r,(function(t,e){ht.remove(e,!1)})),new t(i.node,i.offset,i.node,i.offset).normalize()}},{key:\"makeIsOn\",value:function(t){return function(){var e=ht.ancestor(this.sc,t);return!!e&&e===ht.ancestor(this.ec,t)}}},{key:\"isLeftEdgeOf\",value:function(t){if(!ht.isLeftEdgePoint(this.getStartPoint()))return!1;var e=ht.ancestor(this.sc,t);return e&&ht.isLeftEdgeOf(this.sc,e)}},{key:\"isCollapsed\",value:function(){return this.sc===this.ec&&this.so===this.eo}},{key:\"wrapBodyInlineWithPara\",value:function(){if(ht.isBodyContainer(this.sc)&&ht.isEmpty(this.sc))return this.sc.innerHTML=ht.emptyPara,new t(this.sc.firstChild,0,this.sc.firstChild,0);var e,n=this.normalize();if(ht.isParaInline(this.sc)||ht.isPara(this.sc))return n;if(ht.isInline(n.sc)){var o=ht.listAncestor(n.sc,m.not(ht.isInline));e=k.last(o),ht.isInline(e)||(e=o[o.length-2]||n.sc.childNodes[n.so])}else e=n.sc.childNodes[n.so>0?n.so-1:0];if(e){var i=ht.listPrev(e,ht.isParaInline).reverse();if((i=i.concat(ht.listNext(e.nextSibling,ht.isParaInline))).length){var r=ht.wrap(k.head(i),\"p\");ht.appendChildNodes(r,k.tail(i))}}return this.normalize()}},{key:\"insertNode\",value:function(t){var e=this;(ht.isText(t)||ht.isInline(t))&&(e=this.wrapBodyInlineWithPara().deleteContents());var n=ht.splitPoint(e.getStartPoint(),ht.isInline(t));return n.rightNode?(n.rightNode.parentNode.insertBefore(t,n.rightNode),ht.isEmpty(n.rightNode)&&ht.isPara(t)&&n.rightNode.parentNode.removeChild(n.rightNode)):n.container.appendChild(t),t}},{key:\"pasteHTML\",value:function(t){t=e().trim(t);var n=e()(\"<div></div>\").html(t)[0],o=k.from(n.childNodes),i=this,r=!1;return i.so>=0&&(o=o.reverse(),r=!0),o=o.map((function(t){return i.insertNode(t)})),r&&(o=o.reverse()),o}},{key:\"toString\",value:function(){var t=this.nativeRange();return f.isW3CRangeSupport?t.toString():t.text}},{key:\"getWordRange\",value:function(e){var n=this.getEndPoint();if(!ht.isCharPoint(n))return this;var o=ht.prevPointUntil(n,(function(t){return!ht.isCharPoint(t)}));return e&&(n=ht.nextPointUntil(n,(function(t){return!ht.isCharPoint(t)}))),new t(o.node,o.offset,n.node,n.offset)}},{key:\"getWordsRange\",value:function(e){var n=this.getEndPoint(),o=function(t){return!ht.isCharPoint(t)&&!ht.isSpacePoint(t)};if(o(n))return this;var i=ht.prevPointUntil(n,o);return e&&(n=ht.nextPointUntil(n,o)),new t(i.node,i.offset,n.node,n.offset)}},{key:\"getWordsMatchRange\",value:function(e){var n=this.getEndPoint(),o=ht.prevPointUntil(n,(function(o){if(!ht.isCharPoint(o)&&!ht.isSpacePoint(o))return!0;var i=new t(o.node,o.offset,n.node,n.offset),r=e.exec(i.toString());return r&&0===r.index})),i=new t(o.node,o.offset,n.node,n.offset),r=i.toString(),a=e.exec(r);return a&&a[0].length===r.length?i:null}},{key:\"bookmark\",value:function(t){return{s:{path:ht.makeOffsetPath(t,this.sc),offset:this.so},e:{path:ht.makeOffsetPath(t,this.ec),offset:this.eo}}}},{key:\"paraBookmark\",value:function(t){return{s:{path:k.tail(ht.makeOffsetPath(k.head(t),this.sc)),offset:this.so},e:{path:k.tail(ht.makeOffsetPath(k.last(t),this.ec)),offset:this.eo}}}},{key:\"getClientRects\",value:function(){return this.nativeRange().getClientRects()}}],o&&mt(n.prototype,o),i&&mt(n,i),t}();const yt={create:function(t,e,n,o){if(4===arguments.length)return new bt(t,e,n,o);if(2===arguments.length)return new bt(t,e,n=t,o=e);var i=this.createFromSelection();if(!i&&1===arguments.length){var r=arguments[0];return ht.isEditable(r)&&(r=r.lastChild),this.createFromBodyElement(r,ht.emptyPara===arguments[0].innerHTML)}return i},createFromBodyElement:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.createFromNode(t);return n.collapse(e)},createFromSelection:function(){var t,e,n,o;if(f.isW3CRangeSupport){var i=document.getSelection();if(!i||0===i.rangeCount)return null;if(ht.isBody(i.anchorNode))return null;var r=i.getRangeAt(0);t=r.startContainer,e=r.startOffset,n=r.endContainer,o=r.endOffset}else{var a=document.selection.createRange(),s=a.duplicate();s.collapse(!1);var l=a;l.collapse(!0);var c=vt(l,!0),u=vt(s,!1);ht.isText(c.node)&&ht.isLeftEdgePoint(c)&&ht.isTextNode(u.node)&&ht.isRightEdgePoint(u)&&u.node.nextSibling===c.node&&(c=u),t=c.cont,e=c.offset,n=u.cont,o=u.offset}return new bt(t,e,n,o)},createFromNode:function(t){var e=t,n=0,o=t,i=ht.nodeLength(o);return ht.isVoid(e)&&(n=ht.listPrev(e).length-1,e=e.parentNode),ht.isBR(o)?(i=ht.listPrev(o).length-1,o=o.parentNode):ht.isVoid(o)&&(i=ht.listPrev(o).length,o=o.parentNode),this.create(e,n,o,i)},createFromNodeBefore:function(t){return this.createFromNode(t).collapse(!0)},createFromNodeAfter:function(t){return this.createFromNode(t).collapse()},createFromBookmark:function(t,e){var n=ht.fromOffsetPath(t,e.s.path),o=e.s.offset,i=ht.fromOffsetPath(t,e.e.path),r=e.e.offset;return new bt(n,o,i,r)},createFromParaBookmark:function(t,e){var n=t.s.offset,o=t.e.offset,i=ht.fromOffsetPath(k.head(e),t.s.path),r=ht.fromOffsetPath(k.last(e),t.e.path);return new bt(i,n,r,o)}};var kt={BACKSPACE:8,TAB:9,ENTER:13,ESCAPE:27,SPACE:32,DELETE:46,LEFT:37,UP:38,RIGHT:39,DOWN:40,NUM0:48,NUM1:49,NUM2:50,NUM3:51,NUM4:52,NUM5:53,NUM6:54,NUM7:55,NUM8:56,B:66,E:69,I:73,J:74,K:75,L:76,R:82,S:83,U:85,V:86,Y:89,Z:90,SLASH:191,LEFTBRACKET:219,BACKSLASH:220,RIGHTBRACKET:221,HOME:36,END:35,PAGEUP:33,PAGEDOWN:34};const wt={isEdit:function(t){return k.contains([kt.BACKSPACE,kt.TAB,kt.ENTER,kt.SPACE,kt.DELETE],t)},isMove:function(t){return k.contains([kt.LEFT,kt.UP,kt.RIGHT,kt.DOWN],t)},isNavigation:function(t){return k.contains([kt.HOME,kt.END,kt.PAGEUP,kt.PAGEDOWN],t)},nameFromCode:m.invertObject(kt),code:kt};function Ct(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var xt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.stack=[],this.stackOffset=-1,this.context=e,this.$editable=e.layoutInfo.editable,this.editable=this.$editable[0]}var e,n,o;return e=t,(n=[{key:\"makeSnapshot\",value:function(){var t=yt.create(this.editable);return{contents:this.$editable.html(),bookmark:t&&t.isOnEditable()?t.bookmark(this.editable):{s:{path:[],offset:0},e:{path:[],offset:0}}}}},{key:\"applySnapshot\",value:function(t){null!==t.contents&&this.$editable.html(t.contents),null!==t.bookmark&&yt.createFromBookmark(this.editable,t.bookmark).select()}},{key:\"rewind\",value:function(){this.$editable.html()!==this.stack[this.stackOffset].contents&&this.recordUndo(),this.stackOffset=0,this.applySnapshot(this.stack[this.stackOffset])}},{key:\"commit\",value:function(){this.stack=[],this.stackOffset=-1,this.recordUndo()}},{key:\"reset\",value:function(){this.stack=[],this.stackOffset=-1,this.$editable.html(\"\"),this.recordUndo()}},{key:\"undo\",value:function(){this.$editable.html()!==this.stack[this.stackOffset].contents&&this.recordUndo(),this.stackOffset>0&&(this.stackOffset--,this.applySnapshot(this.stack[this.stackOffset]))}},{key:\"redo\",value:function(){this.stack.length-1>this.stackOffset&&(this.stackOffset++,this.applySnapshot(this.stack[this.stackOffset]))}},{key:\"recordUndo\",value:function(){this.stackOffset++,this.stack.length>this.stackOffset&&(this.stack=this.stack.slice(0,this.stackOffset)),this.stack.push(this.makeSnapshot()),this.stack.length>this.context.options.historyLimit&&(this.stack.shift(),this.stackOffset-=1)}}])&&Ct(e.prototype,n),o&&Ct(e,o),t}();function St(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Tt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}var n,o,i;return n=t,o=[{key:\"jQueryCSS\",value:function(t,n){var o={};return e().each(n,(function(e,n){o[n]=t.css(n)})),o}},{key:\"fromNode\",value:function(t){var e=this.jQueryCSS(t,[\"font-family\",\"font-size\",\"text-align\",\"list-style-type\",\"line-height\"])||{},n=t[0].style.fontSize||e[\"font-size\"];return e[\"font-size\"]=parseInt(n,10),e[\"font-size-unit\"]=n.match(/[a-z%]+$/),e}},{key:\"stylePara\",value:function(t,n){e().each(t.nodes(ht.isPara,{includeAncestor:!0}),(function(t,o){e()(o).css(n)}))}},{key:\"styleNodes\",value:function(t,n){t=t.splitText();var o=n&&n.nodeName||\"SPAN\",i=!(!n||!n.expandClosestSibling),r=!(!n||!n.onlyPartialContains);if(t.isCollapsed())return[t.insertNode(ht.create(o))];var a=ht.makePredByNodeName(o),s=t.nodes(ht.isText,{fullyContains:!0}).map((function(t){return ht.singleChildAncestor(t,a)||ht.wrap(t,o)}));if(i){if(r){var l=t.nodes();a=m.and(a,(function(t){return k.contains(l,t)}))}return s.map((function(t){var n=ht.withClosestSiblings(t,a),o=k.head(n),i=k.tail(n);return e().each(i,(function(t,e){ht.appendChildNodes(o,e.childNodes),ht.remove(e)})),k.head(n)}))}return s}},{key:\"current\",value:function(t){var n=e()(ht.isElement(t.sc)?t.sc:t.sc.parentNode),o=this.fromNode(n);try{o=e().extend(o,{\"font-bold\":document.queryCommandState(\"bold\")?\"bold\":\"normal\",\"font-italic\":document.queryCommandState(\"italic\")?\"italic\":\"normal\",\"font-underline\":document.queryCommandState(\"underline\")?\"underline\":\"normal\",\"font-subscript\":document.queryCommandState(\"subscript\")?\"subscript\":\"normal\",\"font-superscript\":document.queryCommandState(\"superscript\")?\"superscript\":\"normal\",\"font-strikethrough\":document.queryCommandState(\"strikethrough\")?\"strikethrough\":\"normal\",\"font-family\":document.queryCommandValue(\"fontname\")||o[\"font-family\"]})}catch(t){}if(t.isOnList()){var i=[\"circle\",\"disc\",\"disc-leading-zero\",\"square\"].indexOf(o[\"list-style-type\"])>-1;o[\"list-style\"]=i?\"unordered\":\"ordered\"}else o[\"list-style\"]=\"none\";var r=ht.ancestor(t.sc,ht.isPara);if(r&&r.style[\"line-height\"])o[\"line-height\"]=r.style.lineHeight;else{var a=parseInt(o[\"line-height\"],10)/parseInt(o[\"font-size\"],10);o[\"line-height\"]=a.toFixed(1)}return o.anchor=t.isOnAnchor()&&ht.ancestor(t.sc,ht.isAnchor),o.ancestors=ht.listAncestor(t.sc,ht.isEditable),o.range=t,o}}],o&&St(n.prototype,o),i&&St(n,i),t}();function Et(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var It=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}var n,o,i;return n=t,o=[{key:\"insertOrderedList\",value:function(t){this.toggleList(\"OL\",t)}},{key:\"insertUnorderedList\",value:function(t){this.toggleList(\"UL\",t)}},{key:\"indent\",value:function(t){var n=this,o=yt.create(t).wrapBodyInlineWithPara(),i=o.nodes(ht.isPara,{includeAncestor:!0}),r=k.clusterBy(i,m.peq2(\"parentNode\"));e().each(r,(function(t,o){var i=k.head(o);if(ht.isLi(i)){var r=n.findList(i.previousSibling);r?o.map((function(t){return r.appendChild(t)})):(n.wrapList(o,i.parentNode.nodeName),o.map((function(t){return t.parentNode})).map((function(t){return n.appendToPrevious(t)})))}else e().each(o,(function(t,n){e()(n).css(\"marginLeft\",(function(t,e){return(parseInt(e,10)||0)+25}))}))})),o.select()}},{key:\"outdent\",value:function(t){var n=this,o=yt.create(t).wrapBodyInlineWithPara(),i=o.nodes(ht.isPara,{includeAncestor:!0}),r=k.clusterBy(i,m.peq2(\"parentNode\"));e().each(r,(function(t,o){var i=k.head(o);ht.isLi(i)?n.releaseList([o]):e().each(o,(function(t,n){e()(n).css(\"marginLeft\",(function(t,e){return(e=parseInt(e,10)||0)>25?e-25:\"\"}))}))})),o.select()}},{key:\"toggleList\",value:function(t,n){var o=this,i=yt.create(n).wrapBodyInlineWithPara(),r=i.nodes(ht.isPara,{includeAncestor:!0}),a=i.paraBookmark(r),s=k.clusterBy(r,m.peq2(\"parentNode\"));if(k.find(r,ht.isPurePara)){var l=[];e().each(s,(function(e,n){l=l.concat(o.wrapList(n,t))})),r=l}else{var c=i.nodes(ht.isList,{includeAncestor:!0}).filter((function(n){return!e().nodeName(n,t)}));c.length?e().each(c,(function(e,n){ht.replace(n,t)})):r=this.releaseList(s,!0)}yt.createFromParaBookmark(a,r).select()}},{key:\"wrapList\",value:function(t,e){var n=k.head(t),o=k.last(t),i=ht.isList(n.previousSibling)&&n.previousSibling,r=ht.isList(o.nextSibling)&&o.nextSibling,a=i||ht.insertAfter(ht.create(e||\"UL\"),o);return t=t.map((function(t){return ht.isPurePara(t)?ht.replace(t,\"LI\"):t})),ht.appendChildNodes(a,t),r&&(ht.appendChildNodes(a,k.from(r.childNodes)),ht.remove(r)),t}},{key:\"releaseList\",value:function(t,n){var o=this,i=[];return e().each(t,(function(t,r){var a=k.head(r),s=k.last(r),l=n?ht.lastAncestor(a,ht.isList):a.parentNode,c=l.parentNode;if(\"LI\"===l.parentNode.nodeName)r.map((function(t){var e=o.findNextSiblings(t);c.nextSibling?c.parentNode.insertBefore(t,c.nextSibling):c.parentNode.appendChild(t),e.length&&(o.wrapList(e,l.nodeName),t.appendChild(e[0].parentNode))})),0===l.children.length&&c.removeChild(l),0===c.childNodes.length&&c.parentNode.removeChild(c);else{var u=l.childNodes.length>1?ht.splitTree(l,{node:s.parentNode,offset:ht.position(s)+1},{isSkipPaddingBlankHTML:!0}):null,d=ht.splitTree(l,{node:a.parentNode,offset:ht.position(a)},{isSkipPaddingBlankHTML:!0});r=n?ht.listDescendant(d,ht.isLi):k.from(d.childNodes).filter(ht.isLi),!n&&ht.isList(l.parentNode)||(r=r.map((function(t){return ht.replace(t,\"P\")}))),e().each(k.from(r).reverse(),(function(t,e){ht.insertAfter(e,l)}));var h=k.compact([l,d,u]);e().each(h,(function(t,n){var o=[n].concat(ht.listDescendant(n,ht.isList));e().each(o.reverse(),(function(t,e){ht.nodeLength(e)||ht.remove(e,!0)}))}))}i=i.concat(r)})),i}},{key:\"appendToPrevious\",value:function(t){return t.previousSibling?ht.appendChildNodes(t.previousSibling,[t]):this.wrapList([t],\"LI\")}},{key:\"findList\",value:function(t){return t?k.find(t.children,(function(t){return[\"OL\",\"UL\"].indexOf(t.nodeName)>-1})):null}},{key:\"findNextSiblings\",value:function(t){for(var e=[];t.nextSibling;)e.push(t.nextSibling),t=t.nextSibling;return e}}],o&&Et(n.prototype,o),i&&Et(n,i),t}();function $t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Nt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.bullet=new It,this.options=e.options}var n,o,i;return n=t,o=[{key:\"insertTab\",value:function(t,e){var n=ht.createText(new Array(e+1).join(ht.NBSP_CHAR));(t=t.deleteContents()).insertNode(n,!0),(t=yt.create(n,e)).select()}},{key:\"insertParagraph\",value:function(t,n){n=(n=(n=n||yt.create(t)).deleteContents()).wrapBodyInlineWithPara();var o,i=ht.ancestor(n.sc,ht.isPara);if(i){if(ht.isLi(i)&&(ht.isEmpty(i)||ht.deepestChildIsEmpty(i)))return void this.bullet.toggleList(i.parentNode.nodeName);var r=null;if(1===this.options.blockquoteBreakingLevel?r=ht.ancestor(i,ht.isBlockquote):2===this.options.blockquoteBreakingLevel&&(r=ht.lastAncestor(i,ht.isBlockquote)),r){o=e()(ht.emptyPara)[0],ht.isRightEdgePoint(n.getStartPoint())&&ht.isBR(n.sc.nextSibling)&&e()(n.sc.nextSibling).remove();var a=ht.splitTree(r,n.getStartPoint(),{isDiscardEmptySplits:!0});a?a.parentNode.insertBefore(o,a):ht.insertAfter(o,r)}else{o=ht.splitTree(i,n.getStartPoint());var s=ht.listDescendant(i,ht.isEmptyAnchor);s=s.concat(ht.listDescendant(o,ht.isEmptyAnchor)),e().each(s,(function(t,e){ht.remove(e)})),(ht.isHeading(o)||ht.isPre(o)||ht.isCustomStyleTag(o))&&ht.isEmpty(o)&&(o=ht.replace(o,\"p\"))}}else{var l=n.sc.childNodes[n.so];o=e()(ht.emptyPara)[0],l?n.sc.insertBefore(o,l):n.sc.appendChild(o)}yt.create(o,0).normalize().select().scrollIntoView(t)}}],o&&$t(n.prototype,o),i&&$t(n,i),t}();function Pt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Rt=function t(e,n,o,i){var r={colPos:0,rowPos:0},a=[],s=[];function l(t,e,n,o,i,r,s){var l={baseRow:n,baseCell:o,isRowSpan:i,isColSpan:r,isVirtual:s};a[t]||(a[t]=[]),a[t][e]=l}function c(t,e,n,o){return{baseCell:t.baseCell,action:e,virtualTable:{rowIndex:n,cellIndex:o}}}function u(t,e){if(!a[t])return e;if(!a[t][e])return e;for(var n=e;a[t][n];)if(n++,!a[t][n])return n}function d(t,e){var n=u(t.rowIndex,e.cellIndex),o=e.colSpan>1,i=e.rowSpan>1,a=t.rowIndex===r.rowPos&&e.cellIndex===r.colPos;l(t.rowIndex,n,t,e,i,o,!1);var s=e.attributes.rowSpan?parseInt(e.attributes.rowSpan.value,10):0;if(s>1)for(var c=1;c<s;c++){var d=t.rowIndex+c;h(d,n,e,a),l(d,n,t,e,!0,o,!0)}var f=e.attributes.colSpan?parseInt(e.attributes.colSpan.value,10):0;if(f>1)for(var p=1;p<f;p++){var m=u(t.rowIndex,n+p);h(t.rowIndex,m,e,a),l(t.rowIndex,m,t,e,i,!0,!0)}}function h(t,e,n,o){t===r.rowPos&&r.colPos>=n.cellIndex&&n.cellIndex<=e&&!o&&r.colPos++}function f(e){switch(n){case t.where.Column:if(e.isColSpan)return t.resultAction.SubtractSpanCount;break;case t.where.Row:if(!e.isVirtual&&e.isRowSpan)return t.resultAction.AddCell;if(e.isRowSpan)return t.resultAction.SubtractSpanCount}return t.resultAction.RemoveCell}function p(e){switch(n){case t.where.Column:if(e.isColSpan)return t.resultAction.SumSpanCount;if(e.isRowSpan&&e.isVirtual)return t.resultAction.Ignore;break;case t.where.Row:if(e.isRowSpan)return t.resultAction.SumSpanCount;if(e.isColSpan&&e.isVirtual)return t.resultAction.Ignore}return t.resultAction.AddCell}this.getActionList=function(){for(var e=n===t.where.Row?r.rowPos:-1,i=n===t.where.Column?r.colPos:-1,l=0,u=!0;u;){var d=e>=0?e:l,h=i>=0?i:l,m=a[d];if(!m)return u=!1,s;var v=m[h];if(!v)return u=!1,s;var g=t.resultAction.Ignore;switch(o){case t.requestAction.Add:g=p(v);break;case t.requestAction.Delete:g=f(v)}s.push(c(v,g,d,h)),l++}return s},e&&e.tagName&&(\"td\"===e.tagName.toLowerCase()||\"th\"===e.tagName.toLowerCase())&&(r.colPos=e.cellIndex,e.parentElement&&e.parentElement.tagName&&\"tr\"===e.parentElement.tagName.toLowerCase()&&(r.rowPos=e.parentElement.rowIndex)),function(){for(var t=i.rows,e=0;e<t.length;e++)for(var n=t[e].cells,o=0;o<n.length;o++)d(t[e],n[o])}()};Rt.where={Row:0,Column:1},Rt.requestAction={Add:0,Delete:1},Rt.resultAction={Ignore:0,SubtractSpanCount:1,RemoveCell:2,AddCell:3,SumSpanCount:4};var Lt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}var n,o,i;return n=t,o=[{key:\"tab\",value:function(t,e){var n=ht.ancestor(t.commonAncestor(),ht.isCell),o=ht.ancestor(n,ht.isTable),i=ht.listDescendant(o,ht.isCell),r=k[e?\"prev\":\"next\"](i,n);r&&yt.create(r,0).select()}},{key:\"addRow\",value:function(t,n){for(var o=ht.ancestor(t.commonAncestor(),ht.isCell),i=e()(o).closest(\"tr\"),r=this.recoverAttributes(i),a=e()(\"<tr\"+r+\"></tr>\"),s=new Rt(o,Rt.where.Row,Rt.requestAction.Add,e()(i).closest(\"table\")[0]).getActionList(),l=0;l<s.length;l++){var c=s[l],u=this.recoverAttributes(c.baseCell);switch(c.action){case Rt.resultAction.AddCell:a.append(\"<td\"+u+\">\"+ht.blank+\"</td>\");break;case Rt.resultAction.SumSpanCount:if(\"top\"===n&&(c.baseCell.parent?c.baseCell.closest(\"tr\").rowIndex:0)<=i[0].rowIndex){var d=e()(\"<div></div>\").append(e()(\"<td\"+u+\">\"+ht.blank+\"</td>\").removeAttr(\"rowspan\")).html();a.append(d);break}var h=parseInt(c.baseCell.rowSpan,10);h++,c.baseCell.setAttribute(\"rowSpan\",h)}}if(\"top\"===n)i.before(a);else{if(o.rowSpan>1){var f=i[0].rowIndex+(o.rowSpan-2);return void e()(e()(i).parent().find(\"tr\")[f]).after(e()(a))}i.after(a)}}},{key:\"addCol\",value:function(t,n){var o=ht.ancestor(t.commonAncestor(),ht.isCell),i=e()(o).closest(\"tr\");e()(i).siblings().push(i);for(var r=new Rt(o,Rt.where.Column,Rt.requestAction.Add,e()(i).closest(\"table\")[0]).getActionList(),a=0;a<r.length;a++){var s=r[a],l=this.recoverAttributes(s.baseCell);switch(s.action){case Rt.resultAction.AddCell:\"right\"===n?e()(s.baseCell).after(\"<td\"+l+\">\"+ht.blank+\"</td>\"):e()(s.baseCell).before(\"<td\"+l+\">\"+ht.blank+\"</td>\");break;case Rt.resultAction.SumSpanCount:if(\"right\"===n){var c=parseInt(s.baseCell.colSpan,10);c++,s.baseCell.setAttribute(\"colSpan\",c)}else e()(s.baseCell).before(\"<td\"+l+\">\"+ht.blank+\"</td>\")}}}},{key:\"recoverAttributes\",value:function(t){var e=\"\";if(!t)return e;for(var n=t.attributes||[],o=0;o<n.length;o++)\"id\"!==n[o].name.toLowerCase()&&n[o].specified&&(e+=\" \"+n[o].name+\"='\"+n[o].value+\"'\");return e}},{key:\"deleteRow\",value:function(t){for(var n=ht.ancestor(t.commonAncestor(),ht.isCell),o=e()(n).closest(\"tr\"),i=o.children(\"td, th\").index(e()(n)),r=o[0].rowIndex,a=new Rt(n,Rt.where.Row,Rt.requestAction.Delete,e()(o).closest(\"table\")[0]).getActionList(),s=0;s<a.length;s++)if(a[s]){var l=a[s].baseCell,c=a[s].virtualTable,u=l.rowSpan&&l.rowSpan>1,d=u?parseInt(l.rowSpan,10):0;switch(a[s].action){case Rt.resultAction.Ignore:continue;case Rt.resultAction.AddCell:var h=o.next(\"tr\")[0];if(!h)continue;var f=o[0].cells[i];u&&(d>2?(d--,h.insertBefore(f,h.cells[i]),h.cells[i].setAttribute(\"rowSpan\",d),h.cells[i].innerHTML=\"\"):2===d&&(h.insertBefore(f,h.cells[i]),h.cells[i].removeAttribute(\"rowSpan\"),h.cells[i].innerHTML=\"\"));continue;case Rt.resultAction.SubtractSpanCount:u&&(d>2?(d--,l.setAttribute(\"rowSpan\",d),c.rowIndex!==r&&l.cellIndex===i&&(l.innerHTML=\"\")):2===d&&(l.removeAttribute(\"rowSpan\"),c.rowIndex!==r&&l.cellIndex===i&&(l.innerHTML=\"\")));continue;case Rt.resultAction.RemoveCell:continue}}o.remove()}},{key:\"deleteCol\",value:function(t){for(var n=ht.ancestor(t.commonAncestor(),ht.isCell),o=e()(n).closest(\"tr\"),i=o.children(\"td, th\").index(e()(n)),r=new Rt(n,Rt.where.Column,Rt.requestAction.Delete,e()(o).closest(\"table\")[0]).getActionList(),a=0;a<r.length;a++)if(r[a])switch(r[a].action){case Rt.resultAction.Ignore:continue;case Rt.resultAction.SubtractSpanCount:var s=r[a].baseCell;if(s.colSpan&&s.colSpan>1){var l=s.colSpan?parseInt(s.colSpan,10):0;l>2?(l--,s.setAttribute(\"colSpan\",l),s.cellIndex===i&&(s.innerHTML=\"\")):2===l&&(s.removeAttribute(\"colSpan\"),s.cellIndex===i&&(s.innerHTML=\"\"))}continue;case Rt.resultAction.RemoveCell:ht.remove(r[a].baseCell,!0);continue}}},{key:\"createTable\",value:function(t,n,o){for(var i,r=[],a=0;a<t;a++)r.push(\"<td>\"+ht.blank+\"</td>\");i=r.join(\"\");for(var s,l=[],c=0;c<n;c++)l.push(\"<tr>\"+i+\"</tr>\");s=l.join(\"\");var u=e()(\"<table>\"+s+\"</table>\");return o&&o.tableClassName&&u.addClass(o.tableClassName),u[0]}},{key:\"deleteTable\",value:function(t){var n=ht.ancestor(t.commonAncestor(),ht.isCell);e()(n).closest(\"table\").remove()}}],o&&Pt(n.prototype,o),i&&Pt(n,i),t}();function At(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ft=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$note=n.layoutInfo.note,this.$editor=n.layoutInfo.editor,this.$editable=n.layoutInfo.editable,this.options=n.options,this.lang=this.options.langInfo,this.editable=this.$editable[0],this.lastRange=null,this.snapshot=null,this.style=new Tt,this.table=new Lt,this.typing=new Nt(n),this.bullet=new It,this.history=new xt(n),this.context.memo(\"help.escape\",this.lang.help.escape),this.context.memo(\"help.undo\",this.lang.help.undo),this.context.memo(\"help.redo\",this.lang.help.redo),this.context.memo(\"help.tab\",this.lang.help.tab),this.context.memo(\"help.untab\",this.lang.help.untab),this.context.memo(\"help.insertParagraph\",this.lang.help.insertParagraph),this.context.memo(\"help.insertOrderedList\",this.lang.help.insertOrderedList),this.context.memo(\"help.insertUnorderedList\",this.lang.help.insertUnorderedList),this.context.memo(\"help.indent\",this.lang.help.indent),this.context.memo(\"help.outdent\",this.lang.help.outdent),this.context.memo(\"help.formatPara\",this.lang.help.formatPara),this.context.memo(\"help.insertHorizontalRule\",this.lang.help.insertHorizontalRule),this.context.memo(\"help.fontName\",this.lang.help.fontName);for(var i=[\"bold\",\"italic\",\"underline\",\"strikethrough\",\"superscript\",\"subscript\",\"justifyLeft\",\"justifyCenter\",\"justifyRight\",\"justifyFull\",\"formatBlock\",\"removeFormat\",\"backColor\"],r=0,a=i.length;r<a;r++)this[i[r]]=function(t){return function(e){o.beforeCommand(),document.execCommand(t,!1,e),o.afterCommand(!0)}}(i[r]),this.context.memo(\"help.\"+i[r],this.lang.help[i[r]]);this.fontName=this.wrapCommand((function(t){return o.fontStyling(\"font-family\",f.validFontName(t))})),this.fontSize=this.wrapCommand((function(t){var e=o.currentStyle()[\"font-size-unit\"];return o.fontStyling(\"font-size\",t+e)})),this.fontSizeUnit=this.wrapCommand((function(t){var e=o.currentStyle()[\"font-size\"];return o.fontStyling(\"font-size\",e+t)}));for(var s=1;s<=6;s++)this[\"formatH\"+s]=function(t){return function(){o.formatBlock(\"H\"+t)}}(s),this.context.memo(\"help.formatH\"+s,this.lang.help[\"formatH\"+s]);this.insertParagraph=this.wrapCommand((function(){o.typing.insertParagraph(o.editable)})),this.insertOrderedList=this.wrapCommand((function(){o.bullet.insertOrderedList(o.editable)})),this.insertUnorderedList=this.wrapCommand((function(){o.bullet.insertUnorderedList(o.editable)})),this.indent=this.wrapCommand((function(){o.bullet.indent(o.editable)})),this.outdent=this.wrapCommand((function(){o.bullet.outdent(o.editable)})),this.insertNode=this.wrapCommand((function(t){o.isLimited(e()(t).text().length)||(o.getLastRange().insertNode(t),o.setLastRange(yt.createFromNodeAfter(t).select()))})),this.insertText=this.wrapCommand((function(t){if(!o.isLimited(t.length)){var e=o.getLastRange().insertNode(ht.createText(t));o.setLastRange(yt.create(e,ht.nodeLength(e)).select())}})),this.pasteHTML=this.wrapCommand((function(t){if(!o.isLimited(t.length)){t=o.context.invoke(\"codeview.purify\",t);var e=o.getLastRange().pasteHTML(t);o.setLastRange(yt.createFromNodeAfter(k.last(e)).select())}})),this.formatBlock=this.wrapCommand((function(t,e){var n=o.options.callbacks.onApplyCustomStyle;n?n.call(o,e,o.context,o.onFormatBlock):o.onFormatBlock(t,e)})),this.insertHorizontalRule=this.wrapCommand((function(){var t=o.getLastRange().insertNode(ht.create(\"HR\"));t.nextSibling&&o.setLastRange(yt.create(t.nextSibling,0).normalize().select())})),this.lineHeight=this.wrapCommand((function(t){o.style.stylePara(o.getLastRange(),{lineHeight:t})})),this.createLink=this.wrapCommand((function(t){var n=t.url,i=t.text,r=t.isNewWindow,a=t.checkProtocol,s=t.range||o.getLastRange(),l=i.length-s.toString().length;if(!(l>0&&o.isLimited(l))){var c=s.toString()!==i;\"string\"==typeof n&&(n=n.trim()),o.options.onCreateLink?n=o.options.onCreateLink(n):a&&(n=/^([A-Za-z][A-Za-z0-9+-.]*\\:|#|\\/)/.test(n)?n:o.options.defaultProtocol+n);var u=[];if(c){var d=(s=s.deleteContents()).insertNode(e()(\"<A>\"+i+\"</A>\")[0]);u.push(d)}else u=o.style.styleNodes(s,{nodeName:\"A\",expandClosestSibling:!0,onlyPartialContains:!0});e().each(u,(function(t,o){e()(o).attr(\"href\",n),r?e()(o).attr(\"target\",\"_blank\"):e()(o).removeAttr(\"target\")})),o.setLastRange(o.createRangeFromList(u).select())}})),this.color=this.wrapCommand((function(t){var e=t.foreColor,n=t.backColor;e&&document.execCommand(\"foreColor\",!1,e),n&&document.execCommand(\"backColor\",!1,n)})),this.foreColor=this.wrapCommand((function(t){document.execCommand(\"foreColor\",!1,t)})),this.insertTable=this.wrapCommand((function(t){var e=t.split(\"x\");o.getLastRange().deleteContents().insertNode(o.table.createTable(e[0],e[1],o.options))})),this.removeMedia=this.wrapCommand((function(){var t=e()(o.restoreTarget()).parent();t.closest(\"figure\").length?t.closest(\"figure\").remove():t=e()(o.restoreTarget()).detach(),o.context.triggerEvent(\"media.delete\",t,o.$editable)})),this.floatMe=this.wrapCommand((function(t){var n=e()(o.restoreTarget());n.toggleClass(\"note-float-left\",\"left\"===t),n.toggleClass(\"note-float-right\",\"right\"===t),n.css(\"float\",\"none\"===t?\"\":t)})),this.resize=this.wrapCommand((function(t){var n=e()(o.restoreTarget());0===(t=parseFloat(t))?n.css(\"width\",\"\"):n.css({width:100*t+\"%\",height:\"\"})}))}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){var t=this;this.$editable.on(\"keydown\",(function(e){if(e.keyCode===wt.code.ENTER&&t.context.triggerEvent(\"enter\",e),t.context.triggerEvent(\"keydown\",e),t.snapshot=t.history.makeSnapshot(),t.hasKeyShortCut=!1,e.isDefaultPrevented()||(t.options.shortcuts?t.hasKeyShortCut=t.handleKeyMap(e):t.preventDefaultEditableShortCuts(e)),t.isLimited(1,e)){var n=t.getLastRange();if(n.eo-n.so==0)return!1}t.setLastRange(),t.options.recordEveryKeystroke&&!1===t.hasKeyShortCut&&t.history.recordUndo()})).on(\"keyup\",(function(e){t.setLastRange(),t.context.triggerEvent(\"keyup\",e)})).on(\"focus\",(function(e){t.setLastRange(),t.context.triggerEvent(\"focus\",e)})).on(\"blur\",(function(e){t.context.triggerEvent(\"blur\",e)})).on(\"mousedown\",(function(e){t.context.triggerEvent(\"mousedown\",e)})).on(\"mouseup\",(function(e){t.setLastRange(),t.history.recordUndo(),t.context.triggerEvent(\"mouseup\",e)})).on(\"scroll\",(function(e){t.context.triggerEvent(\"scroll\",e)})).on(\"paste\",(function(e){t.setLastRange(),t.context.triggerEvent(\"paste\",e)})).on(\"input\",(function(){t.isLimited(0)&&t.snapshot&&t.history.applySnapshot(t.snapshot)})),this.$editable.attr(\"spellcheck\",this.options.spellCheck),this.$editable.attr(\"autocorrect\",this.options.spellCheck),this.options.disableGrammar&&this.$editable.attr(\"data-gramm\",!1),this.$editable.html(ht.html(this.$note)||ht.emptyPara),this.$editable.on(f.inputEventName,m.debounce((function(){t.context.triggerEvent(\"change\",t.$editable.html(),t.$editable)}),10)),this.$editable.on(\"focusin\",(function(e){t.context.triggerEvent(\"focusin\",e)})).on(\"focusout\",(function(e){t.context.triggerEvent(\"focusout\",e)})),this.options.airMode?this.options.overrideContextMenu&&this.$editor.on(\"contextmenu\",(function(e){return t.context.triggerEvent(\"contextmenu\",e),!1})):(this.options.width&&this.$editor.outerWidth(this.options.width),this.options.height&&this.$editable.outerHeight(this.options.height),this.options.maxHeight&&this.$editable.css(\"max-height\",this.options.maxHeight),this.options.minHeight&&this.$editable.css(\"min-height\",this.options.minHeight)),this.history.recordUndo(),this.setLastRange()}},{key:\"destroy\",value:function(){this.$editable.off()}},{key:\"handleKeyMap\",value:function(t){var e=this.options.keyMap[f.isMac?\"mac\":\"pc\"],n=[];t.metaKey&&n.push(\"CMD\"),t.ctrlKey&&!t.altKey&&n.push(\"CTRL\"),t.shiftKey&&n.push(\"SHIFT\");var o=wt.nameFromCode[t.keyCode];o&&n.push(o);var i=e[n.join(\"+\")];if(\"TAB\"!==o||this.options.tabDisable)if(i){if(!1!==this.context.invoke(i))return t.preventDefault(),!0}else wt.isEdit(t.keyCode)&&this.afterCommand();else this.afterCommand();return!1}},{key:\"preventDefaultEditableShortCuts\",value:function(t){(t.ctrlKey||t.metaKey)&&k.contains([66,73,85],t.keyCode)&&t.preventDefault()}},{key:\"isLimited\",value:function(t,e){return t=t||0,(void 0===e||!(wt.isMove(e.keyCode)||wt.isNavigation(e.keyCode)||e.ctrlKey||e.metaKey||k.contains([wt.code.BACKSPACE,wt.code.DELETE],e.keyCode)))&&this.options.maxTextLength>0&&this.$editable.text().length+t>this.options.maxTextLength}},{key:\"createRange\",value:function(){return this.focus(),this.setLastRange(),this.getLastRange()}},{key:\"createRangeFromList\",value:function(t){var e=yt.createFromNodeBefore(k.head(t)).getStartPoint(),n=yt.createFromNodeAfter(k.last(t)).getEndPoint();return yt.create(e.node,e.offset,n.node,n.offset)}},{key:\"setLastRange\",value:function(t){t?this.lastRange=t:(this.lastRange=yt.create(this.editable),0===e()(this.lastRange.sc).closest(\".note-editable\").length&&(this.lastRange=yt.createFromBodyElement(this.editable)))}},{key:\"getLastRange\",value:function(){return this.lastRange||this.setLastRange(),this.lastRange}},{key:\"saveRange\",value:function(t){t&&this.getLastRange().collapse().select()}},{key:\"restoreRange\",value:function(){this.lastRange&&(this.lastRange.select(),this.focus())}},{key:\"saveTarget\",value:function(t){this.$editable.data(\"target\",t)}},{key:\"clearTarget\",value:function(){this.$editable.removeData(\"target\")}},{key:\"restoreTarget\",value:function(){return this.$editable.data(\"target\")}},{key:\"currentStyle\",value:function(){var t=yt.create();return t&&(t=t.normalize()),t?this.style.current(t):this.style.fromNode(this.$editable)}},{key:\"styleFromNode\",value:function(t){return this.style.fromNode(t)}},{key:\"undo\",value:function(){this.context.triggerEvent(\"before.command\",this.$editable.html()),this.history.undo(),this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}},{key:\"commit\",value:function(){this.context.triggerEvent(\"before.command\",this.$editable.html()),this.history.commit(),this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}},{key:\"redo\",value:function(){this.context.triggerEvent(\"before.command\",this.$editable.html()),this.history.redo(),this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}},{key:\"beforeCommand\",value:function(){this.context.triggerEvent(\"before.command\",this.$editable.html()),document.execCommand(\"styleWithCSS\",!1,this.options.styleWithCSS),this.focus()}},{key:\"afterCommand\",value:function(t){this.normalizeContent(),this.history.recordUndo(),t||this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}},{key:\"tab\",value:function(){var t=this.getLastRange();if(t.isCollapsed()&&t.isOnCell())this.table.tab(t);else{if(0===this.options.tabSize)return!1;this.isLimited(this.options.tabSize)||(this.beforeCommand(),this.typing.insertTab(t,this.options.tabSize),this.afterCommand())}}},{key:\"untab\",value:function(){var t=this.getLastRange();if(t.isCollapsed()&&t.isOnCell())this.table.tab(t,!0);else if(0===this.options.tabSize)return!1}},{key:\"wrapCommand\",value:function(t){return function(){this.beforeCommand(),t.apply(this,arguments),this.afterCommand()}}},{key:\"insertImage\",value:function(t,n){var o,i=this;return(o=t,e().Deferred((function(t){var n=e()(\"<img>\");n.one(\"load\",(function(){n.off(\"error abort\"),t.resolve(n)})).one(\"error abort\",(function(){n.off(\"load\").detach(),t.reject(n)})).css({display:\"none\"}).appendTo(document.body).attr(\"src\",o)})).promise()).then((function(t){i.beforeCommand(),\"function\"==typeof n?n(t):(\"string\"==typeof n&&t.attr(\"data-filename\",n),t.css(\"width\",Math.min(i.$editable.width(),t.width()))),t.show(),i.getLastRange().insertNode(t[0]),i.setLastRange(yt.createFromNodeAfter(t[0]).select()),i.afterCommand()})).fail((function(t){i.context.triggerEvent(\"image.upload.error\",t)}))}},{key:\"insertImagesAsDataURL\",value:function(t){var n=this;e().each(t,(function(t,o){var i=o.name;n.options.maximumImageFileSize&&n.options.maximumImageFileSize<o.size?n.context.triggerEvent(\"image.upload.error\",n.lang.image.maximumFileSizeError):function(t){return e().Deferred((function(n){e().extend(new FileReader,{onload:function(t){var e=t.target.result;n.resolve(e)},onerror:function(t){n.reject(t)}}).readAsDataURL(t)})).promise()}(o).then((function(t){return n.insertImage(t,i)})).fail((function(){n.context.triggerEvent(\"image.upload.error\")}))}))}},{key:\"insertImagesOrCallback\",value:function(t){this.options.callbacks.onImageUpload?this.context.triggerEvent(\"image.upload\",t):this.insertImagesAsDataURL(t)}},{key:\"getSelectedText\",value:function(){var t=this.getLastRange();return t.isOnAnchor()&&(t=yt.createFromNode(ht.ancestor(t.sc,ht.isAnchor))),t.toString()}},{key:\"onFormatBlock\",value:function(t,n){if(document.execCommand(\"FormatBlock\",!1,f.isMSIE?\"<\"+t+\">\":t),n&&n.length&&(n[0].tagName.toUpperCase()!==t.toUpperCase()&&(n=n.find(t)),n&&n.length)){var o=this.createRange(),i=e()([o.sc,o.ec]).closest(t);i.removeClass();var r=n[0].className||\"\";r&&i.addClass(r)}}},{key:\"formatPara\",value:function(){this.formatBlock(\"P\")}},{key:\"fontStyling\",value:function(t,n){var o=this.getLastRange();if(\"\"!==o){var i=this.style.styleNodes(o);if(this.$editor.find(\".note-status-output\").html(\"\"),e()(i).css(t,n),o.isCollapsed()){var r=k.head(i);r&&!ht.nodeLength(r)&&(r.innerHTML=ht.ZERO_WIDTH_NBSP_CHAR,yt.createFromNode(r.firstChild).select(),this.setLastRange(),this.$editable.data(\"bogus\",r))}else this.setLastRange(this.createRangeFromList(i).select())}else{var a=e().now();this.$editor.find(\".note-status-output\").html('<div id=\"note-status-output-'+a+'\" class=\"alert alert-info\">'+this.lang.output.noSelection+\"</div>\"),setTimeout((function(){e()(\"#note-status-output-\"+a).remove()}),5e3)}}},{key:\"unlink\",value:function(){var t=this.getLastRange();if(t.isOnAnchor()){var e=ht.ancestor(t.sc,ht.isAnchor);(t=yt.createFromNode(e)).select(),this.setLastRange(),this.beforeCommand(),document.execCommand(\"unlink\"),this.afterCommand()}}},{key:\"getLinkInfo\",value:function(){var t=this.getLastRange().expand(ht.isAnchor),n=e()(k.head(t.nodes(ht.isAnchor))),o={range:t,text:t.toString(),url:n.length?n.attr(\"href\"):\"\"};return n.length&&(o.isNewWindow=\"_blank\"===n.attr(\"target\")),o}},{key:\"addRow\",value:function(t){var e=this.getLastRange(this.$editable);e.isCollapsed()&&e.isOnCell()&&(this.beforeCommand(),this.table.addRow(e,t),this.afterCommand())}},{key:\"addCol\",value:function(t){var e=this.getLastRange(this.$editable);e.isCollapsed()&&e.isOnCell()&&(this.beforeCommand(),this.table.addCol(e,t),this.afterCommand())}},{key:\"deleteRow\",value:function(){var t=this.getLastRange(this.$editable);t.isCollapsed()&&t.isOnCell()&&(this.beforeCommand(),this.table.deleteRow(t),this.afterCommand())}},{key:\"deleteCol\",value:function(){var t=this.getLastRange(this.$editable);t.isCollapsed()&&t.isOnCell()&&(this.beforeCommand(),this.table.deleteCol(t),this.afterCommand())}},{key:\"deleteTable\",value:function(){var t=this.getLastRange(this.$editable);t.isCollapsed()&&t.isOnCell()&&(this.beforeCommand(),this.table.deleteTable(t),this.afterCommand())}},{key:\"resizeTo\",value:function(t,e,n){var o;if(n){var i=t.y/t.x,r=e.data(\"ratio\");o={width:r>i?t.x:t.y/r,height:r>i?t.x*r:t.y}}else o={width:t.x,height:t.y};e.css(o)}},{key:\"hasFocus\",value:function(){return this.$editable.is(\":focus\")}},{key:\"focus\",value:function(){this.hasFocus()||this.$editable.focus()}},{key:\"isEmpty\",value:function(){return ht.isEmpty(this.$editable[0])||ht.emptyPara===this.$editable.html()}},{key:\"empty\",value:function(){this.context.invoke(\"code\",ht.emptyPara)}},{key:\"normalizeContent\",value:function(){this.$editable[0].normalize()}}],o&&At(n.prototype,o),i&&At(n,i),t}();function Dt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ht=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.$editable=e.layoutInfo.editable}var e,n,o;return e=t,(n=[{key:\"initialize\",value:function(){this.$editable.on(\"paste\",this.pasteByEvent.bind(this))}},{key:\"pasteByEvent\",value:function(t){var e=this,n=t.originalEvent.clipboardData;if(n&&n.items&&n.items.length){var o=n.items.length>1?n.items[1]:k.head(n.items);\"file\"===o.kind&&-1!==o.type.indexOf(\"image/\")?(this.context.invoke(\"editor.insertImagesOrCallback\",[o.getAsFile()]),t.preventDefault()):\"string\"===o.kind&&this.context.invoke(\"editor.isLimited\",n.getData(\"Text\").length)&&t.preventDefault()}else if(window.clipboardData){var i=window.clipboardData.getData(\"text\");this.context.invoke(\"editor.isLimited\",i.length)&&t.preventDefault()}setTimeout((function(){e.context.invoke(\"editor.afterCommand\")}),10)}}])&&Dt(e.prototype,n),o&&Dt(e,o),t}();function zt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Bt=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$eventListener=e()(document),this.$editor=n.layoutInfo.editor,this.$editable=n.layoutInfo.editable,this.options=n.options,this.lang=this.options.langInfo,this.documentEventHandlers={},this.$dropzone=e()(['<div class=\"note-dropzone\">','<div class=\"note-dropzone-message\"></div>',\"</div>\"].join(\"\")).prependTo(this.$editor)}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){this.options.disableDragAndDrop?(this.documentEventHandlers.onDrop=function(t){t.preventDefault()},this.$eventListener=this.$dropzone,this.$eventListener.on(\"drop\",this.documentEventHandlers.onDrop)):this.attachDragAndDropEvent()}},{key:\"attachDragAndDropEvent\",value:function(){var t=this,n=e()(),o=this.$dropzone.find(\".note-dropzone-message\");this.documentEventHandlers.onDragenter=function(e){var i=t.context.invoke(\"codeview.isActivated\"),r=t.$editor.width()>0&&t.$editor.height()>0;i||n.length||!r||(t.$editor.addClass(\"dragover\"),t.$dropzone.width(t.$editor.width()),t.$dropzone.height(t.$editor.height()),o.text(t.lang.image.dragImageHere)),n=n.add(e.target)},this.documentEventHandlers.onDragleave=function(o){(n=n.not(o.target)).length&&\"BODY\"!==o.target.nodeName||(n=e()(),t.$editor.removeClass(\"dragover\"))},this.documentEventHandlers.onDrop=function(){n=e()(),t.$editor.removeClass(\"dragover\")},this.$eventListener.on(\"dragenter\",this.documentEventHandlers.onDragenter).on(\"dragleave\",this.documentEventHandlers.onDragleave).on(\"drop\",this.documentEventHandlers.onDrop),this.$dropzone.on(\"dragenter\",(function(){t.$dropzone.addClass(\"hover\"),o.text(t.lang.image.dropImage)})).on(\"dragleave\",(function(){t.$dropzone.removeClass(\"hover\"),o.text(t.lang.image.dragImageHere)})),this.$dropzone.on(\"drop\",(function(n){var o=n.originalEvent.dataTransfer;n.preventDefault(),o&&o.files&&o.files.length?(t.$editable.focus(),t.context.invoke(\"editor.insertImagesOrCallback\",o.files)):e().each(o.types,(function(n,i){if(!(i.toLowerCase().indexOf(\"_moz_\")>-1)){var r=o.getData(i);i.toLowerCase().indexOf(\"text\")>-1?t.context.invoke(\"editor.pasteHTML\",r):e()(r).each((function(e,n){t.context.invoke(\"editor.insertNode\",n)}))}}))})).on(\"dragover\",!1)}},{key:\"destroy\",value:function(){var t=this;Object.keys(this.documentEventHandlers).forEach((function(e){t.$eventListener.off(e.substr(2).toLowerCase(),t.documentEventHandlers[e])})),this.documentEventHandlers={}}}],o&&zt(n.prototype,o),i&&zt(n,i),t}();function Mt(t,e){var n=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(!t)return;if(\"string\"==typeof t)return Ot(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Ot(t,e)}(t))||e&&t&&\"number\"==typeof t.length){n&&(t=n);var o=0,i=function(){};return{s:i,n:function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}},e:function(t){throw t},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var r,a=!0,s=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){s=!0,r=t},f:function(){try{a||null==n.return||n.return()}finally{if(s)throw r}}}}function Ot(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function Ut(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var jt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.$editor=e.layoutInfo.editor,this.$editable=e.layoutInfo.editable,this.$codable=e.layoutInfo.codable,this.options=e.options,this.CodeMirrorConstructor=window.CodeMirror,this.options.codemirror.CodeMirrorConstructor&&(this.CodeMirrorConstructor=this.options.codemirror.CodeMirrorConstructor)}var e,n,o;return e=t,n=[{key:\"sync\",value:function(t){var e=this.isActivated(),n=this.CodeMirrorConstructor;e&&(t?n?this.$codable.data(\"cmEditor\").getDoc().setValue(t):this.$codable.val(t):n&&this.$codable.data(\"cmEditor\").save())}},{key:\"initialize\",value:function(){var t=this;this.$codable.on(\"keyup\",(function(e){e.keyCode===wt.code.ESCAPE&&t.deactivate()}))}},{key:\"isActivated\",value:function(){return this.$editor.hasClass(\"codeview\")}},{key:\"toggle\",value:function(){this.isActivated()?this.deactivate():this.activate(),this.context.triggerEvent(\"codeview.toggled\")}},{key:\"purify\",value:function(t){if(this.options.codeviewFilter&&(t=t.replace(this.options.codeviewFilterRegex,\"\"),this.options.codeviewIframeFilter)){var e=this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);t=t.replace(/(<iframe.*?>.*?(?:<\\/iframe>)?)/gi,(function(t){if(/<.+src(?==?('|\"|\\s)?)[\\s\\S]+src(?=('|\"|\\s)?)[^>]*?>/i.test(t))return\"\";var n,o=Mt(e);try{for(o.s();!(n=o.n()).done;){var i=n.value;if(new RegExp('src=\"(https?:)?//'+i.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")+'/(.+)\"').test(t))return t}}catch(t){o.e(t)}finally{o.f()}return\"\"}))}return t}},{key:\"activate\",value:function(){var t=this,e=this.CodeMirrorConstructor;if(this.$codable.val(ht.html(this.$editable,this.options.prettifyHtml)),this.$codable.height(this.$editable.height()),this.context.invoke(\"toolbar.updateCodeview\",!0),this.context.invoke(\"airPopover.updateCodeview\",!0),this.$editor.addClass(\"codeview\"),this.$codable.focus(),e){var n=e.fromTextArea(this.$codable[0],this.options.codemirror);if(this.options.codemirror.tern){var o=new e.TernServer(this.options.codemirror.tern);n.ternServer=o,n.on(\"cursorActivity\",(function(t){o.updateArgHints(t)}))}n.on(\"blur\",(function(e){t.context.triggerEvent(\"blur.codeview\",n.getValue(),e)})),n.on(\"change\",(function(){t.context.triggerEvent(\"change.codeview\",n.getValue(),n)})),n.setSize(null,this.$editable.outerHeight()),this.$codable.data(\"cmEditor\",n)}else this.$codable.on(\"blur\",(function(e){t.context.triggerEvent(\"blur.codeview\",t.$codable.val(),e)})),this.$codable.on(\"input\",(function(){t.context.triggerEvent(\"change.codeview\",t.$codable.val(),t.$codable)}))}},{key:\"deactivate\",value:function(){if(this.CodeMirrorConstructor){var t=this.$codable.data(\"cmEditor\");this.$codable.val(t.getValue()),t.toTextArea()}var e=this.purify(ht.value(this.$codable,this.options.prettifyHtml)||ht.emptyPara),n=this.$editable.html()!==e;this.$editable.html(e),this.$editable.height(this.options.height?this.$codable.height():\"auto\"),this.$editor.removeClass(\"codeview\"),n&&this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable),this.$editable.focus(),this.context.invoke(\"toolbar.updateCodeview\",!1),this.context.invoke(\"airPopover.updateCodeview\",!1)}},{key:\"destroy\",value:function(){this.isActivated()&&this.deactivate()}}],n&&Ut(e.prototype,n),o&&Ut(e,o),t}();function Wt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Kt=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.$document=e()(document),this.$statusbar=n.layoutInfo.statusbar,this.$editable=n.layoutInfo.editable,this.$codable=n.layoutInfo.codable,this.options=n.options}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){var t=this;this.options.airMode||this.options.disableResizeEditor?this.destroy():this.$statusbar.on(\"mousedown\",(function(e){e.preventDefault(),e.stopPropagation();var n=t.$editable.offset().top-t.$document.scrollTop(),o=t.$codable.offset().top-t.$document.scrollTop(),i=function(e){var i=e.clientY-(n+24),r=e.clientY-(o+24);i=t.options.minheight>0?Math.max(i,t.options.minheight):i,i=t.options.maxHeight>0?Math.min(i,t.options.maxHeight):i,r=t.options.minheight>0?Math.max(r,t.options.minheight):r,r=t.options.maxHeight>0?Math.min(r,t.options.maxHeight):r,t.$editable.height(i),t.$codable.height(r)};t.$document.on(\"mousemove\",i).one(\"mouseup\",(function(){t.$document.off(\"mousemove\",i)}))}))}},{key:\"destroy\",value:function(){this.$statusbar.off(),this.$statusbar.addClass(\"locked\")}}])&&Wt(n.prototype,o),i&&Wt(n,i),t}();function Vt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var qt=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$editor=n.layoutInfo.editor,this.$toolbar=n.layoutInfo.toolbar,this.$editable=n.layoutInfo.editable,this.$codable=n.layoutInfo.codable,this.$window=e()(window),this.$scrollbar=e()(\"html, body\"),this.scrollbarClassName=\"note-fullscreen-body\",this.onResize=function(){o.resizeTo({h:o.$window.height()-o.$toolbar.outerHeight()})}}var n,o,i;return n=t,(o=[{key:\"resizeTo\",value:function(t){this.$editable.css(\"height\",t.h),this.$codable.css(\"height\",t.h),this.$codable.data(\"cmeditor\")&&this.$codable.data(\"cmeditor\").setsize(null,t.h)}},{key:\"toggle\",value:function(){this.$editor.toggleClass(\"fullscreen\");var t=this.isFullscreen();this.$scrollbar.toggleClass(this.scrollbarClassName,t),t?(this.$editable.data(\"orgHeight\",this.$editable.css(\"height\")),this.$editable.data(\"orgMaxHeight\",this.$editable.css(\"maxHeight\")),this.$editable.css(\"maxHeight\",\"\"),this.$window.on(\"resize\",this.onResize).trigger(\"resize\")):(this.$window.off(\"resize\",this.onResize),this.resizeTo({h:this.$editable.data(\"orgHeight\")}),this.$editable.css(\"maxHeight\",this.$editable.css(\"orgMaxHeight\"))),this.context.invoke(\"toolbar.updateFullscreen\",t)}},{key:\"isFullscreen\",value:function(){return this.$editor.hasClass(\"fullscreen\")}},{key:\"destroy\",value:function(){this.$scrollbar.removeClass(this.scrollbarClassName)}}])&&Vt(n.prototype,o),i&&Vt(n,i),t}();function _t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Gt=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$document=e()(document),this.$editingArea=n.layoutInfo.editingArea,this.options=n.options,this.lang=this.options.langInfo,this.events={\"summernote.mousedown\":function(t,e){o.update(e.target,e)&&e.preventDefault()},\"summernote.keyup summernote.scroll summernote.change summernote.dialog.shown\":function(){o.update()},\"summernote.disable summernote.blur\":function(){o.hide()},\"summernote.codeview.toggled\":function(){o.update()}}}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){var t=this;this.$handle=e()(['<div class=\"note-handle\">','<div class=\"note-control-selection\">','<div class=\"note-control-selection-bg\"></div>','<div class=\"note-control-holder note-control-nw\"></div>','<div class=\"note-control-holder note-control-ne\"></div>','<div class=\"note-control-holder note-control-sw\"></div>','<div class=\"',this.options.disableResizeImage?\"note-control-holder\":\"note-control-sizing\",' note-control-se\"></div>',this.options.disableResizeImage?\"\":'<div class=\"note-control-selection-info\"></div>',\"</div>\",\"</div>\"].join(\"\")).prependTo(this.$editingArea),this.$handle.on(\"mousedown\",(function(e){if(ht.isControlSizing(e.target)){e.preventDefault(),e.stopPropagation();var n=t.$handle.find(\".note-control-selection\").data(\"target\"),o=n.offset(),i=t.$document.scrollTop(),r=function(e){t.context.invoke(\"editor.resizeTo\",{x:e.clientX-o.left,y:e.clientY-(o.top-i)},n,!e.shiftKey),t.update(n[0],e)};t.$document.on(\"mousemove\",r).one(\"mouseup\",(function(e){e.preventDefault(),t.$document.off(\"mousemove\",r),t.context.invoke(\"editor.afterCommand\")})),n.data(\"ratio\")||n.data(\"ratio\",n.height()/n.width())}})),this.$handle.on(\"wheel\",(function(e){e.preventDefault(),t.update()}))}},{key:\"destroy\",value:function(){this.$handle.remove()}},{key:\"update\",value:function(t,n){if(this.context.isDisabled())return!1;var o=ht.isImg(t),i=this.$handle.find(\".note-control-selection\");if(this.context.invoke(\"imagePopover.update\",t,n),o){var r=e()(t),a=r.position(),s={left:a.left+parseInt(r.css(\"marginLeft\"),10),top:a.top+parseInt(r.css(\"marginTop\"),10)},l={w:r.outerWidth(!1),h:r.outerHeight(!1)};i.css({display:\"block\",left:s.left,top:s.top,width:l.w,height:l.h}).data(\"target\",r);var c=new Image;c.src=r.attr(\"src\");var u=l.w+\"x\"+l.h+\" (\"+this.lang.image.original+\": \"+c.width+\"x\"+c.height+\")\";i.find(\".note-control-selection-info\").text(u),this.context.invoke(\"editor.saveTarget\",t)}else this.hide();return o}},{key:\"hide\",value:function(){this.context.invoke(\"editor.clearTarget\"),this.$handle.children().hide()}}],o&&_t(n.prototype,o),i&&_t(n,i),t}();function Yt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Zt=/^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/]{2}|tel:|mailto:[A-Z0-9._%+-]+@|xmpp:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i,Qt=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.options=e.options,this.events={\"summernote.keyup\":function(t,e){e.isDefaultPrevented()||n.handleKeyup(e)},\"summernote.keydown\":function(t,e){n.handleKeydown(e)}}}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){this.lastWordRange=null}},{key:\"destroy\",value:function(){this.lastWordRange=null}},{key:\"replace\",value:function(){if(this.lastWordRange){var t=this.lastWordRange.toString(),n=t.match(Zt);if(n&&(n[1]||n[2])){var o=n[1]?t:\"http://\"+t,i=this.options.showDomainOnlyForAutolink?t.replace(/^(?:https?:\\/\\/)?(?:tel?:?)?(?:mailto?:?)?(?:xmpp?:?)?(?:www\\.)?/i,\"\").split(\"/\")[0]:t,r=e()(\"<a></a>\").html(i).attr(\"href\",o)[0];this.context.options.linkTargetBlank&&e()(r).attr(\"target\",\"_blank\"),this.lastWordRange.insertNode(r),this.lastWordRange=null,this.context.invoke(\"editor.focus\")}}}},{key:\"handleKeydown\",value:function(t){if(k.contains([wt.code.ENTER,wt.code.SPACE],t.keyCode)){var e=this.context.invoke(\"editor.createRange\").getWordRange();this.lastWordRange=e}}},{key:\"handleKeyup\",value:function(t){k.contains([wt.code.ENTER,wt.code.SPACE],t.keyCode)&&this.replace()}}])&&Yt(n.prototype,o),i&&Yt(n,i),t}();function Xt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Jt=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.$note=e.layoutInfo.note,this.events={\"summernote.change\":function(){n.$note.val(e.invoke(\"code\"))}}}var e,n,o;return e=t,(n=[{key:\"shouldInitialize\",value:function(){return ht.isTextarea(this.$note[0])}}])&&Xt(e.prototype,n),o&&Xt(e,o),t}();function te(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ee=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.options=e.options.replace||{},this.keys=[wt.code.ENTER,wt.code.SPACE,wt.code.PERIOD,wt.code.COMMA,wt.code.SEMICOLON,wt.code.SLASH],this.previousKeydownCode=null,this.events={\"summernote.keyup\":function(t,e){e.isDefaultPrevented()||n.handleKeyup(e)},\"summernote.keydown\":function(t,e){n.handleKeydown(e)}}}var e,n,o;return e=t,(n=[{key:\"shouldInitialize\",value:function(){return!!this.options.match}},{key:\"initialize\",value:function(){this.lastWord=null}},{key:\"destroy\",value:function(){this.lastWord=null}},{key:\"replace\",value:function(){if(this.lastWord){var t=this,e=this.lastWord.toString();this.options.match(e,(function(e){if(e){var n=\"\";if(\"string\"==typeof e?n=ht.createText(e):e instanceof jQuery?n=e[0]:e instanceof Node&&(n=e),!n)return;t.lastWord.insertNode(n),t.lastWord=null,t.context.invoke(\"editor.focus\")}}))}}},{key:\"handleKeydown\",value:function(t){if(this.previousKeydownCode&&k.contains(this.keys,this.previousKeydownCode))this.previousKeydownCode=t.keyCode;else{if(k.contains(this.keys,t.keyCode)){var e=this.context.invoke(\"editor.createRange\").getWordRange();this.lastWord=e}this.previousKeydownCode=t.keyCode}}},{key:\"handleKeyup\",value:function(t){k.contains(this.keys,t.keyCode)&&this.replace()}}])&&te(e.prototype,n),o&&te(e,o),t}();function ne(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var oe=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.$editingArea=e.layoutInfo.editingArea,this.options=e.options,!0===this.options.inheritPlaceholder&&(this.options.placeholder=this.context.$note.attr(\"placeholder\")||this.options.placeholder),this.events={\"summernote.init summernote.change\":function(){n.update()},\"summernote.codeview.toggled\":function(){n.update()}}}var n,o,i;return n=t,(o=[{key:\"shouldInitialize\",value:function(){return!!this.options.placeholder}},{key:\"initialize\",value:function(){var t=this;this.$placeholder=e()('<div class=\"note-placeholder\"></div>'),this.$placeholder.on(\"click\",(function(){t.context.invoke(\"focus\")})).html(this.options.placeholder).prependTo(this.$editingArea),this.update()}},{key:\"destroy\",value:function(){this.$placeholder.remove()}},{key:\"update\",value:function(){var t=!this.context.invoke(\"codeview.isActivated\")&&this.context.invoke(\"editor.isEmpty\");this.$placeholder.toggle(t)}}])&&ne(n.prototype,o),i&&ne(n,i),t}();function ie(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var re=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.ui=e().summernote.ui,this.context=n,this.$toolbar=n.layoutInfo.toolbar,this.options=n.options,this.lang=this.options.langInfo,this.invertedKeyMap=m.invertObject(this.options.keyMap[f.isMac?\"mac\":\"pc\"])}var n,o,i;return n=t,o=[{key:\"representShortcut\",value:function(t){var e=this.invertedKeyMap[t];return this.options.shortcuts&&e?(f.isMac&&(e=e.replace(\"CMD\",\"⌘\").replace(\"SHIFT\",\"⇧\")),\" (\"+(e=e.replace(\"BACKSLASH\",\"\\\\\").replace(\"SLASH\",\"/\").replace(\"LEFTBRACKET\",\"[\").replace(\"RIGHTBRACKET\",\"]\"))+\")\"):\"\"}},{key:\"button\",value:function(t){return!this.options.tooltip&&t.tooltip&&delete t.tooltip,t.container=this.options.container,this.ui.button(t)}},{key:\"initialize\",value:function(){this.addToolbarButtons(),this.addImagePopoverButtons(),this.addLinkPopoverButtons(),this.addTablePopoverButtons(),this.fontInstalledMap={}}},{key:\"destroy\",value:function(){delete this.fontInstalledMap}},{key:\"isFontInstalled\",value:function(t){return Object.prototype.hasOwnProperty.call(this.fontInstalledMap,t)||(this.fontInstalledMap[t]=f.isFontInstalled(t)||k.contains(this.options.fontNamesIgnoreCheck,t)),this.fontInstalledMap[t]}},{key:\"isFontDeservedToAdd\",value:function(t){return\"\"!==(t=t.toLowerCase())&&this.isFontInstalled(t)&&-1===f.genericFontFamilies.indexOf(t)}},{key:\"colorPalette\",value:function(t,n,o,i){var r=this;return this.ui.buttonGroup({className:\"note-color \"+t,children:[this.button({className:\"note-current-color-button\",contents:this.ui.icon(this.options.icons.font+\" note-recent-color\"),tooltip:n,click:function(t){var n=e()(t.currentTarget);o&&i?r.context.invoke(\"editor.color\",{backColor:n.attr(\"data-backColor\"),foreColor:n.attr(\"data-foreColor\")}):o?r.context.invoke(\"editor.color\",{backColor:n.attr(\"data-backColor\")}):i&&r.context.invoke(\"editor.color\",{foreColor:n.attr(\"data-foreColor\")})},callback:function(t){var e=t.find(\".note-recent-color\");o&&(e.css(\"background-color\",r.options.colorButton.backColor),t.attr(\"data-backColor\",r.options.colorButton.backColor)),i?(e.css(\"color\",r.options.colorButton.foreColor),t.attr(\"data-foreColor\",r.options.colorButton.foreColor)):e.css(\"color\",\"transparent\")}}),this.button({className:\"dropdown-toggle\",contents:this.ui.dropdownButtonContents(\"\",this.options),tooltip:this.lang.color.more,data:{toggle:\"dropdown\"}}),this.ui.dropdown({items:(o?['<div class=\"note-palette\">','<div class=\"note-palette-title\">'+this.lang.color.background+\"</div>\",\"<div>\",'<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"backColor\" data-value=\"transparent\">',this.lang.color.transparent,\"</button>\",\"</div>\",'<div class=\"note-holder\" data-event=\"backColor\">\\x3c!-- back colors --\\x3e</div>',\"<div>\",'<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"backColorPicker-'+this.options.id+'\">',this.lang.color.cpSelect,\"</button>\",'<input type=\"color\" id=\"backColorPicker-'+this.options.id+'\" class=\"note-btn note-color-select-btn\" value=\"'+this.options.colorButton.backColor+'\" data-event=\"backColorPalette-'+this.options.id+'\">',\"</div>\",'<div class=\"note-holder-custom\" id=\"backColorPalette-'+this.options.id+'\" data-event=\"backColor\"></div>',\"</div>\"].join(\"\"):\"\")+(i?['<div class=\"note-palette\">','<div class=\"note-palette-title\">'+this.lang.color.foreground+\"</div>\",\"<div>\",'<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"removeFormat\" data-value=\"foreColor\">',this.lang.color.resetToDefault,\"</button>\",\"</div>\",'<div class=\"note-holder\" data-event=\"foreColor\">\\x3c!-- fore colors --\\x3e</div>',\"<div>\",'<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"foreColorPicker-'+this.options.id+'\">',this.lang.color.cpSelect,\"</button>\",'<input type=\"color\" id=\"foreColorPicker-'+this.options.id+'\" class=\"note-btn note-color-select-btn\" value=\"'+this.options.colorButton.foreColor+'\" data-event=\"foreColorPalette-'+this.options.id+'\">',\"</div>\",'<div class=\"note-holder-custom\" id=\"foreColorPalette-'+this.options.id+'\" data-event=\"foreColor\"></div>',\"</div>\"].join(\"\"):\"\"),callback:function(t){t.find(\".note-holder\").each((function(t,n){var o=e()(n);o.append(r.ui.palette({colors:r.options.colors,colorsName:r.options.colorsName,eventName:o.data(\"event\"),container:r.options.container,tooltip:r.options.tooltip}).render())}));var n=[[\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\"]];t.find(\".note-holder-custom\").each((function(t,o){var i=e()(o);i.append(r.ui.palette({colors:n,colorsName:n,eventName:i.data(\"event\"),container:r.options.container,tooltip:r.options.tooltip}).render())})),t.find(\"input[type=color]\").each((function(n,o){e()(o).change((function(){var n=t.find(\"#\"+e()(this).data(\"event\")).find(\".note-color-btn\").first(),o=this.value.toUpperCase();n.css(\"background-color\",o).attr(\"aria-label\",o).attr(\"data-value\",o).attr(\"data-original-title\",o),n.click()}))}))},click:function(n){n.stopPropagation();var o=e()(\".\"+t).find(\".note-dropdown-menu\"),i=e()(n.target),a=i.data(\"event\"),s=i.attr(\"data-value\");if(\"openPalette\"===a){var l=o.find(\"#\"+s),c=e()(o.find(\"#\"+l.data(\"event\")).find(\".note-color-row\")[0]),u=c.find(\".note-color-btn\").last().detach(),d=l.val();u.css(\"background-color\",d).attr(\"aria-label\",d).attr(\"data-value\",d).attr(\"data-original-title\",d),c.prepend(u),l.click()}else{if(k.contains([\"backColor\",\"foreColor\"],a)){var h=\"backColor\"===a?\"background-color\":\"color\",f=i.closest(\".note-color\").find(\".note-recent-color\"),p=i.closest(\".note-color\").find(\".note-current-color-button\");f.css(h,s),p.attr(\"data-\"+a,s)}r.context.invoke(\"editor.\"+a,s)}}})]}).render()}},{key:\"addToolbarButtons\",value:function(){var t=this;this.context.memo(\"button.style\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents(t.ui.icon(t.options.icons.magic),t.options),tooltip:t.lang.style.style,data:{toggle:\"dropdown\"}}),t.ui.dropdown({className:\"dropdown-style\",items:t.options.styleTags,title:t.lang.style.style,template:function(e){\"string\"==typeof e&&(e={tag:e,title:Object.prototype.hasOwnProperty.call(t.lang.style,e)?t.lang.style[e]:e});var n=e.tag,o=e.title;return\"<\"+n+(e.style?' style=\"'+e.style+'\" ':\"\")+(e.className?' class=\"'+e.className+'\"':\"\")+\">\"+o+\"</\"+n+\">\"},click:t.context.createInvokeHandler(\"editor.formatBlock\")})]).render()}));for(var n=function(e,n){var o=t.options.styleTags[e];t.context.memo(\"button.style.\"+o,(function(){return t.button({className:\"note-btn-style-\"+o,contents:'<div data-value=\"'+o+'\">'+o.toUpperCase()+\"</div>\",tooltip:t.lang.style[o],click:t.context.createInvokeHandler(\"editor.formatBlock\")}).render()}))},o=0,i=this.options.styleTags.length;o<i;o++)n(o);this.context.memo(\"button.bold\",(function(){return t.button({className:\"note-btn-bold\",contents:t.ui.icon(t.options.icons.bold),tooltip:t.lang.font.bold+t.representShortcut(\"bold\"),click:t.context.createInvokeHandlerAndUpdateState(\"editor.bold\")}).render()})),this.context.memo(\"button.italic\",(function(){return t.button({className:\"note-btn-italic\",contents:t.ui.icon(t.options.icons.italic),tooltip:t.lang.font.italic+t.representShortcut(\"italic\"),click:t.context.createInvokeHandlerAndUpdateState(\"editor.italic\")}).render()})),this.context.memo(\"button.underline\",(function(){return t.button({className:\"note-btn-underline\",contents:t.ui.icon(t.options.icons.underline),tooltip:t.lang.font.underline+t.representShortcut(\"underline\"),click:t.context.createInvokeHandlerAndUpdateState(\"editor.underline\")}).render()})),this.context.memo(\"button.clear\",(function(){return t.button({contents:t.ui.icon(t.options.icons.eraser),tooltip:t.lang.font.clear+t.representShortcut(\"removeFormat\"),click:t.context.createInvokeHandler(\"editor.removeFormat\")}).render()})),this.context.memo(\"button.strikethrough\",(function(){return t.button({className:\"note-btn-strikethrough\",contents:t.ui.icon(t.options.icons.strikethrough),tooltip:t.lang.font.strikethrough+t.representShortcut(\"strikethrough\"),click:t.context.createInvokeHandlerAndUpdateState(\"editor.strikethrough\")}).render()})),this.context.memo(\"button.superscript\",(function(){return t.button({className:\"note-btn-superscript\",contents:t.ui.icon(t.options.icons.superscript),tooltip:t.lang.font.superscript,click:t.context.createInvokeHandlerAndUpdateState(\"editor.superscript\")}).render()})),this.context.memo(\"button.subscript\",(function(){return t.button({className:\"note-btn-subscript\",contents:t.ui.icon(t.options.icons.subscript),tooltip:t.lang.font.subscript,click:t.context.createInvokeHandlerAndUpdateState(\"editor.subscript\")}).render()})),this.context.memo(\"button.fontname\",(function(){var n=t.context.invoke(\"editor.currentStyle\");return t.options.addDefaultFonts&&e().each(n[\"font-family\"].split(\",\"),(function(e,n){n=n.trim().replace(/['\"]+/g,\"\"),t.isFontDeservedToAdd(n)&&-1===t.options.fontNames.indexOf(n)&&t.options.fontNames.push(n)})),t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents('<span class=\"note-current-fontname\"></span>',t.options),tooltip:t.lang.font.name,data:{toggle:\"dropdown\"}}),t.ui.dropdownCheck({className:\"dropdown-fontname\",checkClassName:t.options.icons.menuCheck,items:t.options.fontNames.filter(t.isFontInstalled.bind(t)),title:t.lang.font.name,template:function(t){return'<span style=\"font-family: '+f.validFontName(t)+'\">'+t+\"</span>\"},click:t.context.createInvokeHandlerAndUpdateState(\"editor.fontName\")})]).render()})),this.context.memo(\"button.fontsize\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents('<span class=\"note-current-fontsize\"></span>',t.options),tooltip:t.lang.font.size,data:{toggle:\"dropdown\"}}),t.ui.dropdownCheck({className:\"dropdown-fontsize\",checkClassName:t.options.icons.menuCheck,items:t.options.fontSizes,title:t.lang.font.size,click:t.context.createInvokeHandlerAndUpdateState(\"editor.fontSize\")})]).render()})),this.context.memo(\"button.fontsizeunit\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents('<span class=\"note-current-fontsizeunit\"></span>',t.options),tooltip:t.lang.font.sizeunit,data:{toggle:\"dropdown\"}}),t.ui.dropdownCheck({className:\"dropdown-fontsizeunit\",checkClassName:t.options.icons.menuCheck,items:t.options.fontSizeUnits,title:t.lang.font.sizeunit,click:t.context.createInvokeHandlerAndUpdateState(\"editor.fontSizeUnit\")})]).render()})),this.context.memo(\"button.color\",(function(){return t.colorPalette(\"note-color-all\",t.lang.color.recent,!0,!0)})),this.context.memo(\"button.forecolor\",(function(){return t.colorPalette(\"note-color-fore\",t.lang.color.foreground,!1,!0)})),this.context.memo(\"button.backcolor\",(function(){return t.colorPalette(\"note-color-back\",t.lang.color.background,!0,!1)})),this.context.memo(\"button.ul\",(function(){return t.button({contents:t.ui.icon(t.options.icons.unorderedlist),tooltip:t.lang.lists.unordered+t.representShortcut(\"insertUnorderedList\"),click:t.context.createInvokeHandler(\"editor.insertUnorderedList\")}).render()})),this.context.memo(\"button.ol\",(function(){return t.button({contents:t.ui.icon(t.options.icons.orderedlist),tooltip:t.lang.lists.ordered+t.representShortcut(\"insertOrderedList\"),click:t.context.createInvokeHandler(\"editor.insertOrderedList\")}).render()}));var r=this.button({contents:this.ui.icon(this.options.icons.alignLeft),tooltip:this.lang.paragraph.left+this.representShortcut(\"justifyLeft\"),click:this.context.createInvokeHandler(\"editor.justifyLeft\")}),a=this.button({contents:this.ui.icon(this.options.icons.alignCenter),tooltip:this.lang.paragraph.center+this.representShortcut(\"justifyCenter\"),click:this.context.createInvokeHandler(\"editor.justifyCenter\")}),s=this.button({contents:this.ui.icon(this.options.icons.alignRight),tooltip:this.lang.paragraph.right+this.representShortcut(\"justifyRight\"),click:this.context.createInvokeHandler(\"editor.justifyRight\")}),l=this.button({contents:this.ui.icon(this.options.icons.alignJustify),tooltip:this.lang.paragraph.justify+this.representShortcut(\"justifyFull\"),click:this.context.createInvokeHandler(\"editor.justifyFull\")}),c=this.button({contents:this.ui.icon(this.options.icons.outdent),tooltip:this.lang.paragraph.outdent+this.representShortcut(\"outdent\"),click:this.context.createInvokeHandler(\"editor.outdent\")}),u=this.button({contents:this.ui.icon(this.options.icons.indent),tooltip:this.lang.paragraph.indent+this.representShortcut(\"indent\"),click:this.context.createInvokeHandler(\"editor.indent\")});this.context.memo(\"button.justifyLeft\",m.invoke(r,\"render\")),this.context.memo(\"button.justifyCenter\",m.invoke(a,\"render\")),this.context.memo(\"button.justifyRight\",m.invoke(s,\"render\")),this.context.memo(\"button.justifyFull\",m.invoke(l,\"render\")),this.context.memo(\"button.outdent\",m.invoke(c,\"render\")),this.context.memo(\"button.indent\",m.invoke(u,\"render\")),this.context.memo(\"button.paragraph\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents(t.ui.icon(t.options.icons.alignLeft),t.options),tooltip:t.lang.paragraph.paragraph,data:{toggle:\"dropdown\"}}),t.ui.dropdown([t.ui.buttonGroup({className:\"note-align\",children:[r,a,s,l]}),t.ui.buttonGroup({className:\"note-list\",children:[c,u]})])]).render()})),this.context.memo(\"button.height\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents(t.ui.icon(t.options.icons.textHeight),t.options),tooltip:t.lang.font.height,data:{toggle:\"dropdown\"}}),t.ui.dropdownCheck({items:t.options.lineHeights,checkClassName:t.options.icons.menuCheck,className:\"dropdown-line-height\",title:t.lang.font.height,click:t.context.createInvokeHandler(\"editor.lineHeight\")})]).render()})),this.context.memo(\"button.table\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents(t.ui.icon(t.options.icons.table),t.options),tooltip:t.lang.table.table,data:{toggle:\"dropdown\"}}),t.ui.dropdown({title:t.lang.table.table,className:\"note-table\",items:['<div class=\"note-dimension-picker\">','<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"></div>','<div class=\"note-dimension-picker-highlighted\"></div>','<div class=\"note-dimension-picker-unhighlighted\"></div>',\"</div>\",'<div class=\"note-dimension-display\">1 x 1</div>'].join(\"\")})],{callback:function(e){e.find(\".note-dimension-picker-mousecatcher\").css({width:t.options.insertTableMaxSize.col+\"em\",height:t.options.insertTableMaxSize.row+\"em\"}).mouseup(t.context.createInvokeHandler(\"editor.insertTable\")).on(\"mousemove\",t.tableMoveHandler.bind(t))}}).render()})),this.context.memo(\"button.link\",(function(){return t.button({contents:t.ui.icon(t.options.icons.link),tooltip:t.lang.link.link+t.representShortcut(\"linkDialog.show\"),click:t.context.createInvokeHandler(\"linkDialog.show\")}).render()})),this.context.memo(\"button.picture\",(function(){return t.button({contents:t.ui.icon(t.options.icons.picture),tooltip:t.lang.image.image,click:t.context.createInvokeHandler(\"imageDialog.show\")}).render()})),this.context.memo(\"button.video\",(function(){return t.button({contents:t.ui.icon(t.options.icons.video),tooltip:t.lang.video.video,click:t.context.createInvokeHandler(\"videoDialog.show\")}).render()})),this.context.memo(\"button.hr\",(function(){return t.button({contents:t.ui.icon(t.options.icons.minus),tooltip:t.lang.hr.insert+t.representShortcut(\"insertHorizontalRule\"),click:t.context.createInvokeHandler(\"editor.insertHorizontalRule\")}).render()})),this.context.memo(\"button.fullscreen\",(function(){return t.button({className:\"btn-fullscreen note-codeview-keep\",contents:t.ui.icon(t.options.icons.arrowsAlt),tooltip:t.lang.options.fullscreen,click:t.context.createInvokeHandler(\"fullscreen.toggle\")}).render()})),this.context.memo(\"button.codeview\",(function(){return t.button({className:\"btn-codeview note-codeview-keep\",contents:t.ui.icon(t.options.icons.code),tooltip:t.lang.options.codeview,click:t.context.createInvokeHandler(\"codeview.toggle\")}).render()})),this.context.memo(\"button.redo\",(function(){return t.button({contents:t.ui.icon(t.options.icons.redo),tooltip:t.lang.history.redo+t.representShortcut(\"redo\"),click:t.context.createInvokeHandler(\"editor.redo\")}).render()})),this.context.memo(\"button.undo\",(function(){return t.button({contents:t.ui.icon(t.options.icons.undo),tooltip:t.lang.history.undo+t.representShortcut(\"undo\"),click:t.context.createInvokeHandler(\"editor.undo\")}).render()})),this.context.memo(\"button.help\",(function(){return t.button({contents:t.ui.icon(t.options.icons.question),tooltip:t.lang.options.help,click:t.context.createInvokeHandler(\"helpDialog.show\")}).render()}))}},{key:\"addImagePopoverButtons\",value:function(){var t=this;this.context.memo(\"button.resizeFull\",(function(){return t.button({contents:'<span class=\"note-fontsize-10\">100%</span>',tooltip:t.lang.image.resizeFull,click:t.context.createInvokeHandler(\"editor.resize\",\"1\")}).render()})),this.context.memo(\"button.resizeHalf\",(function(){return t.button({contents:'<span class=\"note-fontsize-10\">50%</span>',tooltip:t.lang.image.resizeHalf,click:t.context.createInvokeHandler(\"editor.resize\",\"0.5\")}).render()})),this.context.memo(\"button.resizeQuarter\",(function(){return t.button({contents:'<span class=\"note-fontsize-10\">25%</span>',tooltip:t.lang.image.resizeQuarter,click:t.context.createInvokeHandler(\"editor.resize\",\"0.25\")}).render()})),this.context.memo(\"button.resizeNone\",(function(){return t.button({contents:t.ui.icon(t.options.icons.rollback),tooltip:t.lang.image.resizeNone,click:t.context.createInvokeHandler(\"editor.resize\",\"0\")}).render()})),this.context.memo(\"button.floatLeft\",(function(){return t.button({contents:t.ui.icon(t.options.icons.floatLeft),tooltip:t.lang.image.floatLeft,click:t.context.createInvokeHandler(\"editor.floatMe\",\"left\")}).render()})),this.context.memo(\"button.floatRight\",(function(){return t.button({contents:t.ui.icon(t.options.icons.floatRight),tooltip:t.lang.image.floatRight,click:t.context.createInvokeHandler(\"editor.floatMe\",\"right\")}).render()})),this.context.memo(\"button.floatNone\",(function(){return t.button({contents:t.ui.icon(t.options.icons.rollback),tooltip:t.lang.image.floatNone,click:t.context.createInvokeHandler(\"editor.floatMe\",\"none\")}).render()})),this.context.memo(\"button.removeMedia\",(function(){return t.button({contents:t.ui.icon(t.options.icons.trash),tooltip:t.lang.image.remove,click:t.context.createInvokeHandler(\"editor.removeMedia\")}).render()}))}},{key:\"addLinkPopoverButtons\",value:function(){var t=this;this.context.memo(\"button.linkDialogShow\",(function(){return t.button({contents:t.ui.icon(t.options.icons.link),tooltip:t.lang.link.edit,click:t.context.createInvokeHandler(\"linkDialog.show\")}).render()})),this.context.memo(\"button.unlink\",(function(){return t.button({contents:t.ui.icon(t.options.icons.unlink),tooltip:t.lang.link.unlink,click:t.context.createInvokeHandler(\"editor.unlink\")}).render()}))}},{key:\"addTablePopoverButtons\",value:function(){var t=this;this.context.memo(\"button.addRowUp\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.rowAbove),tooltip:t.lang.table.addRowAbove,click:t.context.createInvokeHandler(\"editor.addRow\",\"top\")}).render()})),this.context.memo(\"button.addRowDown\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.rowBelow),tooltip:t.lang.table.addRowBelow,click:t.context.createInvokeHandler(\"editor.addRow\",\"bottom\")}).render()})),this.context.memo(\"button.addColLeft\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.colBefore),tooltip:t.lang.table.addColLeft,click:t.context.createInvokeHandler(\"editor.addCol\",\"left\")}).render()})),this.context.memo(\"button.addColRight\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.colAfter),tooltip:t.lang.table.addColRight,click:t.context.createInvokeHandler(\"editor.addCol\",\"right\")}).render()})),this.context.memo(\"button.deleteRow\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.rowRemove),tooltip:t.lang.table.delRow,click:t.context.createInvokeHandler(\"editor.deleteRow\")}).render()})),this.context.memo(\"button.deleteCol\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.colRemove),tooltip:t.lang.table.delCol,click:t.context.createInvokeHandler(\"editor.deleteCol\")}).render()})),this.context.memo(\"button.deleteTable\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.trash),tooltip:t.lang.table.delTable,click:t.context.createInvokeHandler(\"editor.deleteTable\")}).render()}))}},{key:\"build\",value:function(t,e){for(var n=0,o=e.length;n<o;n++){for(var i=e[n],r=Array.isArray(i)?i[0]:i,a=Array.isArray(i)?1===i.length?[i[0]]:i[1]:[i],s=this.ui.buttonGroup({className:\"note-\"+r}).render(),l=0,c=a.length;l<c;l++){var u=this.context.memo(\"button.\"+a[l]);u&&s.append(\"function\"==typeof u?u(this.context):u)}s.appendTo(t)}}},{key:\"updateCurrentStyle\",value:function(t){var n=t||this.$toolbar,o=this.context.invoke(\"editor.currentStyle\");if(this.updateBtnStates(n,{\".note-btn-bold\":function(){return\"bold\"===o[\"font-bold\"]},\".note-btn-italic\":function(){return\"italic\"===o[\"font-italic\"]},\".note-btn-underline\":function(){return\"underline\"===o[\"font-underline\"]},\".note-btn-subscript\":function(){return\"subscript\"===o[\"font-subscript\"]},\".note-btn-superscript\":function(){return\"superscript\"===o[\"font-superscript\"]},\".note-btn-strikethrough\":function(){return\"strikethrough\"===o[\"font-strikethrough\"]}}),o[\"font-family\"]){var i=o[\"font-family\"].split(\",\").map((function(t){return t.replace(/[\\'\\\"]/g,\"\").replace(/\\s+$/,\"\").replace(/^\\s+/,\"\")})),r=k.find(i,this.isFontInstalled.bind(this));n.find(\".dropdown-fontname a\").each((function(t,n){var o=e()(n),i=o.data(\"value\")+\"\"==r+\"\";o.toggleClass(\"checked\",i)})),n.find(\".note-current-fontname\").text(r).css(\"font-family\",r)}if(o[\"font-size\"]){var a=o[\"font-size\"];n.find(\".dropdown-fontsize a\").each((function(t,n){var o=e()(n),i=o.data(\"value\")+\"\"==a+\"\";o.toggleClass(\"checked\",i)})),n.find(\".note-current-fontsize\").text(a);var s=o[\"font-size-unit\"];n.find(\".dropdown-fontsizeunit a\").each((function(t,n){var o=e()(n),i=o.data(\"value\")+\"\"==s+\"\";o.toggleClass(\"checked\",i)})),n.find(\".note-current-fontsizeunit\").text(s)}if(o[\"line-height\"]){var l=o[\"line-height\"];n.find(\".dropdown-line-height a\").each((function(t,n){var o=e()(n),i=e()(n).data(\"value\")+\"\"==l+\"\";o.toggleClass(\"checked\",i)})),n.find(\".note-current-line-height\").text(l)}}},{key:\"updateBtnStates\",value:function(t,n){var o=this;e().each(n,(function(e,n){o.ui.toggleBtnActive(t.find(e),n())}))}},{key:\"tableMoveHandler\",value:function(t){var n,o=e()(t.target.parentNode),i=o.next(),r=o.find(\".note-dimension-picker-mousecatcher\"),a=o.find(\".note-dimension-picker-highlighted\"),s=o.find(\".note-dimension-picker-unhighlighted\");if(void 0===t.offsetX){var l=e()(t.target).offset();n={x:t.pageX-l.left,y:t.pageY-l.top}}else n={x:t.offsetX,y:t.offsetY};var c=Math.ceil(n.x/18)||1,u=Math.ceil(n.y/18)||1;a.css({width:c+\"em\",height:u+\"em\"}),r.data(\"value\",c+\"x\"+u),c>3&&c<this.options.insertTableMaxSize.col&&s.css({width:c+1+\"em\"}),u>3&&u<this.options.insertTableMaxSize.row&&s.css({height:u+1+\"em\"}),i.html(c+\" x \"+u)}}],o&&ie(n.prototype,o),i&&ie(n,i),t}();function ae(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var se=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$window=e()(window),this.$document=e()(document),this.ui=e().summernote.ui,this.$note=n.layoutInfo.note,this.$editor=n.layoutInfo.editor,this.$toolbar=n.layoutInfo.toolbar,this.$editable=n.layoutInfo.editable,this.$statusbar=n.layoutInfo.statusbar,this.options=n.options,this.isFollowing=!1,this.followScroll=this.followScroll.bind(this)}var n,o,i;return n=t,(o=[{key:\"shouldInitialize\",value:function(){return!this.options.airMode}},{key:\"initialize\",value:function(){var t=this;this.options.toolbar=this.options.toolbar||[],this.options.toolbar.length?this.context.invoke(\"buttons.build\",this.$toolbar,this.options.toolbar):this.$toolbar.hide(),this.options.toolbarContainer&&this.$toolbar.appendTo(this.options.toolbarContainer),this.changeContainer(!1),this.$note.on(\"summernote.keyup summernote.mouseup summernote.change\",(function(){t.context.invoke(\"buttons.updateCurrentStyle\")})),this.context.invoke(\"buttons.updateCurrentStyle\"),this.options.followingToolbar&&this.$window.on(\"scroll resize\",this.followScroll)}},{key:\"destroy\",value:function(){this.$toolbar.children().remove(),this.options.followingToolbar&&this.$window.off(\"scroll resize\",this.followScroll)}},{key:\"followScroll\",value:function(){if(this.$editor.hasClass(\"fullscreen\"))return!1;var t=this.$editor.outerHeight(),n=this.$editor.width(),o=this.$toolbar.height(),i=this.$statusbar.height(),r=0;this.options.otherStaticBar&&(r=e()(this.options.otherStaticBar).outerHeight());var a=this.$document.scrollTop(),s=this.$editor.offset().top,l=s-r,c=s+t-r-o-i;!this.isFollowing&&a>l&&a<c-o?(this.isFollowing=!0,this.$editable.css({marginTop:this.$toolbar.outerHeight()}),this.$toolbar.css({position:\"fixed\",top:r,width:n,zIndex:1e3})):this.isFollowing&&(a<l||a>c)&&(this.isFollowing=!1,this.$toolbar.css({position:\"relative\",top:0,width:\"100%\",zIndex:\"auto\"}),this.$editable.css({marginTop:\"\"}))}},{key:\"changeContainer\",value:function(t){t?this.$toolbar.prependTo(this.$editor):this.options.toolbarContainer&&this.$toolbar.appendTo(this.options.toolbarContainer),this.options.followingToolbar&&this.followScroll()}},{key:\"updateFullscreen\",value:function(t){this.ui.toggleBtnActive(this.$toolbar.find(\".btn-fullscreen\"),t),this.changeContainer(t)}},{key:\"updateCodeview\",value:function(t){this.ui.toggleBtnActive(this.$toolbar.find(\".btn-codeview\"),t),t?this.deactivate():this.activate()}},{key:\"activate\",value:function(t){var e=this.$toolbar.find(\"button\");t||(e=e.not(\".note-codeview-keep\")),this.ui.toggleBtn(e,!0)}},{key:\"deactivate\",value:function(t){var e=this.$toolbar.find(\"button\");t||(e=e.not(\".note-codeview-keep\")),this.ui.toggleBtn(e,!1)}}])&&ae(n.prototype,o),i&&ae(n,i),t}();function le(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ce=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$body=e()(document.body),this.$editor=n.layoutInfo.editor,this.options=n.options,this.lang=this.options.langInfo,n.memo(\"help.linkDialog.show\",this.options.langInfo.help[\"linkDialog.show\"])}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){var t=this.options.dialogsInBody?this.$body:this.options.container,n=['<div class=\"form-group note-form-group\">','<label for=\"note-dialog-link-txt-'.concat(this.options.id,'\" class=\"note-form-label\">').concat(this.lang.link.textToDisplay,\"</label>\"),'<input id=\"note-dialog-link-txt-'.concat(this.options.id,'\" class=\"note-link-text form-control note-form-control note-input\" type=\"text\"/>'),\"</div>\",'<div class=\"form-group note-form-group\">','<label for=\"note-dialog-link-url-'.concat(this.options.id,'\" class=\"note-form-label\">').concat(this.lang.link.url,\"</label>\"),'<input id=\"note-dialog-link-url-'.concat(this.options.id,'\" class=\"note-link-url form-control note-form-control note-input\" type=\"text\" value=\"http://\"/>'),\"</div>\",this.options.disableLinkTarget?\"\":e()(\"<div></div>\").append(this.ui.checkbox({className:\"sn-checkbox-open-in-new-window\",text:this.lang.link.openInNewWindow,checked:!0}).render()).html(),e()(\"<div></div>\").append(this.ui.checkbox({className:\"sn-checkbox-use-protocol\",text:this.lang.link.useProtocol,checked:!0}).render()).html()].join(\"\"),o='<input type=\"button\" href=\"#\" class=\"'.concat(\"btn btn-primary note-btn note-btn-primary note-link-btn\",'\" value=\"').concat(this.lang.link.insert,'\" disabled>');this.$dialog=this.ui.dialog({className:\"link-dialog\",title:this.lang.link.insert,fade:this.options.dialogsFade,body:n,footer:o}).render().appendTo(t)}},{key:\"destroy\",value:function(){this.ui.hideDialog(this.$dialog),this.$dialog.remove()}},{key:\"bindEnterKey\",value:function(t,e){t.on(\"keypress\",(function(t){t.keyCode===wt.code.ENTER&&(t.preventDefault(),e.trigger(\"click\"))}))}},{key:\"toggleLinkBtn\",value:function(t,e,n){this.ui.toggleBtn(t,e.val()&&n.val())}},{key:\"showLinkDialog\",value:function(t){var n=this;return e().Deferred((function(e){var o=n.$dialog.find(\".note-link-text\"),i=n.$dialog.find(\".note-link-url\"),r=n.$dialog.find(\".note-link-btn\"),a=n.$dialog.find(\".sn-checkbox-open-in-new-window input[type=checkbox]\"),s=n.$dialog.find(\".sn-checkbox-use-protocol input[type=checkbox]\");n.ui.onDialogShown(n.$dialog,(function(){n.context.triggerEvent(\"dialog.shown\"),!t.url&&m.isValidUrl(t.text)&&(t.url=t.text),o.on(\"input paste propertychange\",(function(){t.text=o.val(),n.toggleLinkBtn(r,o,i)})).val(t.text),i.on(\"input paste propertychange\",(function(){t.text||o.val(i.val()),n.toggleLinkBtn(r,o,i)})).val(t.url),f.isSupportTouch||i.trigger(\"focus\"),n.toggleLinkBtn(r,o,i),n.bindEnterKey(i,r),n.bindEnterKey(o,r);var l=void 0!==t.isNewWindow?t.isNewWindow:n.context.options.linkTargetBlank;a.prop(\"checked\",l);var c=!t.url&&n.context.options.useProtocol;s.prop(\"checked\",c),r.one(\"click\",(function(r){r.preventDefault(),e.resolve({range:t.range,url:i.val(),text:o.val(),isNewWindow:a.is(\":checked\"),checkProtocol:s.is(\":checked\")}),n.ui.hideDialog(n.$dialog)}))})),n.ui.onDialogHidden(n.$dialog,(function(){o.off(),i.off(),r.off(),\"pending\"===e.state()&&e.reject()})),n.ui.showDialog(n.$dialog)})).promise()}},{key:\"show\",value:function(){var t=this,e=this.context.invoke(\"editor.getLinkInfo\");this.context.invoke(\"editor.saveRange\"),this.showLinkDialog(e).then((function(e){t.context.invoke(\"editor.restoreRange\"),t.context.invoke(\"editor.createLink\",e)})).fail((function(){t.context.invoke(\"editor.restoreRange\")}))}}])&&le(n.prototype,o),i&&le(n,i),t}();function ue(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var de=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.options=n.options,this.events={\"summernote.keyup summernote.mouseup summernote.change summernote.scroll\":function(){o.update()},\"summernote.disable summernote.dialog.shown\":function(){o.hide()},\"summernote.blur\":function(t,e){e.originalEvent&&e.originalEvent.relatedTarget&&o.$popover[0].contains(e.originalEvent.relatedTarget)||o.hide()}}}var n,o,i;return n=t,(o=[{key:\"shouldInitialize\",value:function(){return!k.isEmpty(this.options.popover.link)}},{key:\"initialize\",value:function(){this.$popover=this.ui.popover({className:\"note-link-popover\",callback:function(t){t.find(\".popover-content,.note-popover-content\").prepend('<span><a target=\"_blank\"></a>&nbsp;</span>')}}).render().appendTo(this.options.container);var t=this.$popover.find(\".popover-content,.note-popover-content\");this.context.invoke(\"buttons.build\",t,this.options.popover.link),this.$popover.on(\"mousedown\",(function(t){t.preventDefault()}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"update\",value:function(){if(this.context.invoke(\"editor.hasFocus\")){var t=this.context.invoke(\"editor.getLastRange\");if(t.isCollapsed()&&t.isOnAnchor()){var n=ht.ancestor(t.sc,ht.isAnchor),o=e()(n).attr(\"href\");this.$popover.find(\"a\").attr(\"href\",o).text(o);var i=ht.posFromPlaceholder(n),r=e()(this.options.container).offset();i.top-=r.top,i.left-=r.left,this.$popover.css({display:\"block\",left:i.left,top:i.top})}else this.hide()}else this.hide()}},{key:\"hide\",value:function(){this.$popover.hide()}}])&&ue(n.prototype,o),i&&ue(n,i),t}();function he(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var fe=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$body=e()(document.body),this.$editor=n.layoutInfo.editor,this.options=n.options,this.lang=this.options.langInfo}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){var t=\"\";if(this.options.maximumImageFileSize){var e=Math.floor(Math.log(this.options.maximumImageFileSize)/Math.log(1024)),n=1*(this.options.maximumImageFileSize/Math.pow(1024,e)).toFixed(2)+\" \"+\" KMGTP\"[e]+\"B\";t=\"<small>\".concat(this.lang.image.maximumFileSize+\" : \"+n,\"</small>\")}var o=this.options.dialogsInBody?this.$body:this.options.container,i=['<div class=\"form-group note-form-group note-group-select-from-files\">','<label for=\"note-dialog-image-file-'+this.options.id+'\" class=\"note-form-label\">'+this.lang.image.selectFromFiles+\"</label>\",'<input id=\"note-dialog-image-file-'+this.options.id+'\" class=\"note-image-input form-control-file note-form-control note-input\" ',' type=\"file\" name=\"files\" accept=\"'+this.options.acceptImageFileTypes+'\" multiple=\"multiple\"/>',t,\"</div>\",'<div class=\"form-group note-group-image-url\">','<label for=\"note-dialog-image-url-'+this.options.id+'\" class=\"note-form-label\">'+this.lang.image.url+\"</label>\",'<input id=\"note-dialog-image-url-'+this.options.id+'\" class=\"note-image-url form-control note-form-control note-input\" type=\"text\"/>',\"</div>\"].join(\"\"),r='<input type=\"button\" href=\"#\" class=\"'.concat(\"btn btn-primary note-btn note-btn-primary note-image-btn\",'\" value=\"').concat(this.lang.image.insert,'\" disabled>');this.$dialog=this.ui.dialog({title:this.lang.image.insert,fade:this.options.dialogsFade,body:i,footer:r}).render().appendTo(o)}},{key:\"destroy\",value:function(){this.ui.hideDialog(this.$dialog),this.$dialog.remove()}},{key:\"bindEnterKey\",value:function(t,e){t.on(\"keypress\",(function(t){t.keyCode===wt.code.ENTER&&(t.preventDefault(),e.trigger(\"click\"))}))}},{key:\"show\",value:function(){var t=this;this.context.invoke(\"editor.saveRange\"),this.showImageDialog().then((function(e){t.ui.hideDialog(t.$dialog),t.context.invoke(\"editor.restoreRange\"),\"string\"==typeof e?t.options.callbacks.onImageLinkInsert?t.context.triggerEvent(\"image.link.insert\",e):t.context.invoke(\"editor.insertImage\",e):t.context.invoke(\"editor.insertImagesOrCallback\",e)})).fail((function(){t.context.invoke(\"editor.restoreRange\")}))}},{key:\"showImageDialog\",value:function(){var t=this;return e().Deferred((function(e){var n=t.$dialog.find(\".note-image-input\"),o=t.$dialog.find(\".note-image-url\"),i=t.$dialog.find(\".note-image-btn\");t.ui.onDialogShown(t.$dialog,(function(){t.context.triggerEvent(\"dialog.shown\"),n.replaceWith(n.clone().on(\"change\",(function(t){e.resolve(t.target.files||t.target.value)})).val(\"\")),o.on(\"input paste propertychange\",(function(){t.ui.toggleBtn(i,o.val())})).val(\"\"),f.isSupportTouch||o.trigger(\"focus\"),i.click((function(t){t.preventDefault(),e.resolve(o.val())})),t.bindEnterKey(o,i)})),t.ui.onDialogHidden(t.$dialog,(function(){n.off(),o.off(),i.off(),\"pending\"===e.state()&&e.reject()})),t.ui.showDialog(t.$dialog)}))}}])&&he(n.prototype,o),i&&he(n,i),t}();function pe(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var me=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.editable=n.layoutInfo.editable[0],this.options=n.options,this.events={\"summernote.disable summernote.dialog.shown\":function(){o.hide()},\"summernote.blur\":function(t,e){e.originalEvent&&e.originalEvent.relatedTarget&&o.$popover[0].contains(e.originalEvent.relatedTarget)||o.hide()}}}var n,o,i;return n=t,o=[{key:\"shouldInitialize\",value:function(){return!k.isEmpty(this.options.popover.image)}},{key:\"initialize\",value:function(){this.$popover=this.ui.popover({className:\"note-image-popover\"}).render().appendTo(this.options.container);var t=this.$popover.find(\".popover-content,.note-popover-content\");this.context.invoke(\"buttons.build\",t,this.options.popover.image),this.$popover.on(\"mousedown\",(function(t){t.preventDefault()}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"update\",value:function(t,n){if(ht.isImg(t)){var o=e()(t).offset(),i=e()(this.options.container).offset(),r={};this.options.popatmouse?(r.left=n.pageX-20,r.top=n.pageY):r=o,r.top-=i.top,r.left-=i.left,this.$popover.css({display:\"block\",left:r.left,top:r.top})}else this.hide()}},{key:\"hide\",value:function(){this.$popover.hide()}}],o&&pe(n.prototype,o),i&&pe(n,i),t}();function ve(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ge=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.options=n.options,this.events={\"summernote.mousedown\":function(t,e){o.update(e.target)},\"summernote.keyup summernote.scroll summernote.change\":function(){o.update()},\"summernote.disable summernote.dialog.shown\":function(){o.hide()},\"summernote.blur\":function(t,e){e.originalEvent&&e.originalEvent.relatedTarget&&o.$popover[0].contains(e.originalEvent.relatedTarget)||o.hide()}}}var n,o,i;return n=t,o=[{key:\"shouldInitialize\",value:function(){return!k.isEmpty(this.options.popover.table)}},{key:\"initialize\",value:function(){this.$popover=this.ui.popover({className:\"note-table-popover\"}).render().appendTo(this.options.container);var t=this.$popover.find(\".popover-content,.note-popover-content\");this.context.invoke(\"buttons.build\",t,this.options.popover.table),f.isFF&&document.execCommand(\"enableInlineTableEditing\",!1,!1),this.$popover.on(\"mousedown\",(function(t){t.preventDefault()}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"update\",value:function(t){if(this.context.isDisabled())return!1;var n=ht.isCell(t)||ht.isCell(null==t?void 0:t.parentElement);if(n){var o=ht.posFromPlaceholder(t),i=e()(this.options.container).offset();o.top-=i.top,o.left-=i.left,this.$popover.css({display:\"block\",left:o.left,top:o.top})}else this.hide();return n}},{key:\"hide\",value:function(){this.$popover.hide()}}],o&&ve(n.prototype,o),i&&ve(n,i),t}();function be(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ye=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$body=e()(document.body),this.$editor=n.layoutInfo.editor,this.options=n.options,this.lang=this.options.langInfo}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){var t=this.options.dialogsInBody?this.$body:this.options.container,e=['<div class=\"form-group note-form-group row-fluid\">','<label for=\"note-dialog-video-url-'.concat(this.options.id,'\" class=\"note-form-label\">').concat(this.lang.video.url,' <small class=\"text-muted\">').concat(this.lang.video.providers,\"</small></label>\"),'<input id=\"note-dialog-video-url-'.concat(this.options.id,'\" class=\"note-video-url form-control note-form-control note-input\" type=\"text\"/>'),\"</div>\"].join(\"\"),n='<input type=\"button\" href=\"#\" class=\"'.concat(\"btn btn-primary note-btn note-btn-primary note-video-btn\",'\" value=\"').concat(this.lang.video.insert,'\" disabled>');this.$dialog=this.ui.dialog({title:this.lang.video.insert,fade:this.options.dialogsFade,body:e,footer:n}).render().appendTo(t)}},{key:\"destroy\",value:function(){this.ui.hideDialog(this.$dialog),this.$dialog.remove()}},{key:\"bindEnterKey\",value:function(t,e){t.on(\"keypress\",(function(t){t.keyCode===wt.code.ENTER&&(t.preventDefault(),e.trigger(\"click\"))}))}},{key:\"createVideoNode\",value:function(t){var n,o=t.match(/\\/\\/(?:(?:www|m)\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([\\w|-]{11})(?:(?:[\\?&]t=)(\\S+))?$/),i=t.match(/(?:\\.|\\/\\/)drive\\.google\\.com\\/file\\/d\\/(.[a-zA-Z0-9_-]*)\\/view/),r=t.match(/(?:www\\.|\\/\\/)instagram\\.com\\/p\\/(.[a-zA-Z0-9_-]*)/),a=t.match(/\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/),s=t.match(/\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/),l=t.match(/.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/),c=t.match(/\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/),u=t.match(/\\/\\/(.*)\\/videos\\/watch\\/([^?]*)(?:\\?(?:start=(\\w*))?(?:&stop=(\\w*))?(?:&loop=([10]))?(?:&autoplay=([10]))?(?:&muted=([10]))?)?/),d=t.match(/\\/\\/v\\.qq\\.com.*?vid=(.+)/),h=t.match(/\\/\\/v\\.qq\\.com\\/x?\\/?(page|cover).*?\\/([^\\/]+)\\.html\\??.*/),f=t.match(/^.+.(mp4|m4v)$/),p=t.match(/^.+.(ogg|ogv)$/),m=t.match(/^.+.(webm)$/),v=t.match(/(?:www\\.|\\/\\/)facebook\\.com\\/([^\\/]+)\\/videos\\/([0-9]+)/);if(o&&11===o[1].length){var g=o[1],b=0;if(void 0!==o[2]){var y=o[2].match(/^(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?$/);if(y)for(var k=[3600,60,1],w=0,C=k.length;w<C;w++)b+=void 0!==y[w+1]?k[w]*parseInt(y[w+1],10):0}n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"//www.youtube.com/embed/\"+g+(b>0?\"?start=\"+b:\"\")).attr(\"width\",\"640\").attr(\"height\",\"360\")}else if(i&&i[0].length)n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"https://drive.google.com/file/d/\"+i[1]+\"/preview\").attr(\"width\",\"640\").attr(\"height\",\"480\");else if(r&&r[0].length)n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"https://instagram.com/p/\"+r[1]+\"/embed/\").attr(\"width\",\"612\").attr(\"height\",\"710\").attr(\"scrolling\",\"no\").attr(\"allowtransparency\",\"true\");else if(a&&a[0].length)n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",a[0]+\"/embed/simple\").attr(\"width\",\"600\").attr(\"height\",\"600\").attr(\"class\",\"vine-embed\");else if(s&&s[3].length)n=e()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\",0).attr(\"src\",\"//player.vimeo.com/video/\"+s[3]).attr(\"width\",\"640\").attr(\"height\",\"360\");else if(l&&l[2].length)n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"//www.dailymotion.com/embed/video/\"+l[2]).attr(\"width\",\"640\").attr(\"height\",\"360\");else if(c&&c[1].length)n=e()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\",0).attr(\"height\",\"498\").attr(\"width\",\"510\").attr(\"src\",\"//player.youku.com/embed/\"+c[1]);else if(u&&u[0].length){var x=0;\"undefined\"!==u[2]&&(x=u[2]);var S=0;\"undefined\"!==u[3]&&(S=u[3]);var T=0;\"undefined\"!==u[4]&&(T=u[4]);var E=0;\"undefined\"!==u[5]&&(E=u[5]);var I=0;\"undefined\"!==u[6]&&(I=u[6]),n=e()('<iframe allowfullscreen sandbox=\"allow-same-origin allow-scripts allow-popups\">').attr(\"frameborder\",0).attr(\"src\",\"//\"+u[1]+\"/videos/embed/\"+u[2]+\"?loop=\"+T+\"&autoplay=\"+E+\"&muted=\"+I+(x>0?\"&start=\"+x:\"\")+(S>0?\"&end=\"+b:\"\")).attr(\"width\",\"560\").attr(\"height\",\"315\")}else if(d&&d[1].length||h&&h[2].length){var $=d&&d[1].length?d[1]:h[2];n=e()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\",0).attr(\"height\",\"310\").attr(\"width\",\"500\").attr(\"src\",\"https://v.qq.com/txp/iframe/player.html?vid=\"+$+\"&amp;auto=0\")}else if(f||p||m)n=e()(\"<video controls>\").attr(\"src\",t).attr(\"width\",\"640\").attr(\"height\",\"360\");else{if(!v||!v[0].length)return!1;n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"https://www.facebook.com/plugins/video.php?href=\"+encodeURIComponent(v[0])+\"&show_text=0&width=560\").attr(\"width\",\"560\").attr(\"height\",\"301\").attr(\"scrolling\",\"no\").attr(\"allowtransparency\",\"true\")}return n.addClass(\"note-video-clip\"),n[0]}},{key:\"show\",value:function(){var t=this,e=this.context.invoke(\"editor.getSelectedText\");this.context.invoke(\"editor.saveRange\"),this.showVideoDialog(e).then((function(e){t.ui.hideDialog(t.$dialog),t.context.invoke(\"editor.restoreRange\");var n=t.createVideoNode(e);n&&t.context.invoke(\"editor.insertNode\",n)})).fail((function(){t.context.invoke(\"editor.restoreRange\")}))}},{key:\"showVideoDialog\",value:function(){var t=this;return e().Deferred((function(e){var n=t.$dialog.find(\".note-video-url\"),o=t.$dialog.find(\".note-video-btn\");t.ui.onDialogShown(t.$dialog,(function(){t.context.triggerEvent(\"dialog.shown\"),n.on(\"input paste propertychange\",(function(){t.ui.toggleBtn(o,n.val())})),f.isSupportTouch||n.trigger(\"focus\"),o.click((function(t){t.preventDefault(),e.resolve(n.val())})),t.bindEnterKey(n,o)})),t.ui.onDialogHidden(t.$dialog,(function(){n.off(),o.off(),\"pending\"===e.state()&&e.reject()})),t.ui.showDialog(t.$dialog)}))}}])&&be(n.prototype,o),i&&be(n,i),t}();function ke(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var we=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$body=e()(document.body),this.$editor=n.layoutInfo.editor,this.options=n.options,this.lang=this.options.langInfo}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){var t=this.options.dialogsInBody?this.$body:this.options.container,e=['<p class=\"text-center\">','<a href=\"http://summernote.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Summernote 0.8.20</a> · ','<a href=\"https://github.com/summernote/summernote\" target=\"_blank\" rel=\"noopener noreferrer\">Project</a> · ','<a href=\"https://github.com/summernote/summernote/issues\" target=\"_blank\" rel=\"noopener noreferrer\">Issues</a>',\"</p>\"].join(\"\");this.$dialog=this.ui.dialog({title:this.lang.options.help,fade:this.options.dialogsFade,body:this.createShortcutList(),footer:e,callback:function(t){t.find(\".modal-body,.note-modal-body\").css({\"max-height\":300,overflow:\"scroll\"})}}).render().appendTo(t)}},{key:\"destroy\",value:function(){this.ui.hideDialog(this.$dialog),this.$dialog.remove()}},{key:\"createShortcutList\",value:function(){var t=this,n=this.options.keyMap[f.isMac?\"mac\":\"pc\"];return Object.keys(n).map((function(o){var i=n[o],r=e()('<div><div class=\"help-list-item\"></div></div>');return r.append(e()(\"<label><kbd>\"+o+\"</kdb></label>\").css({width:180,\"margin-right\":10})).append(e()(\"<span></span>\").html(t.context.memo(\"help.\"+i)||i)),r.html()})).join(\"\")}},{key:\"showHelpDialog\",value:function(){var t=this;return e().Deferred((function(e){t.ui.onDialogShown(t.$dialog,(function(){t.context.triggerEvent(\"dialog.shown\"),e.resolve()})),t.ui.showDialog(t.$dialog)})).promise()}},{key:\"show\",value:function(){var t=this;this.context.invoke(\"editor.saveRange\"),this.showHelpDialog().then((function(){t.context.invoke(\"editor.restoreRange\")}))}}],o&&ke(n.prototype,o),i&&ke(n,i),t}();function Ce(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var xe=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.options=n.options,this.hidable=!0,this.onContextmenu=!1,this.pageX=null,this.pageY=null,this.events={\"summernote.contextmenu\":function(t){o.options.editing&&(t.preventDefault(),t.stopPropagation(),o.onContextmenu=!0,o.update(!0))},\"summernote.mousedown\":function(t,e){o.pageX=e.pageX,o.pageY=e.pageY},\"summernote.keyup summernote.mouseup summernote.scroll\":function(t,e){o.options.editing&&!o.onContextmenu&&(o.pageX=e.pageX,o.pageY=e.pageY,o.update()),o.onContextmenu=!1},\"summernote.disable summernote.change summernote.dialog.shown summernote.blur\":function(){o.hide()},\"summernote.focusout\":function(){o.$popover.is(\":active,:focus\")||o.hide()}}}var n,o,i;return n=t,(o=[{key:\"shouldInitialize\",value:function(){return this.options.airMode&&!k.isEmpty(this.options.popover.air)}},{key:\"initialize\",value:function(){var t=this;this.$popover=this.ui.popover({className:\"note-air-popover\"}).render().appendTo(this.options.container);var e=this.$popover.find(\".popover-content\");this.context.invoke(\"buttons.build\",e,this.options.popover.air),this.$popover.on(\"mousedown\",(function(){t.hidable=!1})),this.$popover.on(\"mouseup\",(function(){t.hidable=!0}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"update\",value:function(t){var n=this.context.invoke(\"editor.currentStyle\");if(!n.range||n.range.isCollapsed()&&!t)this.hide();else{var o={left:this.pageX,top:this.pageY},i=e()(this.options.container).offset();o.top-=i.top,o.left-=i.left,this.$popover.css({display:\"block\",left:Math.max(o.left,0)+-5,top:o.top+5}),this.context.invoke(\"buttons.updateCurrentStyle\",this.$popover)}}},{key:\"updateCodeview\",value:function(t){this.ui.toggleBtnActive(this.$popover.find(\".btn-codeview\"),t),t&&this.hide()}},{key:\"hide\",value:function(){this.hidable&&this.$popover.hide()}}])&&Ce(n.prototype,o),i&&Ce(n,i),t}();function Se(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Te=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$editable=n.layoutInfo.editable,this.options=n.options,this.hint=this.options.hint||[],this.direction=this.options.hintDirection||\"bottom\",this.hints=Array.isArray(this.hint)?this.hint:[this.hint],this.events={\"summernote.keyup\":function(t,e){e.isDefaultPrevented()||o.handleKeyup(e)},\"summernote.keydown\":function(t,e){o.handleKeydown(e)},\"summernote.disable summernote.dialog.shown summernote.blur\":function(){o.hide()}}}var n,o,i;return n=t,o=[{key:\"shouldInitialize\",value:function(){return this.hints.length>0}},{key:\"initialize\",value:function(){var t=this;this.lastWordRange=null,this.matchingWord=null,this.$popover=this.ui.popover({className:\"note-hint-popover\",hideArrow:!0,direction:\"\"}).render().appendTo(this.options.container),this.$popover.hide(),this.$content=this.$popover.find(\".popover-content,.note-popover-content\"),this.$content.on(\"click\",\".note-hint-item\",(function(n){t.$content.find(\".active\").removeClass(\"active\"),e()(n.currentTarget).addClass(\"active\"),t.replace()})),this.$popover.on(\"mousedown\",(function(t){t.preventDefault()}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"selectItem\",value:function(t){this.$content.find(\".active\").removeClass(\"active\"),t.addClass(\"active\"),this.$content[0].scrollTop=t[0].offsetTop-this.$content.innerHeight()/2}},{key:\"moveDown\",value:function(){var t=this.$content.find(\".note-hint-item.active\"),e=t.next();if(e.length)this.selectItem(e);else{var n=t.parent().next();n.length||(n=this.$content.find(\".note-hint-group\").first()),this.selectItem(n.find(\".note-hint-item\").first())}}},{key:\"moveUp\",value:function(){var t=this.$content.find(\".note-hint-item.active\"),e=t.prev();if(e.length)this.selectItem(e);else{var n=t.parent().prev();n.length||(n=this.$content.find(\".note-hint-group\").last()),this.selectItem(n.find(\".note-hint-item\").last())}}},{key:\"replace\",value:function(){var t=this.$content.find(\".note-hint-item.active\");if(t.length){var n=this.nodeFromItem(t);if(null!==this.matchingWord&&0===this.matchingWord.length)this.lastWordRange.so=this.lastWordRange.eo;else if(null!==this.matchingWord&&this.matchingWord.length>0&&!this.lastWordRange.isCollapsed()){var o=this.lastWordRange.eo-this.lastWordRange.so-this.matchingWord.length;o>0&&(this.lastWordRange.so+=o)}if(this.lastWordRange.insertNode(n),\"next\"===this.options.hintSelect){var i=document.createTextNode(\"\");e()(n).after(i),yt.createFromNodeBefore(i).select()}else yt.createFromNodeAfter(n).select();this.lastWordRange=null,this.hide(),this.context.invoke(\"editor.focus\"),this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}}},{key:\"nodeFromItem\",value:function(t){var e=this.hints[t.data(\"index\")],n=t.data(\"item\"),o=e.content?e.content(n):n;return\"string\"==typeof o&&(o=ht.createText(o)),o}},{key:\"createItemTemplates\",value:function(t,n){var o=this.hints[t];return n.map((function(n){var i=e()('<div class=\"note-hint-item\"></div>');return i.append(o.template?o.template(n):n+\"\"),i.data({index:t,item:n}),i}))}},{key:\"handleKeydown\",value:function(t){this.$popover.is(\":visible\")&&(t.keyCode===wt.code.ENTER?(t.preventDefault(),this.replace()):t.keyCode===wt.code.UP?(t.preventDefault(),this.moveUp()):t.keyCode===wt.code.DOWN&&(t.preventDefault(),this.moveDown()))}},{key:\"searchKeyword\",value:function(t,e,n){var o=this.hints[t];if(o&&o.match.test(e)&&o.search){var i=o.match.exec(e);this.matchingWord=i[0],o.search(i[1],n)}else n()}},{key:\"createGroup\",value:function(t,n){var o=this,i=e()('<div class=\"note-hint-group note-hint-group-'+t+'\"></div>');return this.searchKeyword(t,n,(function(e){(e=e||[]).length&&(i.html(o.createItemTemplates(t,e)),o.show())})),i}},{key:\"handleKeyup\",value:function(t){var n=this;if(!k.contains([wt.code.ENTER,wt.code.UP,wt.code.DOWN],t.keyCode)){var o,i,r=this.context.invoke(\"editor.getLastRange\");if(\"words\"===this.options.hintMode){if(o=r.getWordsRange(r),i=o.toString(),this.hints.forEach((function(t){if(t.match.test(i))return o=r.getWordsMatchRange(t.match),!1})),!o)return void this.hide();i=o.toString()}else o=r.getWordRange(),i=o.toString();if(this.hints.length&&i){this.$content.empty();var a=m.rect2bnd(k.last(o.getClientRects())),s=e()(this.options.container).offset();a&&(a.top-=s.top,a.left-=s.left,this.$popover.hide(),this.lastWordRange=o,this.hints.forEach((function(t,e){t.match.test(i)&&n.createGroup(e,i).appendTo(n.$content)})),this.$content.find(\".note-hint-item:first\").addClass(\"active\"),\"top\"===this.direction?this.$popover.css({left:a.left,top:a.top-this.$popover.outerHeight()-5}):this.$popover.css({left:a.left,top:a.top+a.height+5}))}else this.hide()}}},{key:\"show\",value:function(){this.$popover.show()}},{key:\"hide\",value:function(){this.$popover.hide()}}],o&&Se(n.prototype,o),i&&Se(n,i),t}();function Ee(t){return Ee=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},Ee(t)}function Ie(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}e().summernote=e().extend(e().summernote,{version:\"0.8.20\",plugins:{},dom:ht,range:yt,lists:k,options:{langInfo:e().summernote.lang[\"en-US\"],editing:!0,modules:{editor:Ft,clipboard:Ht,dropzone:Bt,codeview:jt,statusbar:Kt,fullscreen:qt,handle:Gt,hintPopover:Te,autoLink:Qt,autoSync:Jt,autoReplace:ee,placeholder:oe,buttons:re,toolbar:se,linkDialog:ce,linkPopover:de,imageDialog:fe,imagePopover:me,tablePopover:ge,videoDialog:ye,helpDialog:we,airPopover:xe},buttons:{},lang:\"en-US\",followingToolbar:!1,toolbarPosition:\"top\",otherStaticBar:\"\",codeviewKeepButton:!1,toolbar:[[\"style\",[\"style\"]],[\"font\",[\"bold\",\"underline\",\"clear\"]],[\"fontname\",[\"fontname\"]],[\"color\",[\"color\"]],[\"para\",[\"ul\",\"ol\",\"paragraph\"]],[\"table\",[\"table\"]],[\"insert\",[\"link\",\"picture\",\"video\"]],[\"view\",[\"fullscreen\",\"codeview\",\"help\"]]],popatmouse:!0,popover:{image:[[\"resize\",[\"resizeFull\",\"resizeHalf\",\"resizeQuarter\",\"resizeNone\"]],[\"float\",[\"floatLeft\",\"floatRight\",\"floatNone\"]],[\"remove\",[\"removeMedia\"]]],link:[[\"link\",[\"linkDialogShow\",\"unlink\"]]],table:[[\"add\",[\"addRowDown\",\"addRowUp\",\"addColLeft\",\"addColRight\"]],[\"delete\",[\"deleteRow\",\"deleteCol\",\"deleteTable\"]]],air:[[\"color\",[\"color\"]],[\"font\",[\"bold\",\"underline\",\"clear\"]],[\"para\",[\"ul\",\"paragraph\"]],[\"table\",[\"table\"]],[\"insert\",[\"link\",\"picture\"]],[\"view\",[\"fullscreen\",\"codeview\"]]]},airMode:!1,overrideContextMenu:!1,width:null,height:null,linkTargetBlank:!0,useProtocol:!0,defaultProtocol:\"http://\",focus:!1,tabDisabled:!1,tabSize:4,styleWithCSS:!1,shortcuts:!0,textareaAutoSync:!0,tooltip:\"auto\",container:null,maxTextLength:0,blockquoteBreakingLevel:2,spellCheck:!0,disableGrammar:!1,placeholder:null,inheritPlaceholder:!1,recordEveryKeystroke:!1,historyLimit:200,showDomainOnlyForAutolink:!1,hintMode:\"word\",hintSelect:\"after\",hintDirection:\"bottom\",styleTags:[\"p\",\"blockquote\",\"pre\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\"],fontNames:[\"Arial\",\"Arial Black\",\"Comic Sans MS\",\"Courier New\",\"Helvetica Neue\",\"Helvetica\",\"Impact\",\"Lucida Grande\",\"Tahoma\",\"Times New Roman\",\"Verdana\"],fontNamesIgnoreCheck:[],addDefaultFonts:!0,fontSizes:[\"8\",\"9\",\"10\",\"11\",\"12\",\"14\",\"18\",\"24\",\"36\"],fontSizeUnits:[\"px\",\"pt\"],colors:[[\"#000000\",\"#424242\",\"#636363\",\"#9C9C94\",\"#CEC6CE\",\"#EFEFEF\",\"#F7F7F7\",\"#FFFFFF\"],[\"#FF0000\",\"#FF9C00\",\"#FFFF00\",\"#00FF00\",\"#00FFFF\",\"#0000FF\",\"#9C00FF\",\"#FF00FF\"],[\"#F7C6CE\",\"#FFE7CE\",\"#FFEFC6\",\"#D6EFD6\",\"#CEDEE7\",\"#CEE7F7\",\"#D6D6E7\",\"#E7D6DE\"],[\"#E79C9C\",\"#FFC69C\",\"#FFE79C\",\"#B5D6A5\",\"#A5C6CE\",\"#9CC6EF\",\"#B5A5D6\",\"#D6A5BD\"],[\"#E76363\",\"#F7AD6B\",\"#FFD663\",\"#94BD7B\",\"#73A5AD\",\"#6BADDE\",\"#8C7BC6\",\"#C67BA5\"],[\"#CE0000\",\"#E79439\",\"#EFC631\",\"#6BA54A\",\"#4A7B8C\",\"#3984C6\",\"#634AA5\",\"#A54A7B\"],[\"#9C0000\",\"#B56308\",\"#BD9400\",\"#397B21\",\"#104A5A\",\"#085294\",\"#311873\",\"#731842\"],[\"#630000\",\"#7B3900\",\"#846300\",\"#295218\",\"#083139\",\"#003163\",\"#21104A\",\"#4A1031\"]],colorsName:[[\"Black\",\"Tundora\",\"Dove Gray\",\"Star Dust\",\"Pale Slate\",\"Gallery\",\"Alabaster\",\"White\"],[\"Red\",\"Orange Peel\",\"Yellow\",\"Green\",\"Cyan\",\"Blue\",\"Electric Violet\",\"Magenta\"],[\"Azalea\",\"Karry\",\"Egg White\",\"Zanah\",\"Botticelli\",\"Tropical Blue\",\"Mischka\",\"Twilight\"],[\"Tonys Pink\",\"Peach Orange\",\"Cream Brulee\",\"Sprout\",\"Casper\",\"Perano\",\"Cold Purple\",\"Careys Pink\"],[\"Mandy\",\"Rajah\",\"Dandelion\",\"Olivine\",\"Gulf Stream\",\"Viking\",\"Blue Marguerite\",\"Puce\"],[\"Guardsman Red\",\"Fire Bush\",\"Golden Dream\",\"Chelsea Cucumber\",\"Smalt Blue\",\"Boston Blue\",\"Butterfly Bush\",\"Cadillac\"],[\"Sangria\",\"Mai Tai\",\"Buddha Gold\",\"Forest Green\",\"Eden\",\"Venice Blue\",\"Meteorite\",\"Claret\"],[\"Rosewood\",\"Cinnamon\",\"Olive\",\"Parsley\",\"Tiber\",\"Midnight Blue\",\"Valentino\",\"Loulou\"]],colorButton:{foreColor:\"#000000\",backColor:\"#FFFF00\"},lineHeights:[\"1.0\",\"1.2\",\"1.4\",\"1.5\",\"1.6\",\"1.8\",\"2.0\",\"3.0\"],tableClassName:\"table table-bordered\",insertTableMaxSize:{col:10,row:10},dialogsInBody:!1,dialogsFade:!1,maximumImageFileSize:null,acceptImageFileTypes:\"image/*\",callbacks:{onBeforeCommand:null,onBlur:null,onBlurCodeview:null,onChange:null,onChangeCodeview:null,onDialogShown:null,onEnter:null,onFocus:null,onImageLinkInsert:null,onImageUpload:null,onImageUploadError:null,onInit:null,onKeydown:null,onKeyup:null,onMousedown:null,onMouseup:null,onPaste:null,onScroll:null},codemirror:{mode:\"text/html\",htmlMode:!0,lineNumbers:!0},codeviewFilter:!0,codeviewFilterRegex:/<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi,codeviewIframeFilter:!0,codeviewIframeWhitelistSrc:[],codeviewIframeWhitelistSrcBase:[\"www.youtube.com\",\"www.youtube-nocookie.com\",\"www.facebook.com\",\"vine.co\",\"instagram.com\",\"player.vimeo.com\",\"www.dailymotion.com\",\"player.youku.com\",\"jumpingbean.tv\",\"v.qq.com\"],keyMap:{pc:{ESC:\"escape\",ENTER:\"insertParagraph\",\"CTRL+Z\":\"undo\",\"CTRL+Y\":\"redo\",TAB:\"tab\",\"SHIFT+TAB\":\"untab\",\"CTRL+B\":\"bold\",\"CTRL+I\":\"italic\",\"CTRL+U\":\"underline\",\"CTRL+SHIFT+S\":\"strikethrough\",\"CTRL+BACKSLASH\":\"removeFormat\",\"CTRL+SHIFT+L\":\"justifyLeft\",\"CTRL+SHIFT+E\":\"justifyCenter\",\"CTRL+SHIFT+R\":\"justifyRight\",\"CTRL+SHIFT+J\":\"justifyFull\",\"CTRL+SHIFT+NUM7\":\"insertUnorderedList\",\"CTRL+SHIFT+NUM8\":\"insertOrderedList\",\"CTRL+LEFTBRACKET\":\"outdent\",\"CTRL+RIGHTBRACKET\":\"indent\",\"CTRL+NUM0\":\"formatPara\",\"CTRL+NUM1\":\"formatH1\",\"CTRL+NUM2\":\"formatH2\",\"CTRL+NUM3\":\"formatH3\",\"CTRL+NUM4\":\"formatH4\",\"CTRL+NUM5\":\"formatH5\",\"CTRL+NUM6\":\"formatH6\",\"CTRL+ENTER\":\"insertHorizontalRule\",\"CTRL+K\":\"linkDialog.show\"},mac:{ESC:\"escape\",ENTER:\"insertParagraph\",\"CMD+Z\":\"undo\",\"CMD+SHIFT+Z\":\"redo\",TAB:\"tab\",\"SHIFT+TAB\":\"untab\",\"CMD+B\":\"bold\",\"CMD+I\":\"italic\",\"CMD+U\":\"underline\",\"CMD+SHIFT+S\":\"strikethrough\",\"CMD+BACKSLASH\":\"removeFormat\",\"CMD+SHIFT+L\":\"justifyLeft\",\"CMD+SHIFT+E\":\"justifyCenter\",\"CMD+SHIFT+R\":\"justifyRight\",\"CMD+SHIFT+J\":\"justifyFull\",\"CMD+SHIFT+NUM7\":\"insertUnorderedList\",\"CMD+SHIFT+NUM8\":\"insertOrderedList\",\"CMD+LEFTBRACKET\":\"outdent\",\"CMD+RIGHTBRACKET\":\"indent\",\"CMD+NUM0\":\"formatPara\",\"CMD+NUM1\":\"formatH1\",\"CMD+NUM2\":\"formatH2\",\"CMD+NUM3\":\"formatH3\",\"CMD+NUM4\":\"formatH4\",\"CMD+NUM5\":\"formatH5\",\"CMD+NUM6\":\"formatH6\",\"CMD+ENTER\":\"insertHorizontalRule\",\"CMD+K\":\"linkDialog.show\"}},icons:{align:\"note-icon-align\",alignCenter:\"note-icon-align-center\",alignJustify:\"note-icon-align-justify\",alignLeft:\"note-icon-align-left\",alignRight:\"note-icon-align-right\",rowBelow:\"note-icon-row-below\",colBefore:\"note-icon-col-before\",colAfter:\"note-icon-col-after\",rowAbove:\"note-icon-row-above\",rowRemove:\"note-icon-row-remove\",colRemove:\"note-icon-col-remove\",indent:\"note-icon-align-indent\",outdent:\"note-icon-align-outdent\",arrowsAlt:\"note-icon-arrows-alt\",bold:\"note-icon-bold\",caret:\"note-icon-caret\",circle:\"note-icon-circle\",close:\"note-icon-close\",code:\"note-icon-code\",eraser:\"note-icon-eraser\",floatLeft:\"note-icon-float-left\",floatRight:\"note-icon-float-right\",font:\"note-icon-font\",frame:\"note-icon-frame\",italic:\"note-icon-italic\",link:\"note-icon-link\",unlink:\"note-icon-chain-broken\",magic:\"note-icon-magic\",menuCheck:\"note-icon-menu-check\",minus:\"note-icon-minus\",orderedlist:\"note-icon-orderedlist\",pencil:\"note-icon-pencil\",picture:\"note-icon-picture\",question:\"note-icon-question\",redo:\"note-icon-redo\",rollback:\"note-icon-rollback\",square:\"note-icon-square\",strikethrough:\"note-icon-strikethrough\",subscript:\"note-icon-subscript\",superscript:\"note-icon-superscript\",table:\"note-icon-table\",textHeight:\"note-icon-text-height\",trash:\"note-icon-trash\",underline:\"note-icon-underline\",undo:\"note-icon-undo\",unorderedlist:\"note-icon-unorderedlist\",video:\"note-icon-video\"}}});var $e=function(){function t(e,n,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.markup=e,this.children=n,this.options=o,this.callback=i}var n,o,i;return n=t,(o=[{key:\"render\",value:function(t){var n=e()(this.markup);if(this.options&&this.options.contents&&n.html(this.options.contents),this.options&&this.options.className&&n.addClass(this.options.className),this.options&&this.options.data&&e().each(this.options.data,(function(t,e){n.attr(\"data-\"+t,e)})),this.options&&this.options.click&&n.on(\"click\",this.options.click),this.children){var o=n.find(\".note-children-container\");this.children.forEach((function(t){t.render(o.length?o:n)}))}return this.callback&&this.callback(n,this.options),this.options&&this.options.callback&&this.options.callback(n),t&&t.append(n),n}}])&&Ie(n.prototype,o),i&&Ie(n,i),t}();const Ne=function(t,e){return function(){var n=\"object\"===Ee(arguments[1])?arguments[1]:arguments[0],o=Array.isArray(arguments[0])?arguments[0]:[];return n&&n.children&&(o=n.children),new $e(t,o,n,e)}};function Pe(t){return Pe=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},Pe(t)}var Re=Ne('<div class=\"note-editor note-frame card\"/>'),Le=Ne('<div class=\"note-toolbar card-header\" role=\"toolbar\"/>'),Ae=Ne('<div class=\"note-editing-area\"/>'),Fe=Ne('<textarea class=\"note-codable\" aria-multiline=\"true\"/>'),De=Ne('<div class=\"note-editable card-block\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"/>'),He=Ne(['<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>','<div class=\"note-statusbar\" role=\"status\">','<div class=\"note-resizebar\" aria-label=\"Resize\">','<div class=\"note-icon-bar\"></div>','<div class=\"note-icon-bar\"></div>','<div class=\"note-icon-bar\"></div>',\"</div>\",\"</div>\"].join(\"\")),ze=Ne('<div class=\"note-editor note-airframe\"/>'),Be=Ne(['<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>','<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>'].join(\"\")),Me=Ne('<div class=\"note-btn-group btn-group\">'),Oe=Ne('<div class=\"note-dropdown-menu dropdown-menu\" role=\"list\">',(function(t,e){var n=Array.isArray(e.items)?e.items.map((function(t){var n=\"string\"==typeof t?t:t.value||\"\",o=e.template?e.template(t):t,i=\"object\"===Pe(t)?t.option:void 0;return'<a class=\"dropdown-item\" href=\"#\" '+('data-value=\"'+n+'\"'+(void 0!==i?' data-option=\"'+i+'\"':\"\"))+' role=\"listitem\" aria-label=\"'+n+'\">'+o+\"</a>\"})).join(\"\"):e.items;t.html(n).attr({\"aria-label\":e.title}),e&&e.codeviewKeepButton&&t.addClass(\"note-codeview-keep\")})),Ue=function(t){return t},je=Ne('<div class=\"note-dropdown-menu dropdown-menu note-check\" role=\"list\">',(function(t,e){var n=Array.isArray(e.items)?e.items.map((function(t){var n=\"string\"==typeof t?t:t.value||\"\",o=e.template?e.template(t):t;return'<a class=\"dropdown-item\" href=\"#\" data-value=\"'+n+'\" role=\"listitem\" aria-label=\"'+t+'\">'+qe(e.checkClassName)+\" \"+o+\"</a>\"})).join(\"\"):e.items;t.html(n).attr({\"aria-label\":e.title}),e&&e.codeviewKeepButton&&t.addClass(\"note-codeview-keep\")})),We=Ne('<div class=\"modal note-modal\" aria-hidden=\"false\" tabindex=\"-1\" role=\"dialog\"/>',(function(t,e){e.fade&&t.addClass(\"fade\"),t.attr({\"aria-label\":e.title}),t.html(['<div class=\"modal-dialog\">','<div class=\"modal-content\">',e.title?'<div class=\"modal-header\"><h4 class=\"modal-title\">'+e.title+'</h4><button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\" aria-hidden=\"true\"></button></div>':\"\",'<div class=\"modal-body\">'+e.body+\"</div>\",e.footer?'<div class=\"modal-footer\">'+e.footer+\"</div>\":\"\",\"</div>\",\"</div>\"].join(\"\"))})),Ke=Ne(['<div class=\"note-popover popover show\">','<div class=\"popover-arrow\"></div>','<div class=\"popover-body note-children-container\"></div>',\"</div>\"].join(\"\"),(function(t,e){var n=void 0!==e.direction?e.direction:\"bottom\";t.attr(\"data-bs-placement\",n),e.hideArrow&&t.find(\".popover-arrow\").hide()})),Ve=Ne('<div class=\"form-check\"></div>',(function(t,e){t.html(['<label class=\"form-check-label\"'+(e.id?' for=\"note-'+e.id+'\"':\"\")+\">\",'<input type=\"checkbox\" class=\"form-check-input\"'+(e.id?' id=\"note-'+e.id+'\"':\"\"),e.checked?\" checked\":\"\",' aria-label=\"'+(e.text?e.text:\"\")+'\"',' aria-checked=\"'+(e.checked?\"true\":\"false\")+'\"/>',\" \"+(e.text?e.text:\"\")+\"</label>\"].join(\"\"))})),qe=function(t,e){return t.match(/^</)?t:\"<\"+(e=e||\"i\")+' class=\"'+t+'\"></'+e+\">\"};e().summernote=e().extend(e().summernote,{ui_template:function(t){return{editor:Re,toolbar:Le,editingArea:Ae,codable:Fe,editable:De,statusbar:He,airEditor:ze,airEditable:Be,buttonGroup:Me,dropdown:Oe,dropdownButtonContents:Ue,dropdownCheck:je,dialog:We,popover:Ke,icon:qe,checkbox:Ve,options:t,palette:function(e,n){return Ne('<div class=\"note-color-palette\"/>',(function(e,n){for(var o=[],i=0,r=n.colors.length;i<r;i++){for(var a=n.eventName,s=n.colors[i],l=n.colorsName[i],c=[],u=0,d=s.length;u<d;u++){var h=s[u],f=l[u];c.push(['<button type=\"button\" class=\"note-color-btn\"','style=\"background-color:',h,'\" ','data-event=\"',a,'\" ','data-value=\"',h,'\" ','title=\"',f,'\" ','aria-label=\"',f,'\" ','data-toggle=\"button\" tabindex=\"-1\"></button>'].join(\"\"))}o.push('<div class=\"note-color-row\">'+c.join(\"\")+\"</div>\")}e.html(o.join(\"\")),n.tooltip&&e.find(\".note-color-btn\").tooltip({container:n.container||t.container,trigger:\"hover\",placement:\"bottom\"})}))(e,n)},button:function(n,o){return Ne('<button type=\"button\" class=\"note-btn btn btn-light btn-sm\" tabindex=\"-1\">',(function(n,o){o&&o.tooltip&&n.attr({title:o.tooltip,\"aria-label\":o.tooltip}).tooltip({container:o.container||t.container,trigger:\"hover\",placement:\"bottom\"}).on(\"click\",(function(t){e()(t.currentTarget).tooltip(\"hide\")})),o&&o.codeviewButton&&n.addClass(\"note-codeview-keep\")}))(n,o)},toggleBtn:function(t,e){t.toggleClass(\"disabled\",!e),t.attr(\"disabled\",!e)},toggleBtnActive:function(t,e){t.toggleClass(\"active\",e)},onDialogShown:function(t,e){t.one(\"shown.bs.modal\",e)},onDialogHidden:function(t,e){t.one(\"hidden.bs.modal\",e)},showDialog:function(t){t.modal(\"show\")},hideDialog:function(t){t.modal(\"hide\")},createLayout:function(e){var n=(t.airMode?ze([Ae([Fe(),Be()])]):\"bottom\"===t.toolbarPosition?Re([Ae([Fe(),De()]),Le(),He()]):Re([Le(),Ae([Fe(),De()]),He()])).render();return n.insertAfter(e),{note:e,editor:n,toolbar:n.find(\".note-toolbar\"),editingArea:n.find(\".note-editing-area\"),editable:n.find(\".note-editable\"),codable:n.find(\".note-codable\"),statusbar:n.find(\".note-statusbar\")}},removeLayout:function(t,e){t.html(e.editable.html()),e.editor.remove(),t.show()}}},interface:\"bs5\"}),e().summernote.options.styleTags=[\"p\",{title:\"Blockquote\",tag:\"blockquote\",className:\"blockquote\",value:\"blockquote\"},\"pre\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\"]})(),i})()}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3VtbWVybm90ZS9kaXN0L3N1bW1lcm5vdGUtYnM1Lm1pbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLGVBQWUsR0FBRyxJQUFpRCxrQkFBa0IsbUJBQU8sQ0FBQyxvREFBUSxHQUFHLEtBQUssYUFBK0wsQ0FBQyxtQkFBbUIsWUFBWSxhQUFhLE9BQU8sZUFBZSx1QkFBdUIsZ0NBQWdDLFFBQVEsaUNBQWlDLFNBQVMsTUFBTSw2T0FBNk8sUUFBUSwya0JBQTJrQixRQUFRLHFLQUFxSyxPQUFPLDRNQUE0TSxRQUFRLHFNQUFxTSxLQUFLLGdDQUFnQyxRQUFRLDJJQUEySSxRQUFRLGtEQUFrRCxVQUFVLDBEQUEwRCxZQUFZLDJJQUEySSxRQUFRLDJOQUEyTixXQUFXLCtMQUErTCxPQUFPLDArQkFBMCtCLFVBQVUsd0JBQXdCLGNBQWMsb0VBQW9FLFNBQVMsbUNBQW1DLEVBQUUsVUFBVSxhQUFhLE1BQU0sY0FBYyxXQUFXLCtCQUErQixZQUFZLFlBQVkscUNBQXFDLFFBQVEsMENBQTBDLGNBQWMsSUFBSSxJQUFJLGFBQWEsK0RBQStELHVCQUF1QixFQUFFLDhEQUE4RCw0RkFBNEYsZUFBZSx3Q0FBd0MsU0FBUyxHQUFHLFNBQVMsWUFBWSxPQUFPLDBGQUEwRixjQUFjLDhEQUE4RCxzREFBc0QsTUFBTSxpQ0FBaUMsaURBQWlELEdBQUcsT0FBTyxHQUFHLGtDQUFrQyx3TEFBd0wsU0FBUyx5U0FBeVMsZ0lBQWdJLHVCQUF1Qiw2QkFBNkIsbUVBQW1FLGtHQUFrRyxRQUFRLFNBQVMsZUFBZSxtQkFBbUIsY0FBYyxtQkFBbUIsYUFBYSxrQkFBa0IscUJBQXFCLG9CQUFvQixlQUFlLFNBQVMsaUJBQWlCLFNBQVMsa0JBQWtCLFNBQVMsaUJBQWlCLGtCQUFrQiw2QkFBNkIsbUJBQW1CLG1CQUFtQixtQkFBbUIsc0JBQXNCLGtCQUFrQixnQ0FBZ0MsMEJBQTBCLElBQUksc0JBQXNCLGFBQWEsZUFBZSxzQkFBc0Isb0JBQW9CLE9BQU8sK0ZBQStGLDBCQUEwQixTQUFTLHNFQUFzRSxTQUFTLGdDQUFnQyw4Q0FBOEMscURBQXFELFlBQVksMEJBQTBCLE1BQU0sa0JBQWtCLG9DQUFvQyx1QkFBdUIsU0FBUyxtREFBbUQsd0JBQXdCLDhCQUE4QixNQUFNLFFBQVEsSUFBSSw2Q0FBNkMsY0FBYyxZQUFZLGNBQWMscUJBQXFCLGNBQWMsa0JBQWtCLGdCQUFnQixtQkFBbUIscUNBQXFDLG1DQUFtQyxTQUFTLFNBQVMsa0NBQWtDLDZCQUE2QiwyQkFBMkIsbUJBQW1CLG1CQUFtQix5QkFBeUIsWUFBWSxvQkFBb0IsbUJBQW1CLG1CQUFtQix5QkFBeUIsWUFBWSxvQkFBb0IsdUJBQXVCLElBQUksS0FBSyxXQUFXLGtCQUFrQiw4QkFBOEIsdUJBQXVCLElBQUkseUJBQXlCLFNBQVMsbUJBQW1CLDJDQUEyQyxjQUFjLEtBQUssa0JBQWtCLDZCQUE2QixNQUFNLFdBQVcsU0FBUyxxQkFBcUIsb0JBQW9CLHlCQUF5QiwyQ0FBMkMsV0FBVyxpREFBaUQsZUFBZSxxQkFBcUIsNEJBQTRCLElBQUksdUJBQXVCLFNBQVMsb0JBQW9CLDRCQUE0QixJQUFJLDRCQUE0QixXQUFXLCtCQUErQixjQUFjLDJDQUEyQyxjQUFjLHFDQUFxQyx3Q0FBd0MsY0FBYyx5QkFBeUIsY0FBYyxvR0FBb0csY0FBYyx1RUFBdUUseUJBQXlCLDZCQUE2QixjQUFjLGtEQUFrRCxjQUFjLG1EQUFtRCxjQUFjLGNBQWMsbURBQW1ELHNCQUFzQixjQUFjLHdCQUF3QixhQUFhLGdCQUFnQiwyQ0FBMkMsU0FBUyxjQUFjLHVEQUF1RCxjQUFjLFdBQVcsMkZBQTJGLGNBQWMsNEJBQTRCLGdCQUFnQixLQUFLLEVBQUUsRUFBRSxpQkFBaUIsY0FBYyxlQUFlLFlBQVksZ0JBQWdCLFlBQVksU0FBUyx3QkFBd0IsNEJBQTRCLEtBQUssZ0JBQWdCLFlBQVksYUFBYSxTQUFTLDJCQUEyQixTQUFTLGdCQUFnQixtQ0FBbUMsZ0RBQWdELGdCQUFnQixpQ0FBaUMsaUJBQWlCLEtBQUssY0FBYyxvQkFBb0IsY0FBYyw0QkFBNEIsY0FBYyxrQkFBa0IsZ0JBQWdCLEtBQUssU0FBUyxFQUFFLHFCQUFxQixlQUFlLFNBQVMsZ0JBQWdCLGVBQWUsS0FBSyxTQUFTLEVBQUUscUNBQXFDLGVBQWUsU0FBUyxjQUFjLFlBQVksb0JBQW9CLE1BQU0sU0FBUyxlQUFlLCtDQUErQyxpQkFBaUIsUUFBUSxpQkFBaUIseUJBQXlCLGdDQUFnQyxpRkFBaUYsT0FBTyxpQkFBaUIsaUJBQWlCLFFBQVEseUJBQXlCLHlCQUF5QixpQkFBaUIsZ0RBQWdELHdGQUF3RixPQUFPLGlCQUFpQixpQkFBaUIsVUFBVSx3Q0FBd0Msc0NBQXNDLHlCQUF5Qix5QkFBeUIsbUVBQW1FLG9CQUFvQiwyRUFBMkUsa0NBQWtDLDJEQUEyRCxPQUFPLGlCQUFpQixlQUFlLDBHQUEwRyxpQkFBaUIsNENBQTRDLGlCQUFpQix5RkFBeUYsbUNBQW1DLHNCQUFzQixrQ0FBa0MsK0NBQStDLG1FQUFtRSxrR0FBa0csbUJBQW1CLHdCQUF3Qiw2REFBNkQsbUNBQW1DLDBCQUEwQixJQUFJLFFBQVEsZUFBZSxpQ0FBaUMsaUJBQWlCLG9CQUFvQix1Q0FBdUMsbUJBQW1CLE9BQU8sdUNBQXVDLElBQUksNEJBQTRCLHVCQUF1QixJQUFJLDJCQUEyQixrQkFBa0IscUJBQXFCLGlCQUFpQixnQ0FBZ0MsbUNBQW1DLFVBQVUsaUpBQWlKLGlEQUFpRCxnQ0FBZ0MseUJBQXlCLDBDQUEwQyxtQkFBbUIsdUJBQXVCLG1EQUFtRCxzREFBc0QscUJBQXFCLG1DQUFtQyxzQkFBc0IsdVBBQXVQLEdBQUcsd0VBQXdFLDZCQUE2QixZQUFZLG1FQUFtRSxnREFBZ0QsbUNBQW1DLFVBQVUsU0FBUyw2SUFBNkksZ0lBQWdJLHlCQUF5QixrQ0FBa0MseUJBQXlCLCtGQUErRiw4Q0FBOEMsa0VBQWtFLHFDQUFxQyw4QkFBOEIsS0FBSyxFQUFFLEVBQUUsaUJBQWlCLFFBQVEsWUFBWSw4QkFBOEIsS0FBSyxFQUFFLEVBQUUsaUJBQWlCLFFBQVEsWUFBWSx5QkFBeUIsdUJBQXVCLDBDQUEwQyx5QkFBeUIsMEJBQTBCLHVCQUF1QiwwQ0FBMEMscUJBQXFCLDZCQUE2QixZQUFZLG1CQUFtQixFQUFFLDZDQUE2Qyw4Q0FBOEMsbUJBQW1CLFlBQVksRUFBRSxpQkFBaUIsY0FBYyxlQUFlLFlBQVksMkNBQTJDLFdBQVcsMkJBQTJCLG1DQUFtQyxZQUFZLGFBQWEsU0FBUywrQkFBK0IsU0FBUyw4QkFBOEIsU0FBUywrQkFBK0IsdUJBQXVCLGtDQUFrQyxJQUFJLHVCQUF1QixNQUFNLDhCQUE4QixtQkFBbUIsRUFBRSwyQ0FBMkMsWUFBWSxvQkFBb0IsdUNBQXVDLDhDQUE4Qyx5RkFBeUYscUNBQXFDLDhCQUE4QiwyQkFBMkIsSUFBSSx1RkFBdUYsU0FBUyx1Q0FBdUMsa0RBQWtELDhDQUE4QyxpQkFBaUIsK0NBQStDLEVBQUUsdURBQXVELHlCQUF5QixrQ0FBa0Msa0NBQWtDLHFDQUFxQyxLQUFLLGVBQWUsRUFBRSxtQkFBbUIsV0FBVyx1QkFBdUIsdURBQXVELFlBQVksbUdBQW1HLG9CQUFvQixZQUFZLE1BQU0sd0VBQXdFLGtCQUFrQix1R0FBdUcsd0JBQXdCLFdBQVcsU0FBUyx5Q0FBeUMsOENBQThDLE9BQU8seUJBQXlCLDRCQUE0QixvQ0FBb0MsYUFBYSxHQUFHLDRCQUE0QixvQ0FBb0MsY0FBYyxHQUFHLDhCQUE4QiwyREFBMkQsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixnQkFBZ0IsZUFBZSw4RUFBOEUsbUNBQW1DLGdCQUFnQixtQkFBbUIsOEJBQThCLDJHQUEyRyxVQUFVLGVBQWUsa0NBQWtDLG1HQUFtRyxFQUFFLCtCQUErQixzR0FBc0csRUFBRSw2QkFBNkIsd0JBQXdCLDhFQUE4RSxFQUFFLG1DQUFtQyxXQUFXLDRHQUE0RyxtQkFBbUIsdUJBQXVCLG9DQUFvQyx5QkFBeUIsR0FBRyxtQkFBbUIsZ0RBQWdELEVBQUUsb0NBQW9DLG9CQUFvQixrREFBa0Qsc0JBQXNCLElBQUksRUFBRSxnQ0FBZ0MsV0FBVyx5REFBeUQsa0JBQWtCLGdEQUFnRCxnQkFBZ0Isc0NBQXNDLEVBQUUsNkJBQTZCLDBDQUEwQyxrSEFBa0gsNElBQTRJLEVBQUUsa0NBQWtDLGtFQUFrRSxFQUFFLDhCQUE4QixnSkFBZ0osRUFBRSwrQkFBK0IsME5BQTBOLEVBQUUsb0NBQW9DLHlHQUF5RyxtRUFBbUUsRUFBRSx5Q0FBeUMsc0JBQXNCLGlKQUFpSixFQUFFLG1DQUFtQywrQ0FBK0MseURBQXlELEVBQUUscUNBQXFDLHNCQUFzQixzSEFBc0gsRUFBRSwrQkFBK0IsNkNBQTZDLGlCQUFpQixFQUFFLG1DQUFtQyxvRkFBb0YsRUFBRSw0REFBNEQsV0FBVyxtQkFBbUIsdUVBQXVFLEVBQUUsOENBQThDLFdBQVcsbUJBQW1CLG1CQUFtQixvQkFBb0IsMkRBQTJELEVBQUUsOEJBQThCLG1KQUFtSiw4RkFBOEYsb0NBQW9DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGlCQUFpQixxRkFBcUYsUUFBUSxXQUFXLHlCQUF5QiwyRUFBMkUsT0FBTyw2QkFBNkIsNkNBQTZDLHdFQUF3RSxvQkFBb0IsZ0NBQWdDLDhDQUE4QyxvQ0FBb0MsdUNBQXVDLFlBQVksb0hBQW9ILE9BQU8saUJBQWlCLGVBQWUsd0RBQXdELFFBQVEsaUJBQWlCLGtFQUFrRSx5REFBeUQsS0FBSyxtREFBbUQsU0FBUyxPQUFPLG1DQUFtQyxrQkFBa0IscUdBQXFHLGVBQWUsc0JBQXNCLCtFQUErRSw4Q0FBOEMsRUFBRSwyQkFBMkIsbUZBQW1GLHlIQUF5SCxhQUFhLDBCQUEwQixrQkFBa0IsK0VBQStFLEdBQUcsbUJBQW1CLGFBQWEsMkJBQTJCLGdEQUFnRCxrQ0FBa0MsYUFBYSxFQUFFLGtCQUFrQixvQkFBb0IsZUFBZSw4RUFBOEUsZ1FBQWdRLFVBQVUsZUFBZSxtQ0FBbUMsd0JBQXdCLDZCQUE2QiwrREFBK0QsVUFBVSw0QkFBNEIsRUFBRSxvQ0FBb0MsNEJBQTRCLE1BQU0sRUFBRSxpQ0FBaUMsT0FBTyw4Q0FBOEMsRUFBRSxxQ0FBcUMsT0FBTyw4QkFBOEIsRUFBRSxtQ0FBbUMsT0FBTyw4QkFBOEIsRUFBRSw4QkFBOEIseUJBQXlCLHdCQUF3Qiw4QkFBOEIsa0RBQWtELGdCQUFnQixhQUFhLEVBQUUsdUNBQXVDLHNCQUFzQix1R0FBdUcsRUFBRSxpQ0FBaUMsb0JBQW9CLGVBQWUsNlFBQTZRLDBDQUEwQyxPQUFPLHdCQUF3QixXQUFXLHFEQUFxRCxTQUFTLE9BQU8sd0JBQXdCLFdBQVcscURBQXFELFNBQVMsaUNBQWlDLEtBQUssdUhBQXVILDhFQUE4RSwrQ0FBK0MsRUFBRSxnQ0FBZ0MsVUFBVSxzR0FBc0cscUNBQXFDLE1BQU0sZ0xBQWdMLG1CQUFtQixFQUFFLHNDQUFzQywyQ0FBMkMsRUFBRSwrQkFBK0Isc0RBQXNELHdEQUF3RCx1QkFBdUIsd0ZBQXdGLEVBQUUsaUNBQWlDLHdGQUF3RixFQUFFLGlDQUFpQywyQ0FBMkMsK1BBQStQLEVBQUUsc0NBQXNDLGtDQUFrQyx1Q0FBdUMsaUJBQWlCLHFEQUFxRCw0QkFBNEIsUUFBUSxpQ0FBaUMsbUJBQW1CLDREQUE0RCw2QkFBNkIsZ0JBQWdCLHVEQUF1RCxFQUFFLGlDQUFpQyxrQkFBa0IsNkJBQTZCLHdDQUF3QyxFQUFFLHFDQUFxQyxzREFBc0QsNkJBQTZCLHNDQUFzQyxFQUFFLG1DQUFtQyw2Q0FBNkMsRUFBRSw4Q0FBOEMsMklBQTJJLHlCQUF5Qix5REFBeUQsc0JBQXNCLCtDQUErQyxxRUFBcUUsd0NBQXdDLE1BQU0sK0NBQStDLG9FQUFvRSw2QkFBNkIsa0NBQWtDLHlCQUF5QixFQUFFLG1DQUFtQyxXQUFXLG1GQUFtRixzREFBc0QsNkxBQTZMLEVBQUUsa0NBQWtDLGNBQWMsdUVBQXVFLDBEQUEwRCx1QkFBdUIseUJBQXlCLEVBQUUsZ0NBQWdDLHlCQUF5QixnREFBZ0QsRUFBRSxxQ0FBcUMseUJBQXlCLGtDQUFrQyx1Q0FBdUMseUJBQXlCLEdBQUcsOENBQThDLHlCQUF5Qiw0Q0FBNEMsRUFBRSxzQ0FBc0MsdUNBQXVDLCtDQUErQyxvQkFBb0IsNkJBQTZCLDZFQUE2RSxFQUFFLDJDQUEyQyw0REFBNEQsb0RBQW9ELG9FQUFvRSxzQkFBc0IsdUVBQXVFLHlDQUF5QyxFQUFFLGlDQUFpQyxPQUFPLEdBQUcsaURBQWlELElBQUksb0RBQW9ELEVBQUUscUNBQXFDLE9BQU8sR0FBRyxpRUFBaUUsSUFBSSxvRUFBb0UsRUFBRSxzQ0FBc0MsNENBQTRDLG9DQUFvQyxHQUFHLFVBQVUseUJBQXlCLCtDQUErQyxtREFBbUQsaUNBQWlDLDZCQUE2QixtQkFBbUIsNkdBQTZHLFNBQVMsbUNBQW1DLHVGQUF1RixxQkFBcUIsZ0NBQWdDLFlBQVksd0JBQXdCLDhCQUE4QixvQ0FBb0MsdUNBQXVDLHNCQUFzQixrRUFBa0UsS0FBSyx1REFBdUQsZUFBZSxRQUFRLGVBQWUsMEJBQTBCLG9LQUFvSyx1QkFBdUIsNEJBQTRCLG1DQUFtQyxrTUFBa00sa0NBQWtDLDJDQUEyQyxpQ0FBaUMseUNBQXlDLGtDQUFrQyw4RkFBOEYsdUJBQXVCLHNDQUFzQyw4R0FBOEcseUJBQXlCLFFBQVEsMFRBQTBULFVBQVUsbUJBQW1CLHVFQUF1RSxvQkFBb0Isc0RBQXNELDBCQUEwQiw0REFBNEQsMENBQTBDLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyxrQkFBa0IsY0FBYyxlQUFlLDhFQUE4RSwrSEFBK0gsVUFBVSxnQkFBZ0Isb0NBQW9DLCtCQUErQixPQUFPLHVGQUF1RixHQUFHLGlCQUFpQixJQUFJLHFCQUFxQixFQUFFLHNDQUFzQyxnSUFBZ0ksRUFBRSw4QkFBOEIsc0pBQXNKLEVBQUUsOEJBQThCLHFEQUFxRCxFQUFFLDZCQUE2Qiw2RUFBNkUsRUFBRSw0QkFBNEIsNEtBQTRLLEVBQUUsNEJBQTRCLDZHQUE2RyxFQUFFLGtDQUFrQyw2T0FBNk8sbUNBQW1DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixhQUFhLGVBQWUsOEVBQThFLFNBQVMsVUFBVSxlQUFlLG9DQUFvQyxTQUFTLGlDQUFpQyxjQUFjLE1BQU0sRUFBRSxpQ0FBaUMsb0dBQW9HLHVDQUF1QyxnRkFBZ0YsRUFBRSxvQ0FBb0MsNEJBQTRCLG1CQUFtQixpQkFBaUIsY0FBYyxJQUFJLEVBQUUscUNBQXFDLGdCQUFnQiw2RkFBNkYsc0RBQXNELG9EQUFvRCxpQkFBaUIsbUJBQW1CLGlEQUFpRCxHQUFHLE1BQU0sTUFBTSxnQkFBZ0IsdUJBQXVCLHVCQUF1QixHQUFHLDBCQUEwQiwwREFBMEQsaUNBQWlDLGlEQUFpRCxhQUFhLEdBQUcsVUFBVSxFQUFFLGdDQUFnQyxzRUFBc0UsSUFBSSxnQkFBZ0IscWhCQUFxaEIsRUFBRSxVQUFVLGlCQUFpQixzRkFBc0Ysd0NBQXdDLDRCQUE0QixrQ0FBa0MsaUVBQWlFLEtBQUssZ0VBQWdFLDhCQUE4QiwySEFBMkgsb0NBQW9DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixhQUFhLGVBQWUsOEVBQThFLFNBQVMsVUFBVSxlQUFlLDBDQUEwQyx5QkFBeUIsRUFBRSw0Q0FBNEMseUJBQXlCLEVBQUUsK0JBQStCLHdFQUF3RSxtQkFBbUIsd0NBQXdDLDBCQUEwQixnQkFBZ0IsZUFBZSxvQ0FBb0MscUJBQXFCLHdCQUF3QiwyREFBMkQsb0JBQW9CLG9CQUFvQiw2QkFBNkIsSUFBSSwrQkFBK0IsdUNBQXVDLDZCQUE2QixHQUFHLEdBQUcsZUFBZSxFQUFFLGdDQUFnQyx3RUFBd0UsbUJBQW1CLHdDQUF3QywwQkFBMEIsZ0JBQWdCLHdEQUF3RCx1Q0FBdUMsdUNBQXVDLEdBQUcsR0FBRyxlQUFlLEVBQUUscUNBQXFDLHdFQUF3RSxtQkFBbUIsNERBQTRELDRCQUE0QixTQUFTLDBCQUEwQiw0QkFBNEIsT0FBTyxLQUFLLHlCQUF5QixtQkFBbUIsc0JBQXNCLHlCQUF5QixHQUFHLG1DQUFtQyxnQkFBZ0IsNEJBQTRCLHlDQUF5QyxFQUFFLG1DQUFtQyxrS0FBa0ssNEJBQTRCLDZDQUE2Qyw2RkFBNkYsRUFBRSxzQ0FBc0MsZ0JBQWdCLGlDQUFpQyx5RkFBeUYsbURBQW1ELDRCQUE0Qix5SkFBeUosZ0dBQWdHLEtBQUssNENBQTRDLDBDQUEwQyxFQUFFLDBCQUEwQix5QkFBeUIsd0NBQXdDLEVBQUUsMEJBQTBCLEVBQUUseUhBQXlILHlCQUF5QixnREFBZ0Qsb0JBQW9CLEdBQUcseUJBQXlCLDBCQUEwQixpREFBaUQsb0NBQW9DLGtDQUFrQyxHQUFHLEdBQUcsY0FBYyxNQUFNLEVBQUUseUNBQXlDLDZGQUE2RixFQUFFLGlDQUFpQyx3Q0FBd0MseUNBQXlDLFNBQVMsRUFBRSx5Q0FBeUMsYUFBYSxjQUFjLHVDQUF1QyxVQUFVLG9DQUFvQyxHQUFHLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyxrQkFBa0IsY0FBYyxlQUFlLDhFQUE4RSxtREFBbUQsVUFBVSxlQUFlLG9DQUFvQyx1REFBdUQscUVBQXFFLEVBQUUsMENBQTBDLG9FQUFvRSxvQ0FBb0MsTUFBTSxvSEFBb0gsV0FBVyxpS0FBaUsseUhBQXlILHdDQUF3Qyx3QkFBd0IsRUFBRSxxREFBcUQsS0FBSyxvQ0FBb0MsNENBQTRDLDRFQUE0RSxhQUFhLGlHQUFpRyxLQUFLLDRCQUE0QixvRUFBb0UsdURBQXVELG9DQUFvQyxHQUFHLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRywyQkFBMkIsT0FBTyxrQkFBa0IsV0FBVywwQkFBMEIsT0FBTywwREFBMEQsMEJBQTBCLG9CQUFvQixPQUFPLDJDQUEyQyx5QkFBeUIsZ0JBQWdCLGtCQUFrQixxQkFBcUIsWUFBWSxRQUFRLDBCQUEwQixnQkFBZ0IsNEdBQTRHLDJCQUEyQixxRUFBcUUsbUJBQW1CLElBQUksS0FBSyxtQkFBbUIsOEJBQThCLHFFQUFxRSxtQkFBbUIsSUFBSSxLQUFLLHdCQUF3QixpREFBaUQsb0JBQW9CLG9FQUFvRSxjQUFjLFVBQVUsMkVBQTJFLE1BQU0sNEVBQTRFLHVEQUF1RCxpQ0FBaUMsY0FBYyxVQUFVLHNFQUFzRSx5REFBeUQsTUFBTSxtRUFBbUUseURBQXlELDhCQUE4Qiw4QkFBOEIsZ0ZBQWdGLEVBQUUsRUFBRSxpQ0FBaUMsb0JBQW9CLFdBQVcsb0JBQW9CLDRCQUE0QixVQUFVLGdDQUFnQyxNQUFNLG1DQUFtQyx1QkFBdUIsU0FBUywrT0FBK08scUJBQXFCLFdBQVcsNkJBQTZCLFdBQVcsaUJBQWlCLElBQUksVUFBVSxlQUFlLG1CQUFtQixlQUFlLGtCQUFrQixvRUFBb0Usa0JBQWtCLGFBQWEsZUFBZSw4RUFBOEUsU0FBUyxVQUFVLGVBQWUsOEJBQThCLHVJQUF1SSw0QkFBNEIsRUFBRSxpQ0FBaUMsNE5BQTROLFdBQVcsS0FBSyxnREFBZ0QsaUJBQWlCLG9FQUFvRSxNQUFNLHdIQUF3SCxnR0FBZ0csWUFBWSxNQUFNLHNDQUFzQywwQ0FBMEMseUJBQXlCLEtBQUssZ0JBQWdCLGtDQUFrQyw2REFBNkQsYUFBYSxFQUFFLGlDQUFpQyx1RUFBdUUsMEJBQTBCLHdHQUF3RyxXQUFXLEtBQUssZ0RBQWdELGlCQUFpQixrSkFBa0osTUFBTSxrREFBa0Qsc0NBQXNDLHlDQUF5Qyw2REFBNkQsRUFBRSwwQ0FBMEMsU0FBUyxlQUFlLCtCQUErQixXQUFXLDJGQUEyRixVQUFVLEVBQUUsa0NBQWtDLGdPQUFnTyxXQUFXLGFBQWEsOEZBQThGLG9CQUFvQixxQ0FBcUMsbURBQW1ELGVBQWUsb0JBQW9CLDZNQUE2TSxTQUFTLDROQUE0TixTQUFTLDBDQUEwQyxZQUFZLEVBQUUsa0NBQWtDLG1OQUFtTixXQUFXLGdDQUFnQyxxQ0FBcUMsMkRBQTJELDJCQUEyQix5Q0FBeUMsZ0pBQWdKLFNBQVMsNERBQTRELFdBQVcsRUFBRSx3Q0FBd0MsbUJBQW1CLElBQUksb0NBQW9DLGFBQWEsbUJBQW1CLElBQUksNkJBQTZCLGFBQWEsa0NBQWtDLCtEQUErRCxFQUFFLG9DQUFvQyxnREFBZ0Qsa0NBQWtDLG9DQUFvQyxHQUFHLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyxrQkFBa0IsY0FBYyxXQUFXLGVBQWUsOEVBQThFLG9vQ0FBb29DLHFNQUFxTSxJQUFJLDJCQUEyQixtQkFBbUIsbUVBQW1FLDREQUE0RCw0Q0FBNEMsdURBQXVELCtDQUErQyx5Q0FBeUMsc0NBQXNDLG1EQUFtRCxvQ0FBb0Msc0NBQXNDLEdBQUcsWUFBWSxLQUFLLGtDQUFrQyxrQkFBa0Isc0JBQXNCLG9FQUFvRSxrREFBa0QscUNBQXFDLHVEQUF1RCx1Q0FBdUMseURBQXlELHlDQUF5Qyw0Q0FBNEMsNEJBQTRCLDZDQUE2Qyw2QkFBNkIsaURBQWlELHVIQUF1SCxpREFBaUQsMkJBQTJCLG9EQUFvRCx3REFBd0QsZ0RBQWdELDJCQUEyQix3Q0FBd0Msb0NBQW9DLDREQUE0RCxvREFBb0QsNkNBQTZDLDZEQUE2RCwwREFBMEQsbURBQW1ELCtFQUErRSxpREFBaUQsb0NBQW9DLGFBQWEsRUFBRSxpREFBaUQsa0hBQWtILDJCQUEyQix1QkFBdUIscUtBQXFLLFNBQVMsTUFBTSxnRUFBZ0UsVUFBVSw2QkFBNkIsNERBQTRELEVBQUUsMEJBQTBCLG1GQUFtRixzREFBc0QsNENBQTRDLGdDQUFnQyxvRkFBb0YsZ0RBQWdELHVDQUF1QyxrREFBa0QsbUJBQW1CLHVGQUF1RixpREFBaUQsc0NBQXNDLCtJQUErSSw4Q0FBOEMsNkJBQTZCLHlIQUF5SCw2Q0FBNkMsNkJBQTZCLCtDQUErQywwQkFBMEIsRUFBRSxHQUFHLFVBQVUsZUFBZSxrQ0FBa0MsV0FBVyx5Q0FBeUMsb1NBQW9TLHVCQUF1Qix5QkFBeUIsK0ZBQStGLDJCQUEyQixtREFBbUQsMkJBQTJCLG1EQUFtRCwwQkFBMEIsaUNBQWlDLCtCQUErQixzQ0FBc0MsNkJBQTZCLDRFQUE0RSw0QkFBNEIsbUNBQW1DLDJCQUEyQixtREFBbUQsMEJBQTBCLGdFQUFnRSwyU0FBMlMsZ0VBQWdFLGdEQUFnRCxvQ0FBb0MsOEJBQThCLHFDQUFxQyxxR0FBcUcsa0RBQWtELHlWQUF5VixFQUFFLCtCQUErQixzQkFBc0IsRUFBRSxxQ0FBcUMsbURBQW1ELDBGQUEwRixpQ0FBaUMsYUFBYSxxQkFBcUIsNENBQTRDLDREQUE0RCwrQ0FBK0MseUJBQXlCLFVBQVUsRUFBRSx3REFBd0QsOEVBQThFLEVBQUUsb0NBQW9DLDBQQUEwUCxFQUFFLG1DQUFtQyw2REFBNkQsRUFBRSw0Q0FBNEMsMkdBQTJHLG1EQUFtRCxFQUFFLHFDQUFxQyxvTEFBb0wsRUFBRSxvQ0FBb0MsMkRBQTJELEVBQUUsa0NBQWtDLDRDQUE0QyxFQUFFLG9DQUFvQyx3REFBd0QsRUFBRSxtQ0FBbUMsaUNBQWlDLEVBQUUsbUNBQW1DLHFDQUFxQyxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBRSxvQ0FBb0Msa0JBQWtCLHlGQUF5RixFQUFFLHNDQUFzQywrQkFBK0IsRUFBRSw0QkFBNEIsZ0tBQWdLLEVBQUUsOEJBQThCLGtLQUFrSyxFQUFFLDRCQUE0QixnS0FBZ0ssRUFBRSxxQ0FBcUMsa0pBQWtKLEVBQUUscUNBQXFDLCtIQUErSCxFQUFFLDJCQUEyQiwwQkFBMEIsbURBQW1ELEtBQUsscUNBQXFDLGlJQUFpSSxFQUFFLDZCQUE2QiwwQkFBMEIsc0RBQXNELDJDQUEyQyxFQUFFLG9DQUFvQyxrQkFBa0IsbUVBQW1FLEVBQUUsc0NBQXNDLGFBQWEscUNBQXFDLG1CQUFtQix5QkFBeUIsa0NBQWtDLGlDQUFpQyxtQ0FBbUMsUUFBUSxlQUFlLHdDQUF3QyxnQ0FBZ0MscVFBQXFRLHFCQUFxQiwrQ0FBK0MsSUFBSSxFQUFFLDhDQUE4QyxXQUFXLDBCQUEwQixhQUFhLGlLQUFpSyxpQ0FBaUMsMkJBQTJCLG1CQUFtQixzQkFBc0IsYUFBYSxxQkFBcUIsYUFBYSxtQkFBbUIsYUFBYSxzQkFBc0IsMEJBQTBCLG9CQUFvQiw2Q0FBNkMsR0FBRyxJQUFJLEVBQUUsK0NBQStDLGdIQUFnSCxFQUFFLHVDQUF1QywwQkFBMEIsMEZBQTBGLEVBQUUsd0NBQXdDLHVKQUF1Six1REFBdUQsZ0JBQWdCLHlCQUF5QixtQkFBbUIsRUFBRSxrQ0FBa0MsdUJBQXVCLEVBQUUsc0NBQXNDLDBCQUEwQixXQUFXLCtCQUErQixzRkFBc0YsZ0JBQWdCLHdKQUF3Siw2REFBNkQsS0FBSyxnQkFBZ0IsMktBQTJLLHVDQUF1QyxTQUFTLEVBQUUsOEJBQThCLDBCQUEwQixtQkFBbUIsb0NBQW9DLGdJQUFnSSxFQUFFLG1DQUFtQyxxRkFBcUYsMERBQTBELGdFQUFnRSxFQUFFLCtCQUErQix3Q0FBd0Msa0dBQWtHLEVBQUUsK0JBQStCLHdDQUF3QyxrR0FBa0csRUFBRSxpQ0FBaUMsd0NBQXdDLG1HQUFtRyxFQUFFLGlDQUFpQyx3Q0FBd0MsbUdBQW1HLEVBQUUsbUNBQW1DLHdDQUF3QyxxR0FBcUcsRUFBRSxxQ0FBcUMsTUFBTSxNQUFNLGdDQUFnQyxHQUFHLDBDQUEwQyxRQUFRLHNCQUFzQixVQUFVLEVBQUUsZ0NBQWdDLG9DQUFvQyxFQUFFLDZCQUE2Qix5Q0FBeUMsRUFBRSwrQkFBK0IsNEVBQTRFLEVBQUUsNkJBQTZCLDBDQUEwQyxFQUFFLHdDQUF3QywrQkFBK0Isb0NBQW9DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixjQUFjLGVBQWUsOEVBQThFLDZEQUE2RCxVQUFVLGdCQUFnQixrQ0FBa0MseURBQXlELEVBQUUscUNBQXFDLDJDQUEyQywrQkFBK0Isa0RBQWtELGlQQUFpUCw4QkFBOEIsMkNBQTJDLHFFQUFxRSx1QkFBdUIsd0NBQXdDLE9BQU8sbUNBQW1DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixjQUFjLGVBQWUsOEVBQThFLG9OQUFvTiwySUFBMkksVUFBVSxlQUFlLGtDQUFrQywrRUFBK0UsbUJBQW1CLHFJQUFxSSxFQUFFLDhDQUE4QyxtRUFBbUUsbURBQW1ELDJGQUEyRixtTEFBbUwsb0RBQW9ELG9HQUFvRyw4Q0FBOEMsMENBQTBDLDBOQUEwTiw2REFBNkQsOEJBQThCLG9FQUFvRSx5Q0FBeUMsbUNBQW1DLDhKQUE4SiwyQ0FBMkMsbUJBQW1CLHFHQUFxRyx3Q0FBd0MsSUFBSSxHQUFHLHNCQUFzQixFQUFFLCtCQUErQixXQUFXLDZEQUE2RCwyRUFBMkUsa0NBQWtDLG9DQUFvQyxHQUFHLGlCQUFpQixzRUFBc0UsT0FBTyxzQ0FBc0MsYUFBYSxxQ0FBcUMsb0RBQW9ELG9EQUFvRCw2Q0FBNkMsc0ZBQXNGLHVDQUF1QyxTQUFTLHVCQUF1QixPQUFPLGlCQUFpQixvQkFBb0IsUUFBUSxFQUFFLHNCQUFzQixlQUFlLFFBQVEsTUFBTSw2SkFBNkosZ0JBQWdCLE9BQU8sYUFBYSxZQUFZLGNBQWMsZUFBZSxrQkFBa0IsZUFBZSxTQUFTLGNBQWMsSUFBSSw4QkFBOEIsUUFBUSxnQkFBZ0IsaUJBQWlCLG9DQUFvQywyQkFBMkIsSUFBSSxjQUFjLFNBQVMsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixjQUFjLGVBQWUsOEVBQThFLCtUQUErVCxVQUFVLGVBQWUsNkJBQTZCLHNEQUFzRCw0SEFBNEgsRUFBRSxrQ0FBa0MsV0FBVyxzQ0FBc0MsMkNBQTJDLElBQUksRUFBRSxtQ0FBbUMsMENBQTBDLEVBQUUsOEJBQThCLG9HQUFvRyxFQUFFLCtCQUErQixzSEFBc0gsa0dBQWtHLDZEQUE2RCwyRUFBMkUsY0FBYyxJQUFJLFVBQVUsZ0JBQWdCLEVBQUUsY0FBYyxpRUFBaUUsd0NBQXdDLFNBQVMsT0FBTyxRQUFRLE1BQU0sU0FBUyxHQUFHLFVBQVUsRUFBRSxnQ0FBZ0Msd0NBQXdDLHNSQUFzUiwrREFBK0QsaUNBQWlDLHFEQUFxRCxrREFBa0Qsb0JBQW9CLEdBQUcseUJBQXlCLHVEQUF1RCw2QkFBNkIseURBQXlELGlGQUFpRiwwQ0FBMEMsMkRBQTJELHdDQUF3QyxzRUFBc0UsSUFBSSxFQUFFLGtDQUFrQywrQkFBK0IscUNBQXFDLCtDQUErQywrR0FBK0csOFVBQThVLEVBQUUsK0JBQStCLHVDQUF1QyxvQ0FBb0MsR0FBRyxpQkFBaUIsWUFBWSxXQUFXLEtBQUssV0FBVywrR0FBK0csa0JBQWtCLGNBQWMsZUFBZSw4RUFBOEUsNEtBQTRLLFVBQVUsZ0JBQWdCLGtDQUFrQyxXQUFXLGtIQUFrSCx1Q0FBdUMsdUhBQXVILDBDQUEwQyxvUkFBb1Isd0RBQXdELCtCQUErQixHQUFHLElBQUksRUFBRSwrQkFBK0IsMERBQTBELG1DQUFtQyxHQUFHLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyxrQkFBa0IsY0FBYyxXQUFXLGVBQWUsOEVBQThFLHVTQUF1UyxZQUFZLDhDQUE4QyxHQUFHLFVBQVUsZ0JBQWdCLGlDQUFpQyxtSkFBbUosRUFBRSw4QkFBOEIsdUNBQXVDLDBCQUEwQixtVkFBbVYsbUNBQW1DLHlIQUF5SCxFQUFFLG9DQUFvQyw0Q0FBNEMsRUFBRSwrQkFBK0Isc0RBQXNELG1DQUFtQyxHQUFHLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyxrQkFBa0IsY0FBYyxXQUFXLGVBQWUsOEVBQThFLG9LQUFvSyxxQ0FBcUMseUNBQXlDLDJGQUEyRixXQUFXLGlEQUFpRCxTQUFTLDBDQUEwQyxhQUFhLFVBQVUsZUFBZSxrQ0FBa0MsV0FBVyxpbUJBQWltQixpQ0FBaUMsdUNBQXVDLG9IQUFvSCxvQ0FBb0MseUNBQXlDLGtDQUFrQyx5REFBeUQsMEZBQTBGLDBEQUEwRCx3Q0FBd0MsOEJBQThCLElBQUksRUFBRSwrQkFBK0IsdUJBQXVCLEVBQUUsaUNBQWlDLHNDQUFzQyxpRUFBaUUscURBQXFELCtCQUErQix1RkFBdUYsSUFBSSx3Q0FBd0MsT0FBTywyREFBMkQsbUJBQW1CLGdCQUFnQixvQkFBb0IsOEVBQThFLDBGQUEwRixpQkFBaUIsVUFBVSxFQUFFLDRCQUE0QiwwRUFBMEUsb0NBQW9DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLHdDQUF3QyxFQUFFLGlGQUFpRixjQUFjLFdBQVcsZUFBZSw4RUFBOEUsNERBQTRELGlDQUFpQyx5Q0FBeUMsb0NBQW9DLHFCQUFxQixVQUFVLGdCQUFnQixrQ0FBa0MseUJBQXlCLEVBQUUsK0JBQStCLHlCQUF5QixFQUFFLCtCQUErQix1QkFBdUIsa0RBQWtELG9CQUFvQiwrTUFBK00scUtBQXFLLEVBQUUsc0NBQXNDLHdEQUF3RCwrREFBK0QsdUJBQXVCLEVBQUUsb0NBQW9DLHFFQUFxRSxtQ0FBbUMsR0FBRyxpQkFBaUIsWUFBWSxXQUFXLEtBQUssV0FBVywrR0FBK0csa0JBQWtCLGNBQWMsV0FBVyxlQUFlLDhFQUE4RSxtREFBbUQsK0JBQStCLGdDQUFnQyxVQUFVLGdCQUFnQix3Q0FBd0MscUNBQXFDLG1DQUFtQyxHQUFHLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyxrQkFBa0IsY0FBYyxXQUFXLGVBQWUsOEVBQThFLDBEQUEwRCxpSkFBaUosaUNBQWlDLHlDQUF5QyxvQ0FBb0MscUJBQXFCLFVBQVUsZ0JBQWdCLHdDQUF3Qyw0QkFBNEIsRUFBRSxrQ0FBa0Msb0JBQW9CLEVBQUUsK0JBQStCLG9CQUFvQixFQUFFLCtCQUErQixrQkFBa0Isc0NBQXNDLGtDQUFrQyxNQUFNLFNBQVMsdUdBQXVHLDJFQUEyRSxLQUFLLEVBQUUsc0NBQXNDLCtHQUErRyxLQUFLLG9DQUFvQywrREFBK0QsZ0JBQWdCLHFDQUFxQyxFQUFFLG9DQUFvQyxpREFBaUQsbUNBQW1DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixjQUFjLFdBQVcsZUFBZSw4RUFBOEUseU9BQXlPLCtDQUErQyxXQUFXLDBDQUEwQyxhQUFhLFVBQVUsZ0JBQWdCLHdDQUF3QyxrQ0FBa0MsRUFBRSxrQ0FBa0MsV0FBVyx1R0FBdUcsMEJBQTBCLDhFQUE4RSxFQUFFLCtCQUErQiw0QkFBNEIsRUFBRSw4QkFBOEIsMEZBQTBGLDZCQUE2QixtQ0FBbUMsR0FBRyxpQkFBaUIsWUFBWSxXQUFXLEtBQUssV0FBVywrR0FBK0csa0JBQWtCLGNBQWMsZUFBZSw4RUFBOEUsd05BQXdOLFVBQVUsZUFBZSwwQ0FBMEMsNkJBQTZCLG1OQUFtTixFQUFFLCtCQUErQiwrR0FBK0csRUFBRSxrQ0FBa0MsNElBQTRJLEVBQUUsK0JBQStCLDhCQUE4QixFQUFFLHdDQUF3QyxpTUFBaU0sRUFBRSw0Q0FBNEMsZ0dBQWdHLEVBQUUsMkNBQTJDLFdBQVcsNEJBQTRCLGlEQUFpRCxzSUFBc0ksMkJBQTJCLHNDQUFzQyxzRUFBc0UscUNBQXFDLG1DQUFtQyxzQ0FBc0MsbUNBQW1DLEVBQUUsc0JBQXNCLG1DQUFtQyxrUUFBa1EsZUFBZSx3SEFBd0gsbUJBQW1CLG9CQUFvQiwyeURBQTJ5RCwyQ0FBMkMsYUFBYSx1QkFBdUIsMElBQTBJLFlBQVksR0FBRywwRkFBMEYsa0RBQWtELGFBQWEsdUJBQXVCLHdHQUF3RyxZQUFZLG1EQUFtRCwwQkFBMEIscUdBQXFHLDhHQUE4RyxHQUFHLEdBQUcsbUJBQW1CLG9CQUFvQixzR0FBc0csc0JBQXNCLHdJQUF3SSwySEFBMkgsS0FBSyw0Q0FBNEMscUtBQXFLLCtCQUErQixrQ0FBa0MsR0FBRyxZQUFZLEVBQUUseUNBQXlDLFdBQVcsNkNBQTZDLG1DQUFtQyw4SUFBOEksbUJBQW1CLGlCQUFpQixtR0FBbUcsd0JBQXdCLG1GQUFtRixFQUFFLHNCQUFzQiw4R0FBOEcsMkRBQTJELGFBQWEsR0FBRyx3QkFBd0IsNkJBQTZCLDZDQUE2QyxpQkFBaUIsNktBQTZLLFdBQVcsR0FBRyxxQ0FBcUMsSUFBSSxTQUFTLDRDQUE0QyxpQkFBaUIseUxBQXlMLFdBQVcsaURBQWlELGlCQUFpQixtTUFBbU0sV0FBVyxvREFBb0QsaUJBQWlCLGtOQUFrTixXQUFXLGdEQUFnRCxpQkFBaUIsb0tBQW9LLFdBQVcsd0RBQXdELGlCQUFpQixzT0FBc08sV0FBVyxzREFBc0QsaUJBQWlCLHlMQUF5TCxXQUFXLG9EQUFvRCxpQkFBaUIsaUxBQWlMLFdBQVcsbURBQW1ELDhDQUE4QyxzRkFBc0YsMkhBQTJILCtCQUErQix5SkFBeUosbUJBQW1CLHNCQUFzQiwrS0FBK0ssdUVBQXVFLHNFQUFzRSxhQUFhLG1EQUFtRCxtQ0FBbUMseUpBQXlKLG1CQUFtQixzQkFBc0IsNkxBQTZMLGFBQWEsdURBQXVELG1DQUFtQyxpS0FBaUssbUJBQW1CLHNCQUFzQiw2TUFBNk0sYUFBYSxnREFBZ0Qsa0VBQWtFLG9EQUFvRCx1RUFBdUUsb0RBQW9ELHVFQUF1RSw2Q0FBNkMsaUJBQWlCLDhMQUE4TCxXQUFXLDZDQUE2QyxpQkFBaUIsc0xBQXNMLFdBQVcsR0FBRyxtQkFBbUIsd0xBQXdMLGlCQUFpQixnTUFBZ00saUJBQWlCLDRMQUE0TCxpQkFBaUIsOExBQThMLGlCQUFpQixpTEFBaUwsaUJBQWlCLDZLQUE2SyxFQUFFLHlaQUF5WixtQ0FBbUMsMEpBQTBKLG1CQUFtQixtQ0FBbUMsMENBQTBDLG9CQUFvQixxQ0FBcUMsZUFBZSxpREFBaUQsbUNBQW1DLG1KQUFtSixtQkFBbUIsc0JBQXNCLHdMQUF3TCxhQUFhLGdEQUFnRCxtQ0FBbUMsOElBQThJLG1CQUFtQixpQkFBaUIsdVhBQXVYLElBQUkscUJBQXFCLG1EQUFtRCx5RkFBeUYsMkdBQTJHLFdBQVcsK0NBQStDLGlCQUFpQixnS0FBZ0ssV0FBVyxrREFBa0QsaUJBQWlCLCtIQUErSCxXQUFXLGdEQUFnRCxpQkFBaUIsNkhBQTZILFdBQVcsNkNBQTZDLGlCQUFpQixrTEFBa0wsV0FBVyxxREFBcUQsaUJBQWlCLHVMQUF1TCxXQUFXLG1EQUFtRCxpQkFBaUIsNEtBQTRLLFdBQVcsK0NBQStDLGlCQUFpQixvSkFBb0osV0FBVywrQ0FBK0MsaUJBQWlCLG9KQUFvSixXQUFXLCtDQUErQyxpQkFBaUIsZ0lBQWdJLFdBQVcsSUFBSSxFQUFFLDhDQUE4QyxXQUFXLGtEQUFrRCxpQkFBaUIsK0lBQStJLFdBQVcscURBQXFELGlCQUFpQixnSkFBZ0osV0FBVyx3REFBd0QsaUJBQWlCLG9KQUFvSixXQUFXLHFEQUFxRCxpQkFBaUIsc0lBQXNJLFdBQVcsb0RBQW9ELGlCQUFpQiwwSUFBMEksV0FBVyxxREFBcUQsaUJBQWlCLDZJQUE2SSxXQUFXLG9EQUFvRCxpQkFBaUIseUlBQXlJLFdBQVcsc0RBQXNELGlCQUFpQixnSUFBZ0ksV0FBVyxJQUFJLEVBQUUsNkNBQTZDLFdBQVcsc0RBQXNELGlCQUFpQix5SEFBeUgsV0FBVyxpREFBaUQsaUJBQWlCLDJIQUEySCxXQUFXLElBQUksRUFBRSw4Q0FBOEMsV0FBVyxnREFBZ0QsaUJBQWlCLDRKQUE0SixXQUFXLHFEQUFxRCxpQkFBaUIsK0pBQStKLFdBQVcscURBQXFELGlCQUFpQiw2SkFBNkosV0FBVyxzREFBc0QsaUJBQWlCLDhKQUE4SixXQUFXLG9EQUFvRCxpQkFBaUIscUpBQXFKLFdBQVcsb0RBQW9ELGlCQUFpQixxSkFBcUosV0FBVyxzREFBc0QsaUJBQWlCLHFKQUFxSixXQUFXLElBQUksRUFBRSxnQ0FBZ0MsdUJBQXVCLElBQUksS0FBSyxnSEFBZ0gsb0JBQW9CLDBCQUEwQixJQUFJLEtBQUssd0NBQXdDLG9EQUFvRCxnQkFBZ0IsRUFBRSwyQ0FBMkMsb0VBQW9FLDJCQUEyQiw0QkFBNEIsOEJBQThCLCtCQUErQixrQ0FBa0Msa0NBQWtDLHdDQUF3QyxrQ0FBa0Msd0NBQXdDLG9DQUFvQyw0Q0FBNEMsc0NBQXNDLGlEQUFpRCxvQkFBb0IsbURBQW1ELHFFQUFxRSwrQ0FBK0MsbURBQW1ELHdDQUF3QywyQkFBMkIsaUVBQWlFLG1CQUFtQixxQkFBcUIsbURBQW1ELHdDQUF3QywyQkFBMkIsNENBQTRDLDBCQUEwQix1REFBdUQsd0NBQXdDLDJCQUEyQixnREFBZ0QscUJBQXFCLHVCQUF1QixzREFBc0QsNkNBQTZDLDJCQUEyQixpREFBaUQsRUFBRSwwQ0FBMEMsV0FBVywwQkFBMEIsb0NBQW9DLElBQUksRUFBRSx5Q0FBeUMsNExBQTRMLHVCQUF1Qiw2QkFBNkIsR0FBRyxrQ0FBa0MsUUFBUSx5QkFBeUIsa0RBQWtELE9BQU8sMkJBQTJCLDZFQUE2RSxlQUFlLHFEQUFxRCxnQkFBZ0IscUJBQXFCLG9DQUFvQyxHQUFHLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyxrQkFBa0IsY0FBYyxlQUFlLDhFQUE4RSwrV0FBK1csVUFBVSxnQkFBZ0Isd0NBQXdDLDZCQUE2QixFQUFFLGtDQUFrQyxXQUFXLHVXQUF1VywrQ0FBK0Msd0lBQXdJLEVBQUUsK0JBQStCLHNIQUFzSCxFQUFFLG9DQUFvQyxnREFBZ0QsZ0hBQWdILGdGQUFnRiwrRUFBK0UsdUVBQXVFLHNDQUFzQyxxQkFBcUIsMENBQTBDLHlFQUF5RSxxREFBcUQsc0JBQXNCLGFBQWEsSUFBSSxFQUFFLHdDQUF3QyxpTEFBaUwsRUFBRSx5Q0FBeUMsMEZBQTBGLEVBQUUsdUNBQXVDLG9HQUFvRyxFQUFFLGlDQUFpQyxtQ0FBbUMsNkRBQTZELEVBQUUsbUNBQW1DLG1DQUFtQyw2REFBNkQsbUNBQW1DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixjQUFjLGVBQWUsOEVBQThFLHFQQUFxUCxVQUFVLGdCQUFnQixrQ0FBa0MsK3lCQUEreUIsMEZBQTBGLCtEQUErRCxnRkFBZ0YsaU1BQWlNLDZCQUE2QixrR0FBa0csd0JBQXdCLEVBQUUsK0JBQStCLHdEQUF3RCxFQUFFLHVDQUF1Qyw2QkFBNkIsbUVBQW1FLElBQUksRUFBRSwwQ0FBMEMsdUNBQXVDLEVBQUUsdUNBQXVDLFdBQVcsaUNBQWlDLDBQQUEwUCx5Q0FBeUMsa0lBQWtJLHNDQUFzQyw2REFBNkQsOENBQThDLGtIQUFrSCw2RUFBNkUsb0JBQW9CLDRDQUE0QywrQ0FBK0MsOEJBQThCLG1HQUFtRyw2QkFBNkIsR0FBRyw2Q0FBNkMsMERBQTBELDhCQUE4QixjQUFjLEVBQUUsNEJBQTRCLHVEQUF1RCxpRkFBaUYsZ0ZBQWdGLG9CQUFvQix3Q0FBd0MsSUFBSSxtQ0FBbUMsR0FBRyxpQkFBaUIsWUFBWSxXQUFXLEtBQUssV0FBVywrR0FBK0csa0JBQWtCLGNBQWMsV0FBVyxlQUFlLDhFQUE4RSxzRkFBc0YscUZBQXFGLFdBQVcseURBQXlELFNBQVMsaUNBQWlDLGtIQUFrSCxVQUFVLGdCQUFnQix3Q0FBd0MsNkNBQTZDLEVBQUUsa0NBQWtDLCtCQUErQixtREFBbUQsNkZBQTZGLFdBQVcsNENBQTRDLG1FQUFtRSwyR0FBMkcsbUJBQW1CLElBQUksRUFBRSwrQkFBK0Isd0JBQXdCLEVBQUUsOEJBQThCLDJDQUEyQyxpREFBaUQsb0NBQW9DLDBEQUEwRCwrQ0FBK0Msc0VBQXNFLCtDQUErQyxzQ0FBc0MsRUFBRSxpQkFBaUIsa0JBQWtCLEVBQUUsNEJBQTRCLHNCQUFzQixtQ0FBbUMsR0FBRyxpQkFBaUIsWUFBWSxXQUFXLEtBQUssV0FBVywrR0FBK0csa0JBQWtCLGNBQWMsZUFBZSw4RUFBOEUsd0tBQXdLLFVBQVUsZ0JBQWdCLGtDQUFrQyxTQUFTLHNDQUFzQyxxS0FBcUssdUVBQXVFLDI5QkFBMjlCLDZCQUE2QiwyRUFBMkUsd0JBQXdCLEVBQUUsK0JBQStCLHdEQUF3RCxFQUFFLHVDQUF1Qyw2QkFBNkIsbUVBQW1FLElBQUksRUFBRSw0QkFBNEIsV0FBVyxpRkFBaUYsdVFBQXVRLG9CQUFvQix3Q0FBd0MsSUFBSSxFQUFFLHVDQUF1QyxXQUFXLGlDQUFpQyxrSEFBa0gseUNBQXlDLHdGQUF3RiwwQ0FBMEMsMERBQTBELDBCQUEwQixxRUFBcUUsc0NBQXNDLHVCQUF1Qiw2Q0FBNkMsMERBQTBELDhCQUE4QixJQUFJLG1DQUFtQyxHQUFHLGlCQUFpQixZQUFZLFdBQVcsS0FBSyxXQUFXLCtHQUErRyxrQkFBa0IsY0FBYyxXQUFXLGVBQWUsOEVBQThFLDZIQUE2SCx3REFBd0QsU0FBUyxpQ0FBaUMsa0hBQWtILFVBQVUsZUFBZSx3Q0FBd0MsOENBQThDLEVBQUUsa0NBQWtDLCtCQUErQiwrQkFBK0IsNENBQTRDLG1FQUFtRSw0R0FBNEcsbUJBQW1CLElBQUksRUFBRSwrQkFBK0Isd0JBQXdCLEVBQUUsaUNBQWlDLGdCQUFnQixrRUFBa0UsNkdBQTZHLHNDQUFzQyxFQUFFLGtCQUFrQixFQUFFLDRCQUE0QixzQkFBc0Isb0NBQW9DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixjQUFjLFdBQVcsZUFBZSw4RUFBOEUsc0ZBQXNGLHFDQUFxQyxtQkFBbUIsbUVBQW1FLFdBQVcseURBQXlELFNBQVMsaUNBQWlDLGtIQUFrSCxVQUFVLGVBQWUsd0NBQXdDLDhDQUE4QyxFQUFFLGtDQUFrQywrQkFBK0IsK0JBQStCLDRDQUE0QyxtRUFBbUUsMktBQTJLLG1CQUFtQixJQUFJLEVBQUUsK0JBQStCLHdCQUF3QixFQUFFLCtCQUErQixzQ0FBc0MsOERBQThELE1BQU0sc0VBQXNFLCtDQUErQyxzQ0FBc0MsRUFBRSxpQkFBaUIsVUFBVSxFQUFFLDRCQUE0QixzQkFBc0Isb0NBQW9DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixjQUFjLGVBQWUsOEVBQThFLHdLQUF3SyxVQUFVLGdCQUFnQixrQ0FBa0MsNG9CQUE0b0IsNkJBQTZCLDJFQUEyRSx3QkFBd0IsRUFBRSwrQkFBK0Isd0RBQXdELEVBQUUsdUNBQXVDLDZCQUE2QixtRUFBbUUsSUFBSSxFQUFFLHdDQUF3QyxpSEFBaUgsR0FBRyx5eUJBQXl5Qix3QkFBd0IsZUFBZSxrQkFBa0Isd0RBQXdELDBDQUEwQyxJQUFJLGtEQUFrRCwrSUFBK0ksdUtBQXVLLHNOQUFzTixvS0FBb0ssOE1BQThNLDhKQUE4Siw4TUFBOE0sd0JBQXdCLFFBQVEsNkJBQTZCLFFBQVEsNkJBQTZCLFFBQVEsNkJBQTZCLFFBQVEsNkJBQTZCLFFBQVEsK1NBQStTLHdDQUF3QywrQkFBK0IsNE1BQTRNLFNBQVMsaUdBQWlHLEtBQUssNkJBQTZCLDBQQUEwUCwyQ0FBMkMsRUFBRSw0QkFBNEIsMkRBQTJELGtGQUFrRixtRUFBbUUsMkJBQTJCLDJDQUEyQyxvQkFBb0Isd0NBQXdDLElBQUksRUFBRSx1Q0FBdUMsV0FBVyxpQ0FBaUMsNEVBQTRFLHlDQUF5QyxxRkFBcUYsMEJBQTBCLDZEQUE2RCxzQ0FBc0MsdUJBQXVCLDZDQUE2QyxrREFBa0QsOEJBQThCLElBQUksbUNBQW1DLEdBQUcsaUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLGtCQUFrQixjQUFjLGVBQWUsOEVBQThFLHdLQUF3SyxVQUFVLGVBQWUsa0NBQWtDLHNiQUFzYiw2QkFBNkIsd0hBQXdILDRDQUE0QyxtQ0FBbUMsR0FBRyx3QkFBd0IsRUFBRSwrQkFBK0Isd0RBQXdELEVBQUUsMENBQTBDLHFEQUFxRCx1Q0FBdUMsa0VBQWtFLDREQUE0RCw0QkFBNEIsNEVBQTRFLGFBQWEsRUFBRSxzQ0FBc0MsV0FBVyxpQ0FBaUMseUNBQXlDLG1EQUFtRCw4QkFBOEIsY0FBYyxFQUFFLDRCQUE0QixXQUFXLCtFQUErRSx3Q0FBd0MsSUFBSSxvQ0FBb0MsR0FBRyxpQkFBaUIsWUFBWSxXQUFXLEtBQUssV0FBVywrR0FBK0csa0JBQWtCLGNBQWMsV0FBVyxlQUFlLDhFQUE4RSw0SkFBNEoscUNBQXFDLDRGQUE0RixzQ0FBc0MsZ0NBQWdDLHVFQUF1RSxxR0FBcUcsMkZBQTJGLFNBQVMsa0NBQWtDLDRDQUE0QyxVQUFVLGdCQUFnQix3Q0FBd0MsbUVBQW1FLEVBQUUsa0NBQWtDLFdBQVcsK0JBQStCLDZCQUE2Qiw0Q0FBNEMsNkNBQTZDLHlHQUF5RyxhQUFhLDBDQUEwQyxhQUFhLElBQUksRUFBRSwrQkFBK0Isd0JBQXdCLEVBQUUsK0JBQStCLGlEQUFpRCxtREFBbUQsS0FBSyxPQUFPLCtCQUErQix3Q0FBd0MsK0NBQStDLHVEQUF1RCxvRUFBb0UsRUFBRSx1Q0FBdUMsK0VBQStFLEVBQUUsNEJBQTRCLG9DQUFvQyxtQ0FBbUMsR0FBRyxpQkFBaUIsWUFBWSxXQUFXLEtBQUssV0FBVywrR0FBK0csa0JBQWtCLGNBQWMsV0FBVyxlQUFlLDhFQUE4RSx5UUFBeVEsaUNBQWlDLHlDQUF5QyxvQ0FBb0MsbUJBQW1CLHlFQUF5RSxXQUFXLFVBQVUsZUFBZSx3Q0FBd0MsNEJBQTRCLEVBQUUsa0NBQWtDLFdBQVcsOEVBQThFLHdEQUF3RCxvTUFBb00scUdBQXFHLDZDQUE2QyxtQkFBbUIsSUFBSSxFQUFFLCtCQUErQix3QkFBd0IsRUFBRSxtQ0FBbUMsa0pBQWtKLEVBQUUsZ0NBQWdDLDhEQUE4RCwrQkFBK0IsS0FBSyx3QkFBd0Isa0hBQWtILEVBQUUsOEJBQThCLDhEQUE4RCwrQkFBK0IsS0FBSyx3QkFBd0IsZ0hBQWdILEVBQUUsK0JBQStCLG1EQUFtRCxhQUFhLDJCQUEyQixzR0FBc0csaUdBQWlHLDJFQUEyRSxnQ0FBZ0Msc0VBQXNFLGtDQUFrQyxvREFBb0Qsd0NBQXdDLG1KQUFtSixFQUFFLHFDQUFxQyw4RUFBOEUsa0RBQWtELEVBQUUsOENBQThDLG9CQUFvQiwwQkFBMEIsZ0RBQWdELHVEQUF1RCxlQUFlLElBQUksSUFBSSxFQUFFLHNDQUFzQyx3TkFBd04sRUFBRSwwQ0FBMEMsb0JBQW9CLGlDQUFpQyxzQkFBc0Isd0NBQXdDLFVBQVUsRUFBRSxzQ0FBc0MsOEVBQThFLDJDQUEyQyxnRUFBZ0UsTUFBTSxFQUFFLG9DQUFvQyxXQUFXLG1FQUFtRSxxREFBcUQsb0NBQW9DLHVFQUF1RSw2REFBNkQsOEJBQThCLGVBQWUsdUNBQXVDLHlCQUF5QixzQkFBc0Isb0ZBQW9GLDRHQUE0Ryx5REFBeUQsNEdBQTRHLG9EQUFvRCxxQkFBcUIsaUNBQWlDLEdBQUcsbUJBQW1CLEVBQUUsNEJBQTRCLHNCQUFzQixFQUFFLDRCQUE0QixzQkFBc0Isb0NBQW9DLEdBQUcsZUFBZSxrRkFBa0YsZ0JBQWdCLGFBQWEsb0dBQW9HLE9BQU8saUJBQWlCLFlBQVksV0FBVyxLQUFLLFdBQVcsK0dBQStHLDBDQUEwQywyQkFBMkIsa0NBQWtDLDBEQUEwRCxzU0FBc1MsV0FBVyw4V0FBOFcsNmVBQTZlLDJzRUFBMnNFLHdDQUF3Qyx5SEFBeUgsY0FBYyxxR0FBcUcsMlNBQTJTLGFBQWEsNENBQTRDLGtjQUFrYyxJQUFJLDByQkFBMHJCLE1BQU0seXFCQUF5cUIsUUFBUSwyMkNBQTIyQyxFQUFFLGtCQUFrQixvQkFBb0IsZUFBZSw4RUFBOEUsc0VBQXNFLFVBQVUsZ0JBQWdCLCtCQUErQix1QkFBdUIsME5BQTBOLG9CQUFvQixxRkFBcUYseUNBQXlDLG1DQUFtQyx1QkFBdUIsR0FBRyxvSUFBb0ksbUNBQW1DLEdBQUcsdUJBQXVCLGtCQUFrQiwwR0FBMEcsdURBQXVELGVBQWUsa0ZBQWtGLGdCQUFnQixhQUFhLG9HQUFvRyxPQUFPLHFnQ0FBcWdDLHNEQUFzRCx1R0FBdUcseUpBQXlKLG9CQUFvQixnQkFBZ0IscUJBQXFCLDREQUE0RCxrQkFBa0IsU0FBUyw4RkFBOEYsc0RBQXNELG9FQUFvRSxtSUFBbUksb0JBQW9CLGdCQUFnQixxQkFBcUIsNERBQTRELDBHQUEwRyxtQ0FBbUMscUJBQXFCLDZZQUE2WSxxTEFBcUwsZ0RBQWdELDJFQUEyRSx5REFBeUQsZ1VBQWdVLG9CQUFvQixpRUFBaUUsMENBQTBDLHdCQUF3QixPQUFPLG1QQUFtUCw2REFBNkQsbUNBQW1DLElBQUksS0FBSywwRUFBMEUsSUFBSSxLQUFLLGtCQUFrQixzT0FBc08sMkRBQTJELGlFQUFpRSxzRUFBc0UsRUFBRSxRQUFRLHNCQUFzQixzR0FBc0csc0JBQXNCLHVDQUF1QyxXQUFXLHNFQUFzRSwwQkFBMEIscUNBQXFDLHlEQUF5RCxRQUFRLHlCQUF5QixtREFBbUQsK0JBQStCLDBCQUEwQiw2QkFBNkIsMEJBQTBCLDhCQUE4QiwyQkFBMkIsd0JBQXdCLGdCQUFnQix3QkFBd0IsZ0JBQWdCLDBCQUEwQiw4SUFBOEkseUJBQXlCLGdNQUFnTSw0QkFBNEIsdURBQXVELGlCQUFpQix5Q0FBeUMsOEVBQThFLHNDQUFzQyxNQUFNLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3VtbWVybm90ZS9kaXN0L3N1bW1lcm5vdGUtYnM1Lm1pbi5qcz81Y2EyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qISBTdW1tZXJub3RlIHYwLjguMjAgfCAoYykgMjAxMy0gQWxhbiBIb25nIGFuZCBjb250cmlidXRvcnMgfCBNSVQgbGljZW5zZSAqL1xuIWZ1bmN0aW9uKHQsZSl7aWYoXCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGUpbW9kdWxlLmV4cG9ydHM9ZShyZXF1aXJlKFwialF1ZXJ5XCIpKTtlbHNlIGlmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW1wialF1ZXJ5XCJdLGUpO2Vsc2V7dmFyIG49XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZShyZXF1aXJlKFwialF1ZXJ5XCIpKTplKHQualF1ZXJ5KTtmb3IodmFyIG8gaW4gbikoXCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0czp0KVtvXT1uW29dfX0oc2VsZiwoZnVuY3Rpb24odCl7cmV0dXJuKCgpPT57XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9ezk3NzA6KHQsZSxuKT0+e3ZhciBvPW4oMTE0NSksaT1uLm4obyk7aSgpLnN1bW1lcm5vdGU9aSgpLnN1bW1lcm5vdGV8fHtsYW5nOnt9fSxpKCkuZXh0ZW5kKGkoKS5zdW1tZXJub3RlLmxhbmcse1wiZW4tVVNcIjp7Zm9udDp7Ym9sZDpcIkJvbGRcIixpdGFsaWM6XCJJdGFsaWNcIix1bmRlcmxpbmU6XCJVbmRlcmxpbmVcIixjbGVhcjpcIlJlbW92ZSBGb250IFN0eWxlXCIsaGVpZ2h0OlwiTGluZSBIZWlnaHRcIixuYW1lOlwiRm9udCBGYW1pbHlcIixzdHJpa2V0aHJvdWdoOlwiU3RyaWtldGhyb3VnaFwiLHN1YnNjcmlwdDpcIlN1YnNjcmlwdFwiLHN1cGVyc2NyaXB0OlwiU3VwZXJzY3JpcHRcIixzaXplOlwiRm9udCBTaXplXCIsc2l6ZXVuaXQ6XCJGb250IFNpemUgVW5pdFwifSxpbWFnZTp7aW1hZ2U6XCJQaWN0dXJlXCIsaW5zZXJ0OlwiSW5zZXJ0IEltYWdlXCIscmVzaXplRnVsbDpcIlJlc2l6ZSBmdWxsXCIscmVzaXplSGFsZjpcIlJlc2l6ZSBoYWxmXCIscmVzaXplUXVhcnRlcjpcIlJlc2l6ZSBxdWFydGVyXCIscmVzaXplTm9uZTpcIk9yaWdpbmFsIHNpemVcIixmbG9hdExlZnQ6XCJGbG9hdCBMZWZ0XCIsZmxvYXRSaWdodDpcIkZsb2F0IFJpZ2h0XCIsZmxvYXROb25lOlwiUmVtb3ZlIGZsb2F0XCIsc2hhcGVSb3VuZGVkOlwiU2hhcGU6IFJvdW5kZWRcIixzaGFwZUNpcmNsZTpcIlNoYXBlOiBDaXJjbGVcIixzaGFwZVRodW1ibmFpbDpcIlNoYXBlOiBUaHVtYm5haWxcIixzaGFwZU5vbmU6XCJTaGFwZTogTm9uZVwiLGRyYWdJbWFnZUhlcmU6XCJEcmFnIGltYWdlIG9yIHRleHQgaGVyZVwiLGRyb3BJbWFnZTpcIkRyb3AgaW1hZ2Ugb3IgVGV4dFwiLHNlbGVjdEZyb21GaWxlczpcIlNlbGVjdCBmcm9tIGZpbGVzXCIsbWF4aW11bUZpbGVTaXplOlwiTWF4aW11bSBmaWxlIHNpemVcIixtYXhpbXVtRmlsZVNpemVFcnJvcjpcIk1heGltdW0gZmlsZSBzaXplIGV4Y2VlZGVkLlwiLHVybDpcIkltYWdlIFVSTFwiLHJlbW92ZTpcIlJlbW92ZSBJbWFnZVwiLG9yaWdpbmFsOlwiT3JpZ2luYWxcIn0sdmlkZW86e3ZpZGVvOlwiVmlkZW9cIix2aWRlb0xpbms6XCJWaWRlbyBMaW5rXCIsaW5zZXJ0OlwiSW5zZXJ0IFZpZGVvXCIsdXJsOlwiVmlkZW8gVVJMXCIscHJvdmlkZXJzOlwiKFlvdVR1YmUsIEdvb2dsZSBEcml2ZSwgVmltZW8sIFZpbmUsIEluc3RhZ3JhbSwgRGFpbHlNb3Rpb24sIFlvdWt1LCBQZWVydHViZSlcIn0sbGluazp7bGluazpcIkxpbmtcIixpbnNlcnQ6XCJJbnNlcnQgTGlua1wiLHVubGluazpcIlVubGlua1wiLGVkaXQ6XCJFZGl0XCIsdGV4dFRvRGlzcGxheTpcIlRleHQgdG8gZGlzcGxheVwiLHVybDpcIlRvIHdoYXQgVVJMIHNob3VsZCB0aGlzIGxpbmsgZ28/XCIsb3BlbkluTmV3V2luZG93OlwiT3BlbiBpbiBuZXcgd2luZG93XCIsdXNlUHJvdG9jb2w6XCJVc2UgZGVmYXVsdCBwcm90b2NvbFwifSx0YWJsZTp7dGFibGU6XCJUYWJsZVwiLGFkZFJvd0Fib3ZlOlwiQWRkIHJvdyBhYm92ZVwiLGFkZFJvd0JlbG93OlwiQWRkIHJvdyBiZWxvd1wiLGFkZENvbExlZnQ6XCJBZGQgY29sdW1uIGxlZnRcIixhZGRDb2xSaWdodDpcIkFkZCBjb2x1bW4gcmlnaHRcIixkZWxSb3c6XCJEZWxldGUgcm93XCIsZGVsQ29sOlwiRGVsZXRlIGNvbHVtblwiLGRlbFRhYmxlOlwiRGVsZXRlIHRhYmxlXCJ9LGhyOntpbnNlcnQ6XCJJbnNlcnQgSG9yaXpvbnRhbCBSdWxlXCJ9LHN0eWxlOntzdHlsZTpcIlN0eWxlXCIscDpcIk5vcm1hbFwiLGJsb2NrcXVvdGU6XCJRdW90ZVwiLHByZTpcIkNvZGVcIixoMTpcIkhlYWRlciAxXCIsaDI6XCJIZWFkZXIgMlwiLGgzOlwiSGVhZGVyIDNcIixoNDpcIkhlYWRlciA0XCIsaDU6XCJIZWFkZXIgNVwiLGg2OlwiSGVhZGVyIDZcIn0sbGlzdHM6e3Vub3JkZXJlZDpcIlVub3JkZXJlZCBsaXN0XCIsb3JkZXJlZDpcIk9yZGVyZWQgbGlzdFwifSxvcHRpb25zOntoZWxwOlwiSGVscFwiLGZ1bGxzY3JlZW46XCJGdWxsIFNjcmVlblwiLGNvZGV2aWV3OlwiQ29kZSBWaWV3XCJ9LHBhcmFncmFwaDp7cGFyYWdyYXBoOlwiUGFyYWdyYXBoXCIsb3V0ZGVudDpcIk91dGRlbnRcIixpbmRlbnQ6XCJJbmRlbnRcIixsZWZ0OlwiQWxpZ24gbGVmdFwiLGNlbnRlcjpcIkFsaWduIGNlbnRlclwiLHJpZ2h0OlwiQWxpZ24gcmlnaHRcIixqdXN0aWZ5OlwiSnVzdGlmeSBmdWxsXCJ9LGNvbG9yOntyZWNlbnQ6XCJSZWNlbnQgQ29sb3JcIixtb3JlOlwiTW9yZSBDb2xvclwiLGJhY2tncm91bmQ6XCJCYWNrZ3JvdW5kIENvbG9yXCIsZm9yZWdyb3VuZDpcIlRleHQgQ29sb3JcIix0cmFuc3BhcmVudDpcIlRyYW5zcGFyZW50XCIsc2V0VHJhbnNwYXJlbnQ6XCJTZXQgdHJhbnNwYXJlbnRcIixyZXNldDpcIlJlc2V0XCIscmVzZXRUb0RlZmF1bHQ6XCJSZXNldCB0byBkZWZhdWx0XCIsY3BTZWxlY3Q6XCJTZWxlY3RcIn0sc2hvcnRjdXQ6e3Nob3J0Y3V0czpcIktleWJvYXJkIHNob3J0Y3V0c1wiLGNsb3NlOlwiQ2xvc2VcIix0ZXh0Rm9ybWF0dGluZzpcIlRleHQgZm9ybWF0dGluZ1wiLGFjdGlvbjpcIkFjdGlvblwiLHBhcmFncmFwaEZvcm1hdHRpbmc6XCJQYXJhZ3JhcGggZm9ybWF0dGluZ1wiLGRvY3VtZW50U3R5bGU6XCJEb2N1bWVudCBTdHlsZVwiLGV4dHJhS2V5czpcIkV4dHJhIGtleXNcIn0saGVscDp7ZXNjYXBlOlwiRXNjYXBlXCIsaW5zZXJ0UGFyYWdyYXBoOlwiSW5zZXJ0IFBhcmFncmFwaFwiLHVuZG86XCJVbmRvIHRoZSBsYXN0IGNvbW1hbmRcIixyZWRvOlwiUmVkbyB0aGUgbGFzdCBjb21tYW5kXCIsdGFiOlwiVGFiXCIsdW50YWI6XCJVbnRhYlwiLGJvbGQ6XCJTZXQgYSBib2xkIHN0eWxlXCIsaXRhbGljOlwiU2V0IGEgaXRhbGljIHN0eWxlXCIsdW5kZXJsaW5lOlwiU2V0IGEgdW5kZXJsaW5lIHN0eWxlXCIsc3RyaWtldGhyb3VnaDpcIlNldCBhIHN0cmlrZXRocm91Z2ggc3R5bGVcIixyZW1vdmVGb3JtYXQ6XCJDbGVhbiBhIHN0eWxlXCIsanVzdGlmeUxlZnQ6XCJTZXQgbGVmdCBhbGlnblwiLGp1c3RpZnlDZW50ZXI6XCJTZXQgY2VudGVyIGFsaWduXCIsanVzdGlmeVJpZ2h0OlwiU2V0IHJpZ2h0IGFsaWduXCIsanVzdGlmeUZ1bGw6XCJTZXQgZnVsbCBhbGlnblwiLGluc2VydFVub3JkZXJlZExpc3Q6XCJUb2dnbGUgdW5vcmRlcmVkIGxpc3RcIixpbnNlcnRPcmRlcmVkTGlzdDpcIlRvZ2dsZSBvcmRlcmVkIGxpc3RcIixvdXRkZW50OlwiT3V0ZGVudCBvbiBjdXJyZW50IHBhcmFncmFwaFwiLGluZGVudDpcIkluZGVudCBvbiBjdXJyZW50IHBhcmFncmFwaFwiLGZvcm1hdFBhcmE6XCJDaGFuZ2UgY3VycmVudCBibG9jaydzIGZvcm1hdCBhcyBhIHBhcmFncmFwaChQIHRhZylcIixmb3JtYXRIMTpcIkNoYW5nZSBjdXJyZW50IGJsb2NrJ3MgZm9ybWF0IGFzIEgxXCIsZm9ybWF0SDI6XCJDaGFuZ2UgY3VycmVudCBibG9jaydzIGZvcm1hdCBhcyBIMlwiLGZvcm1hdEgzOlwiQ2hhbmdlIGN1cnJlbnQgYmxvY2sncyBmb3JtYXQgYXMgSDNcIixmb3JtYXRINDpcIkNoYW5nZSBjdXJyZW50IGJsb2NrJ3MgZm9ybWF0IGFzIEg0XCIsZm9ybWF0SDU6XCJDaGFuZ2UgY3VycmVudCBibG9jaydzIGZvcm1hdCBhcyBINVwiLGZvcm1hdEg2OlwiQ2hhbmdlIGN1cnJlbnQgYmxvY2sncyBmb3JtYXQgYXMgSDZcIixpbnNlcnRIb3Jpem9udGFsUnVsZTpcIkluc2VydCBob3Jpem9udGFsIHJ1bGVcIixcImxpbmtEaWFsb2cuc2hvd1wiOlwiU2hvdyBMaW5rIERpYWxvZ1wifSxoaXN0b3J5Ont1bmRvOlwiVW5kb1wiLHJlZG86XCJSZWRvXCJ9LHNwZWNpYWxDaGFyOntzcGVjaWFsQ2hhcjpcIlNQRUNJQUwgQ0hBUkFDVEVSU1wiLHNlbGVjdDpcIlNlbGVjdCBTcGVjaWFsIGNoYXJhY3RlcnNcIn0sb3V0cHV0Ontub1NlbGVjdGlvbjpcIk5vIFNlbGVjdGlvbiBNYWRlIVwifX19KX0sMTE0NTplPT57ZS5leHBvcnRzPXR9fSxuPXt9O2Z1bmN0aW9uIG8odCl7dmFyIGk9blt0XTtpZih2b2lkIDAhPT1pKXJldHVybiBpLmV4cG9ydHM7dmFyIHI9blt0XT17ZXhwb3J0czp7fX07cmV0dXJuIGVbdF0ocixyLmV4cG9ydHMsbyksci5leHBvcnRzfW8ubj10PT57dmFyIGU9dCYmdC5fX2VzTW9kdWxlPygpPT50LmRlZmF1bHQ6KCk9PnQ7cmV0dXJuIG8uZChlLHthOmV9KSxlfSxvLmQ9KHQsZSk9Pntmb3IodmFyIG4gaW4gZSlvLm8oZSxuKSYmIW8ubyh0LG4pJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxuLHtlbnVtZXJhYmxlOiEwLGdldDplW25dfSl9LG8ubz0odCxlKT0+T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSksby5yPXQ9PntcInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6XCJNb2R1bGVcIn0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pfTt2YXIgaT17fTtyZXR1cm4oKCk9PntvLnIoaSk7dmFyIHQ9bygxMTQ1KSxlPW8ubih0KSxuPShvKDk3NzApLFtcInNhbnMtc2VyaWZcIixcInNlcmlmXCIsXCJtb25vc3BhY2VcIixcImN1cnNpdmVcIixcImZhbnRhc3lcIl0pO2Z1bmN0aW9uIHIodCl7cmV0dXJuLTE9PT1lKCkuaW5BcnJheSh0LnRvTG93ZXJDYXNlKCksbik/XCInXCIuY29uY2F0KHQsXCInXCIpOnR9dmFyIGEscz1uYXZpZ2F0b3IudXNlckFnZW50LGw9L01TSUV8VHJpZGVudC9pLnRlc3Qocyk7aWYobCl7dmFyIGM9L01TSUUgKFxcZCtbLl1cXGQrKS8uZXhlYyhzKTtjJiYoYT1wYXJzZUZsb2F0KGNbMV0pKSwoYz0vVHJpZGVudFxcLy4qcnY6KFswLTldezEsfVsuMC05XXswLH0pLy5leGVjKHMpKSYmKGE9cGFyc2VGbG9hdChjWzFdKSl9dmFyIHU9L0VkZ2VcXC9cXGQrLy50ZXN0KHMpLGQ9XCJvbnRvdWNoc3RhcnRcImluIHdpbmRvd3x8bmF2aWdhdG9yLk1heFRvdWNoUG9pbnRzPjB8fG5hdmlnYXRvci5tc01heFRvdWNoUG9pbnRzPjAsaD1sP1wiRE9NQ2hhcmFjdGVyRGF0YU1vZGlmaWVkIERPTVN1YnRyZWVNb2RpZmllZCBET01Ob2RlSW5zZXJ0ZWRcIjpcImlucHV0XCI7Y29uc3QgZj17aXNNYWM6bmF2aWdhdG9yLmFwcFZlcnNpb24uaW5kZXhPZihcIk1hY1wiKT4tMSxpc01TSUU6bCxpc0VkZ2U6dSxpc0ZGOiF1JiYvZmlyZWZveC9pLnRlc3QocyksaXNQaGFudG9tOi9QaGFudG9tSlMvaS50ZXN0KHMpLGlzV2Via2l0OiF1JiYvd2Via2l0L2kudGVzdChzKSxpc0Nocm9tZTohdSYmL2Nocm9tZS9pLnRlc3QocyksaXNTYWZhcmk6IXUmJi9zYWZhcmkvaS50ZXN0KHMpJiYhL2Nocm9tZS9pLnRlc3QocyksYnJvd3NlclZlcnNpb246YSxpc1N1cHBvcnRUb3VjaDpkLGlzRm9udEluc3RhbGxlZDpmdW5jdGlvbih0KXt2YXIgZT1cIkNvbWljIFNhbnMgTVNcIj09PXQ/XCJDb3VyaWVyIE5ld1wiOlwiQ29taWMgU2FucyBNU1wiLG49XCJtbW1tbW1tbW1td3d3d3dcIixvPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJjYW52YXNcIikuZ2V0Q29udGV4dChcIjJkXCIpO28uZm9udD1cIjIwMHB4ICdcIitlK1wiJ1wiO3ZhciBpPW8ubWVhc3VyZVRleHQobikud2lkdGg7cmV0dXJuIG8uZm9udD1cIjIwMHB4IFwiK3IodCkrJywgXCInK2UrJ1wiJyxpIT09by5tZWFzdXJlVGV4dChuKS53aWR0aH0saXNXM0NSYW5nZVN1cHBvcnQ6ISFkb2N1bWVudC5jcmVhdGVSYW5nZSxpbnB1dEV2ZW50TmFtZTpoLGdlbmVyaWNGb250RmFtaWxpZXM6bix2YWxpZEZvbnROYW1lOnJ9O3ZhciBwPTA7Y29uc3QgbT17ZXE6ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiB0PT09ZX19LGVxMjpmdW5jdGlvbih0LGUpe3JldHVybiB0PT09ZX0scGVxMjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oZSxuKXtyZXR1cm4gZVt0XT09PW5bdF19fSxvazpmdW5jdGlvbigpe3JldHVybiEwfSxmYWlsOmZ1bmN0aW9uKCl7cmV0dXJuITF9LHNlbGY6ZnVuY3Rpb24odCl7cmV0dXJuIHR9LG5vdDpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4hdC5hcHBseSh0LGFyZ3VtZW50cyl9fSxhbmQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIHQobikmJmUobil9fSxpbnZva2U6ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdFtlXS5hcHBseSh0LGFyZ3VtZW50cyl9fSxyZXNldFVuaXF1ZUlkOmZ1bmN0aW9uKCl7cD0wfSx1bmlxdWVJZDpmdW5jdGlvbih0KXt2YXIgZT0rK3ArXCJcIjtyZXR1cm4gdD90K2U6ZX0scmVjdDJibmQ6ZnVuY3Rpb24odCl7dmFyIG49ZSgpKGRvY3VtZW50KTtyZXR1cm57dG9wOnQudG9wK24uc2Nyb2xsVG9wKCksbGVmdDp0LmxlZnQrbi5zY3JvbGxMZWZ0KCksd2lkdGg6dC5yaWdodC10LmxlZnQsaGVpZ2h0OnQuYm90dG9tLXQudG9wfX0saW52ZXJ0T2JqZWN0OmZ1bmN0aW9uKHQpe3ZhciBlPXt9O2Zvcih2YXIgbiBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LG4pJiYoZVt0W25dXT1uKTtyZXR1cm4gZX0sbmFtZXNwYWNlVG9DYW1lbDpmdW5jdGlvbih0LGUpe3JldHVybihlPWV8fFwiXCIpK3Quc3BsaXQoXCIuXCIpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHQuc3Vic3RyaW5nKDAsMSkudG9VcHBlckNhc2UoKSt0LnN1YnN0cmluZygxKX0pKS5qb2luKFwiXCIpfSxkZWJvdW5jZTpmdW5jdGlvbih0LGUsbil7dmFyIG87cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGk9dGhpcyxyPWFyZ3VtZW50cyxhPWZ1bmN0aW9uKCl7bz1udWxsLG58fHQuYXBwbHkoaSxyKX0scz1uJiYhbztjbGVhclRpbWVvdXQobyksbz1zZXRUaW1lb3V0KGEsZSkscyYmdC5hcHBseShpLHIpfX0saXNWYWxpZFVybDpmdW5jdGlvbih0KXtyZXR1cm4vWy1hLXpBLVowLTlAOiUuX1xcK34jPV17MiwyNTZ9XFwuW2Etel17Miw2fVxcYihbLWEtekEtWjAtOUA6JV9cXCsufiM/Ji8vPV0qKS9naS50ZXN0KHQpfX07ZnVuY3Rpb24gdih0KXtyZXR1cm4gdFswXX1mdW5jdGlvbiBnKHQpe3JldHVybiB0W3QubGVuZ3RoLTFdfWZ1bmN0aW9uIGIodCl7cmV0dXJuIHQuc2xpY2UoMSl9ZnVuY3Rpb24geSh0LGUpe2lmKHQmJnQubGVuZ3RoJiZlKXtpZih0LmluZGV4T2YpcmV0dXJuLTEhPT10LmluZGV4T2YoZSk7aWYodC5jb250YWlucylyZXR1cm4gdC5jb250YWlucyhlKX1yZXR1cm4hMX1jb25zdCBrPXtoZWFkOnYsbGFzdDpnLGluaXRpYWw6ZnVuY3Rpb24odCl7cmV0dXJuIHQuc2xpY2UoMCx0Lmxlbmd0aC0xKX0sdGFpbDpiLHByZXY6ZnVuY3Rpb24odCxlKXtpZih0JiZ0Lmxlbmd0aCYmZSl7dmFyIG49dC5pbmRleE9mKGUpO3JldHVybi0xPT09bj9udWxsOnRbbi0xXX1yZXR1cm4gbnVsbH0sbmV4dDpmdW5jdGlvbih0LGUpe2lmKHQmJnQubGVuZ3RoJiZlKXt2YXIgbj10LmluZGV4T2YoZSk7cmV0dXJuLTE9PT1uP251bGw6dFtuKzFdfXJldHVybiBudWxsfSxmaW5kOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAsbz10Lmxlbmd0aDtuPG87bisrKXt2YXIgaT10W25dO2lmKGUoaSkpcmV0dXJuIGl9fSxjb250YWluczp5LGFsbDpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wLG89dC5sZW5ndGg7bjxvO24rKylpZighZSh0W25dKSlyZXR1cm4hMTtyZXR1cm4hMH0sc3VtOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9ZXx8bS5zZWxmLHQucmVkdWNlKChmdW5jdGlvbih0LG4pe3JldHVybiB0K2Uobil9KSwwKX0sZnJvbTpmdW5jdGlvbih0KXtmb3IodmFyIGU9W10sbj10Lmxlbmd0aCxvPS0xOysrbzxuOyllW29dPXRbb107cmV0dXJuIGV9LGlzRW1wdHk6ZnVuY3Rpb24odCl7cmV0dXJuIXR8fCF0Lmxlbmd0aH0sY2x1c3RlckJ5OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQubGVuZ3RoP2IodCkucmVkdWNlKChmdW5jdGlvbih0LG4pe3ZhciBvPWcodCk7cmV0dXJuIGUoZyhvKSxuKT9vW28ubGVuZ3RoXT1uOnRbdC5sZW5ndGhdPVtuXSx0fSksW1t2KHQpXV0pOltdfSxjb21wYWN0OmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTAsbz10Lmxlbmd0aDtuPG87bisrKXRbbl0mJmUucHVzaCh0W25dKTtyZXR1cm4gZX0sdW5pcXVlOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTAsbz10Lmxlbmd0aDtuPG87bisrKXkoZSx0W25dKXx8ZS5wdXNoKHRbbl0pO3JldHVybiBlfX07dmFyIHc9U3RyaW5nLmZyb21DaGFyQ29kZSgxNjApO2Z1bmN0aW9uIEModCl7cmV0dXJuIHQmJmUoKSh0KS5oYXNDbGFzcyhcIm5vdGUtZWRpdGFibGVcIil9ZnVuY3Rpb24geCh0KXtyZXR1cm4gdD10LnRvVXBwZXJDYXNlKCksZnVuY3Rpb24oZSl7cmV0dXJuIGUmJmUubm9kZU5hbWUudG9VcHBlckNhc2UoKT09PXR9fWZ1bmN0aW9uIFModCl7cmV0dXJuIHQmJjM9PT10Lm5vZGVUeXBlfWZ1bmN0aW9uIFQodCl7cmV0dXJuIHQmJi9eQlJ8XklNR3xeSFJ8XklGUkFNRXxeQlVUVE9OfF5JTlBVVHxeQVVESU98XlZJREVPfF5FTUJFRC8udGVzdCh0Lm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkpfWZ1bmN0aW9uIEUodCl7cmV0dXJuIUModCkmJih0JiYvXkRJVnxeUHxeTEl8XkhbMS03XS8udGVzdCh0Lm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkpKX12YXIgST14KFwiUFJFXCIpLCQ9eChcIkxJXCIpO3ZhciBOPXgoXCJUQUJMRVwiKSxQPXgoXCJEQVRBXCIpO2Z1bmN0aW9uIFIodCl7cmV0dXJuIShIKHQpfHxMKHQpfHxBKHQpfHxFKHQpfHxOKHQpfHxEKHQpfHxQKHQpKX1mdW5jdGlvbiBMKHQpe3JldHVybiB0JiYvXlVMfF5PTC8udGVzdCh0Lm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkpfXZhciBBPXgoXCJIUlwiKTtmdW5jdGlvbiBGKHQpe3JldHVybiB0JiYvXlREfF5USC8udGVzdCh0Lm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkpfXZhciBEPXgoXCJCTE9DS1FVT1RFXCIpO2Z1bmN0aW9uIEgodCl7cmV0dXJuIEYodCl8fEQodCl8fEModCl9dmFyIHo9eChcIkFcIik7dmFyIEI9eChcIkJPRFlcIik7dmFyIE09Zi5pc01TSUUmJmYuYnJvd3NlclZlcnNpb248MTE/XCImbmJzcDtcIjpcIjxicj5cIjtmdW5jdGlvbiBPKHQpe3JldHVybiBTKHQpP3Qubm9kZVZhbHVlLmxlbmd0aDp0P3QuY2hpbGROb2Rlcy5sZW5ndGg6MH1mdW5jdGlvbiBVKHQpe3ZhciBlPU8odCk7cmV0dXJuIDA9PT1lfHwoIVModCkmJjE9PT1lJiZ0LmlubmVySFRNTD09PU18fCEoIWsuYWxsKHQuY2hpbGROb2RlcyxTKXx8XCJcIiE9PXQuaW5uZXJIVE1MKSl9ZnVuY3Rpb24gaih0KXtUKHQpfHxPKHQpfHwodC5pbm5lckhUTUw9TSl9ZnVuY3Rpb24gVyh0LGUpe2Zvcig7dDspe2lmKGUodCkpcmV0dXJuIHQ7aWYoQyh0KSlicmVhazt0PXQucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBLKHQsZSl7ZT1lfHxtLmZhaWw7dmFyIG49W107cmV0dXJuIFcodCwoZnVuY3Rpb24odCl7cmV0dXJuIEModCl8fG4ucHVzaCh0KSxlKHQpfSkpLG59ZnVuY3Rpb24gVih0LGUpe2U9ZXx8bS5mYWlsO2Zvcih2YXIgbj1bXTt0JiYhZSh0KTspbi5wdXNoKHQpLHQ9dC5uZXh0U2libGluZztyZXR1cm4gbn1mdW5jdGlvbiBxKHQsZSl7dmFyIG49ZS5uZXh0U2libGluZyxvPWUucGFyZW50Tm9kZTtyZXR1cm4gbj9vLmluc2VydEJlZm9yZSh0LG4pOm8uYXBwZW5kQ2hpbGQodCksdH1mdW5jdGlvbiBfKHQsbil7cmV0dXJuIGUoKS5lYWNoKG4sKGZ1bmN0aW9uKGUsbil7dC5hcHBlbmRDaGlsZChuKX0pKSx0fWZ1bmN0aW9uIEcodCl7cmV0dXJuIDA9PT10Lm9mZnNldH1mdW5jdGlvbiBZKHQpe3JldHVybiB0Lm9mZnNldD09PU8odC5ub2RlKX1mdW5jdGlvbiBaKHQpe3JldHVybiBHKHQpfHxZKHQpfWZ1bmN0aW9uIFEodCxlKXtmb3IoO3QmJnQhPT1lOyl7aWYoMCE9PUoodCkpcmV0dXJuITE7dD10LnBhcmVudE5vZGV9cmV0dXJuITB9ZnVuY3Rpb24gWCh0LGUpe2lmKCFlKXJldHVybiExO2Zvcig7dCYmdCE9PWU7KXtpZihKKHQpIT09Tyh0LnBhcmVudE5vZGUpLTEpcmV0dXJuITE7dD10LnBhcmVudE5vZGV9cmV0dXJuITB9ZnVuY3Rpb24gSih0KXtmb3IodmFyIGU9MDt0PXQucHJldmlvdXNTaWJsaW5nOyllKz0xO3JldHVybiBlfWZ1bmN0aW9uIHR0KHQpe3JldHVybiEhKHQmJnQuY2hpbGROb2RlcyYmdC5jaGlsZE5vZGVzLmxlbmd0aCl9ZnVuY3Rpb24gZXQodCxlKXt2YXIgbixvO2lmKDA9PT10Lm9mZnNldCl7aWYoQyh0Lm5vZGUpKXJldHVybiBudWxsO249dC5ub2RlLnBhcmVudE5vZGUsbz1KKHQubm9kZSl9ZWxzZSB0dCh0Lm5vZGUpP289TyhuPXQubm9kZS5jaGlsZE5vZGVzW3Qub2Zmc2V0LTFdKToobj10Lm5vZGUsbz1lPzA6dC5vZmZzZXQtMSk7cmV0dXJue25vZGU6bixvZmZzZXQ6b319ZnVuY3Rpb24gbnQodCxlKXt2YXIgbixvO2lmKE8odC5ub2RlKT09PXQub2Zmc2V0KXtpZihDKHQubm9kZSkpcmV0dXJuIG51bGw7dmFyIGk9aXQodC5ub2RlKTtpPyhuPWksbz0wKToobj10Lm5vZGUucGFyZW50Tm9kZSxvPUoodC5ub2RlKSsxKX1lbHNlIHR0KHQubm9kZSk/KG49dC5ub2RlLmNoaWxkTm9kZXNbdC5vZmZzZXRdLG89MCk6KG49dC5ub2RlLG89ZT9PKHQubm9kZSk6dC5vZmZzZXQrMSk7cmV0dXJue25vZGU6bixvZmZzZXQ6b319ZnVuY3Rpb24gb3QodCxlKXt2YXIgbixvPTA7aWYoVSh0Lm5vZGUpKXJldHVybiBudWxsPT09dC5ub2RlP251bGw6e25vZGU6bj10Lm5vZGUubmV4dFNpYmxpbmcsb2Zmc2V0Om89MH07aWYoTyh0Lm5vZGUpPT09dC5vZmZzZXQpe2lmKEModC5ub2RlKSlyZXR1cm4gbnVsbDtuPXQubm9kZS5wYXJlbnROb2RlLG89Sih0Lm5vZGUpKzEsQyhuKSYmKG49dC5ub2RlLm5leHRTaWJsaW5nLG89MCl9ZWxzZSBpZih0dCh0Lm5vZGUpKXtpZihvPTAsVShuPXQubm9kZS5jaGlsZE5vZGVzW3Qub2Zmc2V0XSkpcmV0dXJuIFUodC5ub2RlLm5leHRTaWJsaW5nKT9udWxsOntub2RlOnQubm9kZS5uZXh0U2libGluZyxvZmZzZXQ6b319ZWxzZSBpZihuPXQubm9kZSxvPWU/Tyh0Lm5vZGUpOnQub2Zmc2V0KzEsVShuKSlyZXR1cm4gbnVsbDtyZXR1cm57bm9kZTpuLG9mZnNldDpvfX1mdW5jdGlvbiBpdCh0KXtpZih0Lm5leHRTaWJsaW5nJiZ0LnBhcmVudD09PXQubmV4dFNpYmxpbmcucGFyZW50KXJldHVybiBTKHQubmV4dFNpYmxpbmcpP3QubmV4dFNpYmxpbmc6aXQodC5uZXh0U2libGluZyl9ZnVuY3Rpb24gcnQodCxlKXtyZXR1cm4gdC5ub2RlPT09ZS5ub2RlJiZ0Lm9mZnNldD09PWUub2Zmc2V0fWZ1bmN0aW9uIGF0KHQsZSl7dmFyIG49ZSYmZS5pc1NraXBQYWRkaW5nQmxhbmtIVE1MLG89ZSYmZS5pc05vdFNwbGl0RWRnZVBvaW50LGk9ZSYmZS5pc0Rpc2NhcmRFbXB0eVNwbGl0cztpZihpJiYobj0hMCksWih0KSYmKFModC5ub2RlKXx8bykpe2lmKEcodCkpcmV0dXJuIHQubm9kZTtpZihZKHQpKXJldHVybiB0Lm5vZGUubmV4dFNpYmxpbmd9aWYoUyh0Lm5vZGUpKXJldHVybiB0Lm5vZGUuc3BsaXRUZXh0KHQub2Zmc2V0KTt2YXIgcj10Lm5vZGUuY2hpbGROb2Rlc1t0Lm9mZnNldF0sYT1xKHQubm9kZS5jbG9uZU5vZGUoITEpLHQubm9kZSk7cmV0dXJuIF8oYSxWKHIpKSxufHwoaih0Lm5vZGUpLGooYSkpLGkmJihVKHQubm9kZSkmJmN0KHQubm9kZSksVShhKSk/KGN0KGEpLHQubm9kZS5uZXh0U2libGluZyk6YX1mdW5jdGlvbiBzdCh0LGUsbil7dmFyIG89SyhlLm5vZGUsbS5lcSh0KSk7cmV0dXJuIG8ubGVuZ3RoPzE9PT1vLmxlbmd0aD9hdChlLG4pOm8ucmVkdWNlKChmdW5jdGlvbih0LG8pe3JldHVybiB0PT09ZS5ub2RlJiYodD1hdChlLG4pKSxhdCh7bm9kZTpvLG9mZnNldDp0P0oodCk6TyhvKX0sbil9KSk6bnVsbH1mdW5jdGlvbiBsdCh0KXtyZXR1cm4gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCh0KX1mdW5jdGlvbiBjdCh0LGUpe2lmKHQmJnQucGFyZW50Tm9kZSl7aWYodC5yZW1vdmVOb2RlKXJldHVybiB0LnJlbW92ZU5vZGUoZSk7dmFyIG49dC5wYXJlbnROb2RlO2lmKCFlKXtmb3IodmFyIG89W10saT0wLHI9dC5jaGlsZE5vZGVzLmxlbmd0aDtpPHI7aSsrKW8ucHVzaCh0LmNoaWxkTm9kZXNbaV0pO2Zvcih2YXIgYT0wLHM9by5sZW5ndGg7YTxzO2ErKyluLmluc2VydEJlZm9yZShvW2FdLHQpfW4ucmVtb3ZlQ2hpbGQodCl9fXZhciB1dD14KFwiVEVYVEFSRUFcIik7ZnVuY3Rpb24gZHQodCxlKXt2YXIgbj11dCh0WzBdKT90LnZhbCgpOnQuaHRtbCgpO3JldHVybiBlP24ucmVwbGFjZSgvW1xcblxccl0vZyxcIlwiKTpufWNvbnN0IGh0PXtOQlNQX0NIQVI6dyxaRVJPX1dJRFRIX05CU1BfQ0hBUjpcIlxcdWZlZmZcIixibGFuazpNLGVtcHR5UGFyYTpcIjxwPlwiLmNvbmNhdChNLFwiPC9wPlwiKSxtYWtlUHJlZEJ5Tm9kZU5hbWU6eCxpc0VkaXRhYmxlOkMsaXNDb250cm9sU2l6aW5nOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZlKCkodCkuaGFzQ2xhc3MoXCJub3RlLWNvbnRyb2wtc2l6aW5nXCIpfSxpc1RleHQ6Uyxpc0VsZW1lbnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJjE9PT10Lm5vZGVUeXBlfSxpc1ZvaWQ6VCxpc1BhcmE6RSxpc1B1cmVQYXJhOmZ1bmN0aW9uKHQpe3JldHVybiBFKHQpJiYhJCh0KX0saXNIZWFkaW5nOmZ1bmN0aW9uKHQpe3JldHVybiB0JiYvXkhbMS03XS8udGVzdCh0Lm5vZGVOYW1lLnRvVXBwZXJDYXNlKCkpfSxpc0lubGluZTpSLGlzQmxvY2s6bS5ub3QoUiksaXNCb2R5SW5saW5lOmZ1bmN0aW9uKHQpe3JldHVybiBSKHQpJiYhVyh0LEUpfSxpc0JvZHk6Qixpc1BhcmFJbmxpbmU6ZnVuY3Rpb24odCl7cmV0dXJuIFIodCkmJiEhVyh0LEUpfSxpc1ByZTpJLGlzTGlzdDpMLGlzVGFibGU6Tixpc0RhdGE6UCxpc0NlbGw6Rixpc0Jsb2NrcXVvdGU6RCxpc0JvZHlDb250YWluZXI6SCxpc0FuY2hvcjp6LGlzRGl2OngoXCJESVZcIiksaXNMaTokLGlzQlI6eChcIkJSXCIpLGlzU3Bhbjp4KFwiU1BBTlwiKSxpc0I6eChcIkJcIiksaXNVOngoXCJVXCIpLGlzUzp4KFwiU1wiKSxpc0k6eChcIklcIiksaXNJbWc6eChcIklNR1wiKSxpc1RleHRhcmVhOnV0LGRlZXBlc3RDaGlsZElzRW1wdHk6ZnVuY3Rpb24odCl7ZG97aWYobnVsbD09PXQuZmlyc3RFbGVtZW50Q2hpbGR8fFwiXCI9PT10LmZpcnN0RWxlbWVudENoaWxkLmlubmVySFRNTClicmVha313aGlsZSh0PXQuZmlyc3RFbGVtZW50Q2hpbGQpO3JldHVybiBVKHQpfSxpc0VtcHR5OlUsaXNFbXB0eUFuY2hvcjptLmFuZCh6LFUpLGlzQ2xvc2VzdFNpYmxpbmc6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5uZXh0U2libGluZz09PWV8fHQucHJldmlvdXNTaWJsaW5nPT09ZX0sd2l0aENsb3Nlc3RTaWJsaW5nczpmdW5jdGlvbih0LGUpe2U9ZXx8bS5vazt2YXIgbj1bXTtyZXR1cm4gdC5wcmV2aW91c1NpYmxpbmcmJmUodC5wcmV2aW91c1NpYmxpbmcpJiZuLnB1c2godC5wcmV2aW91c1NpYmxpbmcpLG4ucHVzaCh0KSx0Lm5leHRTaWJsaW5nJiZlKHQubmV4dFNpYmxpbmcpJiZuLnB1c2godC5uZXh0U2libGluZyksbn0sbm9kZUxlbmd0aDpPLGlzTGVmdEVkZ2VQb2ludDpHLGlzUmlnaHRFZGdlUG9pbnQ6WSxpc0VkZ2VQb2ludDpaLGlzTGVmdEVkZ2VPZjpRLGlzUmlnaHRFZGdlT2Y6WCxpc0xlZnRFZGdlUG9pbnRPZjpmdW5jdGlvbih0LGUpe3JldHVybiBHKHQpJiZRKHQubm9kZSxlKX0saXNSaWdodEVkZ2VQb2ludE9mOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIFkodCkmJlgodC5ub2RlLGUpfSxwcmV2UG9pbnQ6ZXQsbmV4dFBvaW50Om50LG5leHRQb2ludFdpdGhFbXB0eU5vZGU6b3QsaXNTYW1lUG9pbnQ6cnQsaXNWaXNpYmxlUG9pbnQ6ZnVuY3Rpb24odCl7aWYoUyh0Lm5vZGUpfHwhdHQodC5ub2RlKXx8VSh0Lm5vZGUpKXJldHVybiEwO3ZhciBlPXQubm9kZS5jaGlsZE5vZGVzW3Qub2Zmc2V0LTFdLG49dC5ub2RlLmNoaWxkTm9kZXNbdC5vZmZzZXRdO3JldHVybiEoKGUmJiFUKGUpfHxuJiYhVChuKSkmJiFOKG4pKX0scHJldlBvaW50VW50aWw6ZnVuY3Rpb24odCxlKXtmb3IoO3Q7KXtpZihlKHQpKXJldHVybiB0O3Q9ZXQodCl9cmV0dXJuIG51bGx9LG5leHRQb2ludFVudGlsOmZ1bmN0aW9uKHQsZSl7Zm9yKDt0Oyl7aWYoZSh0KSlyZXR1cm4gdDt0PW50KHQpfXJldHVybiBudWxsfSxpc0NoYXJQb2ludDpmdW5jdGlvbih0KXtpZighUyh0Lm5vZGUpKXJldHVybiExO3ZhciBlPXQubm9kZS5ub2RlVmFsdWUuY2hhckF0KHQub2Zmc2V0LTEpO3JldHVybiBlJiZcIiBcIiE9PWUmJmUhPT13fSxpc1NwYWNlUG9pbnQ6ZnVuY3Rpb24odCl7aWYoIVModC5ub2RlKSlyZXR1cm4hMTt2YXIgZT10Lm5vZGUubm9kZVZhbHVlLmNoYXJBdCh0Lm9mZnNldC0xKTtyZXR1cm5cIiBcIj09PWV8fGU9PT13fSx3YWxrUG9pbnQ6ZnVuY3Rpb24odCxlLG4sbyl7Zm9yKHZhciBpPXQ7aSYmKG4oaSksIXJ0KGksZSkpOyl7aT1vdChpLG8mJnQubm9kZSE9PWkubm9kZSYmZS5ub2RlIT09aS5ub2RlKX19LGFuY2VzdG9yOlcsc2luZ2xlQ2hpbGRBbmNlc3RvcjpmdW5jdGlvbih0LGUpe2Zvcih0PXQucGFyZW50Tm9kZTt0JiYxPT09Tyh0KTspe2lmKGUodCkpcmV0dXJuIHQ7aWYoQyh0KSlicmVhazt0PXQucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH0sbGlzdEFuY2VzdG9yOkssbGFzdEFuY2VzdG9yOmZ1bmN0aW9uKHQsZSl7dmFyIG49Syh0KTtyZXR1cm4gay5sYXN0KG4uZmlsdGVyKGUpKX0sbGlzdE5leHQ6VixsaXN0UHJldjpmdW5jdGlvbih0LGUpe2U9ZXx8bS5mYWlsO2Zvcih2YXIgbj1bXTt0JiYhZSh0KTspbi5wdXNoKHQpLHQ9dC5wcmV2aW91c1NpYmxpbmc7cmV0dXJuIG59LGxpc3REZXNjZW5kYW50OmZ1bmN0aW9uKHQsZSl7dmFyIG49W107cmV0dXJuIGU9ZXx8bS5vayxmdW5jdGlvbiBvKGkpe3QhPT1pJiZlKGkpJiZuLnB1c2goaSk7Zm9yKHZhciByPTAsYT1pLmNoaWxkTm9kZXMubGVuZ3RoO3I8YTtyKyspbyhpLmNoaWxkTm9kZXNbcl0pfSh0KSxufSxjb21tb25BbmNlc3RvcjpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1LKHQpLG89ZTtvO289by5wYXJlbnROb2RlKWlmKG4uaW5kZXhPZihvKT4tMSlyZXR1cm4gbztyZXR1cm4gbnVsbH0sd3JhcDpmdW5jdGlvbih0LG4pe3ZhciBvPXQucGFyZW50Tm9kZSxpPWUoKShcIjxcIituK1wiPlwiKVswXTtyZXR1cm4gby5pbnNlcnRCZWZvcmUoaSx0KSxpLmFwcGVuZENoaWxkKHQpLGl9LGluc2VydEFmdGVyOnEsYXBwZW5kQ2hpbGROb2RlczpfLHBvc2l0aW9uOkosaGFzQ2hpbGRyZW46dHQsbWFrZU9mZnNldFBhdGg6ZnVuY3Rpb24odCxlKXtyZXR1cm4gSyhlLG0uZXEodCkpLm1hcChKKS5yZXZlcnNlKCl9LGZyb21PZmZzZXRQYXRoOmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXQsbz0wLGk9ZS5sZW5ndGg7bzxpO28rKyluPW4uY2hpbGROb2Rlcy5sZW5ndGg8PWVbb10/bi5jaGlsZE5vZGVzW24uY2hpbGROb2Rlcy5sZW5ndGgtMV06bi5jaGlsZE5vZGVzW2Vbb11dO3JldHVybiBufSxzcGxpdFRyZWU6c3Qsc3BsaXRQb2ludDpmdW5jdGlvbih0LGUpe3ZhciBuLG8saT1lP0U6SCxyPUsodC5ub2RlLGkpLGE9ay5sYXN0KHIpfHx0Lm5vZGU7aShhKT8obj1yW3IubGVuZ3RoLTJdLG89YSk6bz0obj1hKS5wYXJlbnROb2RlO3ZhciBzPW4mJnN0KG4sdCx7aXNTa2lwUGFkZGluZ0JsYW5rSFRNTDplLGlzTm90U3BsaXRFZGdlUG9pbnQ6ZX0pO3JldHVybiBzfHxvIT09dC5ub2RlfHwocz10Lm5vZGUuY2hpbGROb2Rlc1t0Lm9mZnNldF0pLHtyaWdodE5vZGU6cyxjb250YWluZXI6b319LGNyZWF0ZTpsdCxjcmVhdGVUZXh0OmZ1bmN0aW9uKHQpe3JldHVybiBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0KX0scmVtb3ZlOmN0LHJlbW92ZVdoaWxlOmZ1bmN0aW9uKHQsZSl7Zm9yKDt0JiYhQyh0KSYmZSh0KTspe3ZhciBuPXQucGFyZW50Tm9kZTtjdCh0KSx0PW59fSxyZXBsYWNlOmZ1bmN0aW9uKHQsZSl7aWYodC5ub2RlTmFtZS50b1VwcGVyQ2FzZSgpPT09ZS50b1VwcGVyQ2FzZSgpKXJldHVybiB0O3ZhciBuPWx0KGUpO3JldHVybiB0LnN0eWxlLmNzc1RleHQmJihuLnN0eWxlLmNzc1RleHQ9dC5zdHlsZS5jc3NUZXh0KSxfKG4say5mcm9tKHQuY2hpbGROb2RlcykpLHEobix0KSxjdCh0KSxufSxodG1sOmZ1bmN0aW9uKHQsZSl7dmFyIG49ZHQodCk7aWYoZSl7bj0obj1uLnJlcGxhY2UoLzwoXFwvPykoXFxiKD8hISlbXj5cXHNdKikoLio/KShcXHMqXFwvPz4pL2csKGZ1bmN0aW9uKHQsZSxuKXtuPW4udG9VcHBlckNhc2UoKTt2YXIgbz0vXkRJVnxeVER8XlRIfF5QfF5MSXxeSFsxLTddLy50ZXN0KG4pJiYhIWUsaT0vXkJMT0NLUVVPVEV8XlRBQkxFfF5UQk9EWXxeVFJ8XkhSfF5VTHxeT0wvLnRlc3Qobik7cmV0dXJuIHQrKG98fGk/XCJcXG5cIjpcIlwiKX0pKSkudHJpbSgpfXJldHVybiBufSx2YWx1ZTpkdCxwb3NGcm9tUGxhY2Vob2xkZXI6ZnVuY3Rpb24odCl7dmFyIG49ZSgpKHQpLG89bi5vZmZzZXQoKSxpPW4ub3V0ZXJIZWlnaHQoITApO3JldHVybntsZWZ0Om8ubGVmdCx0b3A6by50b3AraX19LGF0dGFjaEV2ZW50czpmdW5jdGlvbih0LGUpe09iamVjdC5rZXlzKGUpLmZvckVhY2goKGZ1bmN0aW9uKG4pe3Qub24obixlW25dKX0pKX0sZGV0YWNoRXZlbnRzOmZ1bmN0aW9uKHQsZSl7T2JqZWN0LmtleXMoZSkuZm9yRWFjaCgoZnVuY3Rpb24obil7dC5vZmYobixlW25dKX0pKX0saXNDdXN0b21TdHlsZVRhZzpmdW5jdGlvbih0KXtyZXR1cm4gdCYmIVModCkmJmsuY29udGFpbnModC5jbGFzc0xpc3QsXCJub3RlLXN0eWxldGFnXCIpfX07ZnVuY3Rpb24gZnQodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fXZhciBwdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQobixvKXshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLHRoaXMuJG5vdGU9bix0aGlzLm1lbW9zPXt9LHRoaXMubW9kdWxlcz17fSx0aGlzLmxheW91dEluZm89e30sdGhpcy5vcHRpb25zPWUoKS5leHRlbmQoITAse30sbyksZSgpLnN1bW1lcm5vdGUudWk9ZSgpLnN1bW1lcm5vdGUudWlfdGVtcGxhdGUodGhpcy5vcHRpb25zKSx0aGlzLnVpPWUoKS5zdW1tZXJub3RlLnVpLHRoaXMuaW5pdGlhbGl6ZSgpfXZhciBuLG8saTtyZXR1cm4gbj10LG89W3trZXk6XCJpbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sYXlvdXRJbmZvPXRoaXMudWkuY3JlYXRlTGF5b3V0KHRoaXMuJG5vdGUpLHRoaXMuX2luaXRpYWxpemUoKSx0aGlzLiRub3RlLmhpZGUoKSx0aGlzfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuX2Rlc3Ryb3koKSx0aGlzLiRub3RlLnJlbW92ZURhdGEoXCJzdW1tZXJub3RlXCIpLHRoaXMudWkucmVtb3ZlTGF5b3V0KHRoaXMuJG5vdGUsdGhpcy5sYXlvdXRJbmZvKX19LHtrZXk6XCJyZXNldFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5pc0Rpc2FibGVkKCk7dGhpcy5jb2RlKGh0LmVtcHR5UGFyYSksdGhpcy5fZGVzdHJveSgpLHRoaXMuX2luaXRpYWxpemUoKSx0JiZ0aGlzLmRpc2FibGUoKX19LHtrZXk6XCJfaW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLm9wdGlvbnMuaWQ9bS51bmlxdWVJZChlKCkubm93KCkpLHRoaXMub3B0aW9ucy5jb250YWluZXI9dGhpcy5vcHRpb25zLmNvbnRhaW5lcnx8dGhpcy5sYXlvdXRJbmZvLmVkaXRvcjt2YXIgbj1lKCkuZXh0ZW5kKHt9LHRoaXMub3B0aW9ucy5idXR0b25zKTtPYmplY3Qua2V5cyhuKS5mb3JFYWNoKChmdW5jdGlvbihlKXt0Lm1lbW8oXCJidXR0b24uXCIrZSxuW2VdKX0pKTt2YXIgbz1lKCkuZXh0ZW5kKHt9LHRoaXMub3B0aW9ucy5tb2R1bGVzLGUoKS5zdW1tZXJub3RlLnBsdWdpbnN8fHt9KTtPYmplY3Qua2V5cyhvKS5mb3JFYWNoKChmdW5jdGlvbihlKXt0Lm1vZHVsZShlLG9bZV0sITApfSkpLE9iamVjdC5rZXlzKHRoaXMubW9kdWxlcykuZm9yRWFjaCgoZnVuY3Rpb24oZSl7dC5pbml0aWFsaXplTW9kdWxlKGUpfSkpfX0se2tleTpcIl9kZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO09iamVjdC5rZXlzKHRoaXMubW9kdWxlcykucmV2ZXJzZSgpLmZvckVhY2goKGZ1bmN0aW9uKGUpe3QucmVtb3ZlTW9kdWxlKGUpfSkpLE9iamVjdC5rZXlzKHRoaXMubWVtb3MpLmZvckVhY2goKGZ1bmN0aW9uKGUpe3QucmVtb3ZlTWVtbyhlKX0pKSx0aGlzLnRyaWdnZXJFdmVudChcImRlc3Ryb3lcIix0aGlzKX19LHtrZXk6XCJjb2RlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pbnZva2UoXCJjb2Rldmlldy5pc0FjdGl2YXRlZFwiKTtpZih2b2lkIDA9PT10KXJldHVybiB0aGlzLmludm9rZShcImNvZGV2aWV3LnN5bmNcIiksZT90aGlzLmxheW91dEluZm8uY29kYWJsZS52YWwoKTp0aGlzLmxheW91dEluZm8uZWRpdGFibGUuaHRtbCgpO2U/dGhpcy5pbnZva2UoXCJjb2Rldmlldy5zeW5jXCIsdCk6dGhpcy5sYXlvdXRJbmZvLmVkaXRhYmxlLmh0bWwodCksdGhpcy4kbm90ZS52YWwodCksdGhpcy50cmlnZ2VyRXZlbnQoXCJjaGFuZ2VcIix0LHRoaXMubGF5b3V0SW5mby5lZGl0YWJsZSl9fSx7a2V5OlwiaXNEaXNhYmxlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuXCJmYWxzZVwiPT09dGhpcy5sYXlvdXRJbmZvLmVkaXRhYmxlLmF0dHIoXCJjb250ZW50ZWRpdGFibGVcIil9fSx7a2V5OlwiZW5hYmxlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmxheW91dEluZm8uZWRpdGFibGUuYXR0cihcImNvbnRlbnRlZGl0YWJsZVwiLCEwKSx0aGlzLmludm9rZShcInRvb2xiYXIuYWN0aXZhdGVcIiwhMCksdGhpcy50cmlnZ2VyRXZlbnQoXCJkaXNhYmxlXCIsITEpLHRoaXMub3B0aW9ucy5lZGl0aW5nPSEwfX0se2tleTpcImRpc2FibGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaW52b2tlKFwiY29kZXZpZXcuaXNBY3RpdmF0ZWRcIikmJnRoaXMuaW52b2tlKFwiY29kZXZpZXcuZGVhY3RpdmF0ZVwiKSx0aGlzLmxheW91dEluZm8uZWRpdGFibGUuYXR0cihcImNvbnRlbnRlZGl0YWJsZVwiLCExKSx0aGlzLm9wdGlvbnMuZWRpdGluZz0hMSx0aGlzLmludm9rZShcInRvb2xiYXIuZGVhY3RpdmF0ZVwiLCEwKSx0aGlzLnRyaWdnZXJFdmVudChcImRpc2FibGVcIiwhMCl9fSx7a2V5OlwidHJpZ2dlckV2ZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1rLmhlYWQoYXJndW1lbnRzKSxlPWsudGFpbChrLmZyb20oYXJndW1lbnRzKSksbj10aGlzLm9wdGlvbnMuY2FsbGJhY2tzW20ubmFtZXNwYWNlVG9DYW1lbCh0LFwib25cIildO24mJm4uYXBwbHkodGhpcy4kbm90ZVswXSxlKSx0aGlzLiRub3RlLnRyaWdnZXIoXCJzdW1tZXJub3RlLlwiK3QsZSl9fSx7a2V5OlwiaW5pdGlhbGl6ZU1vZHVsZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubW9kdWxlc1t0XTtlLnNob3VsZEluaXRpYWxpemU9ZS5zaG91bGRJbml0aWFsaXplfHxtLm9rLGUuc2hvdWxkSW5pdGlhbGl6ZSgpJiYoZS5pbml0aWFsaXplJiZlLmluaXRpYWxpemUoKSxlLmV2ZW50cyYmaHQuYXR0YWNoRXZlbnRzKHRoaXMuJG5vdGUsZS5ldmVudHMpKX19LHtrZXk6XCJtb2R1bGVcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7aWYoMT09PWFyZ3VtZW50cy5sZW5ndGgpcmV0dXJuIHRoaXMubW9kdWxlc1t0XTt0aGlzLm1vZHVsZXNbdF09bmV3IGUodGhpcyksbnx8dGhpcy5pbml0aWFsaXplTW9kdWxlKHQpfX0se2tleTpcInJlbW92ZU1vZHVsZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubW9kdWxlc1t0XTtlLnNob3VsZEluaXRpYWxpemUoKSYmKGUuZXZlbnRzJiZodC5kZXRhY2hFdmVudHModGhpcy4kbm90ZSxlLmV2ZW50cyksZS5kZXN0cm95JiZlLmRlc3Ryb3koKSksZGVsZXRlIHRoaXMubW9kdWxlc1t0XX19LHtrZXk6XCJtZW1vXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtpZigxPT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gdGhpcy5tZW1vc1t0XTt0aGlzLm1lbW9zW3RdPWV9fSx7a2V5OlwicmVtb3ZlTWVtb1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMubWVtb3NbdF0mJnRoaXMubWVtb3NbdF0uZGVzdHJveSYmdGhpcy5tZW1vc1t0XS5kZXN0cm95KCksZGVsZXRlIHRoaXMubWVtb3NbdF19fSx7a2V5OlwiY3JlYXRlSW52b2tlSGFuZGxlckFuZFVwZGF0ZVN0YXRlXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBmdW5jdGlvbihvKXtuLmNyZWF0ZUludm9rZUhhbmRsZXIodCxlKShvKSxuLmludm9rZShcImJ1dHRvbnMudXBkYXRlQ3VycmVudFN0eWxlXCIpfX19LHtrZXk6XCJjcmVhdGVJbnZva2VIYW5kbGVyXCIsdmFsdWU6ZnVuY3Rpb24odCxuKXt2YXIgbz10aGlzO3JldHVybiBmdW5jdGlvbihpKXtpLnByZXZlbnREZWZhdWx0KCk7dmFyIHI9ZSgpKGkudGFyZ2V0KTtvLmludm9rZSh0LG58fHIuY2xvc2VzdChcIltkYXRhLXZhbHVlXVwiKS5kYXRhKFwidmFsdWVcIikscil9fX0se2tleTpcImludm9rZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9ay5oZWFkKGFyZ3VtZW50cyksZT1rLnRhaWwoay5mcm9tKGFyZ3VtZW50cykpLG49dC5zcGxpdChcIi5cIiksbz1uLmxlbmd0aD4xLGk9byYmay5oZWFkKG4pLHI9bz9rLmxhc3Qobik6ay5oZWFkKG4pLGE9dGhpcy5tb2R1bGVzW2l8fFwiZWRpdG9yXCJdO3JldHVybiFpJiZ0aGlzW3JdP3RoaXNbcl0uYXBwbHkodGhpcyxlKTphJiZhW3JdJiZhLnNob3VsZEluaXRpYWxpemUoKT9hW3JdLmFwcGx5KGEsZSk6dm9pZCAwfX1dLG8mJmZ0KG4ucHJvdG90eXBlLG8pLGkmJmZ0KG4saSksdH0oKTtmdW5jdGlvbiBtdCh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19ZnVuY3Rpb24gdnQodCxlKXt2YXIgbixvLGk9dC5wYXJlbnRFbGVtZW50KCkscj1kb2N1bWVudC5ib2R5LmNyZWF0ZVRleHRSYW5nZSgpLGE9ay5mcm9tKGkuY2hpbGROb2Rlcyk7Zm9yKG49MDtuPGEubGVuZ3RoO24rKylpZighaHQuaXNUZXh0KGFbbl0pKXtpZihyLm1vdmVUb0VsZW1lbnRUZXh0KGFbbl0pLHIuY29tcGFyZUVuZFBvaW50cyhcIlN0YXJ0VG9TdGFydFwiLHQpPj0wKWJyZWFrO289YVtuXX1pZigwIT09biYmaHQuaXNUZXh0KGFbbi0xXSkpe3ZhciBzPWRvY3VtZW50LmJvZHkuY3JlYXRlVGV4dFJhbmdlKCksbD1udWxsO3MubW92ZVRvRWxlbWVudFRleHQob3x8aSkscy5jb2xsYXBzZSghbyksbD1vP28ubmV4dFNpYmxpbmc6aS5maXJzdENoaWxkO3ZhciBjPXQuZHVwbGljYXRlKCk7Yy5zZXRFbmRQb2ludChcIlN0YXJ0VG9TdGFydFwiLHMpO2Zvcih2YXIgdT1jLnRleHQucmVwbGFjZSgvW1xcclxcbl0vZyxcIlwiKS5sZW5ndGg7dT5sLm5vZGVWYWx1ZS5sZW5ndGgmJmwubmV4dFNpYmxpbmc7KXUtPWwubm9kZVZhbHVlLmxlbmd0aCxsPWwubmV4dFNpYmxpbmc7bC5ub2RlVmFsdWU7ZSYmbC5uZXh0U2libGluZyYmaHQuaXNUZXh0KGwubmV4dFNpYmxpbmcpJiZ1PT09bC5ub2RlVmFsdWUubGVuZ3RoJiYodS09bC5ub2RlVmFsdWUubGVuZ3RoLGw9bC5uZXh0U2libGluZyksaT1sLG49dX1yZXR1cm57Y29udDppLG9mZnNldDpufX1mdW5jdGlvbiBndCh0KXt2YXIgZT1kb2N1bWVudC5ib2R5LmNyZWF0ZVRleHRSYW5nZSgpLG49ZnVuY3Rpb24gdChlLG4pe3ZhciBvLGk7aWYoaHQuaXNUZXh0KGUpKXt2YXIgcj1odC5saXN0UHJldihlLG0ubm90KGh0LmlzVGV4dCkpLGE9ay5sYXN0KHIpLnByZXZpb3VzU2libGluZztvPWF8fGUucGFyZW50Tm9kZSxuKz1rLnN1bShrLnRhaWwociksaHQubm9kZUxlbmd0aCksaT0hYX1lbHNle2lmKG89ZS5jaGlsZE5vZGVzW25dfHxlLGh0LmlzVGV4dChvKSlyZXR1cm4gdChvLDApO249MCxpPSExfXJldHVybntub2RlOm8sY29sbGFwc2VUb1N0YXJ0Omksb2Zmc2V0Om59fSh0Lm5vZGUsdC5vZmZzZXQpO3JldHVybiBlLm1vdmVUb0VsZW1lbnRUZXh0KG4ubm9kZSksZS5jb2xsYXBzZShuLmNvbGxhcHNlVG9TdGFydCksZS5tb3ZlU3RhcnQoXCJjaGFyYWN0ZXJcIixuLm9mZnNldCksZX1lKCkuZm4uZXh0ZW5kKHtzdW1tZXJub3RlOmZ1bmN0aW9uKCl7dmFyIHQ9ZSgpLnR5cGUoay5oZWFkKGFyZ3VtZW50cykpLG49XCJzdHJpbmdcIj09PXQsbz1cIm9iamVjdFwiPT09dCxpPWUoKS5leHRlbmQoe30sZSgpLnN1bW1lcm5vdGUub3B0aW9ucyxvP2suaGVhZChhcmd1bWVudHMpOnt9KTtpLmxhbmdJbmZvPWUoKS5leHRlbmQoITAse30sZSgpLnN1bW1lcm5vdGUubGFuZ1tcImVuLVVTXCJdLGUoKS5zdW1tZXJub3RlLmxhbmdbaS5sYW5nXSksaS5pY29ucz1lKCkuZXh0ZW5kKCEwLHt9LGUoKS5zdW1tZXJub3RlLm9wdGlvbnMuaWNvbnMsaS5pY29ucyksaS50b29sdGlwPVwiYXV0b1wiPT09aS50b29sdGlwPyFmLmlzU3VwcG9ydFRvdWNoOmkudG9vbHRpcCx0aGlzLmVhY2goKGZ1bmN0aW9uKHQsbil7dmFyIG89ZSgpKG4pO2lmKCFvLmRhdGEoXCJzdW1tZXJub3RlXCIpKXt2YXIgcj1uZXcgcHQobyxpKTtvLmRhdGEoXCJzdW1tZXJub3RlXCIsciksby5kYXRhKFwic3VtbWVybm90ZVwiKS50cmlnZ2VyRXZlbnQoXCJpbml0XCIsci5sYXlvdXRJbmZvKX19KSk7dmFyIHI9dGhpcy5maXJzdCgpO2lmKHIubGVuZ3RoKXt2YXIgYT1yLmRhdGEoXCJzdW1tZXJub3RlXCIpO2lmKG4pcmV0dXJuIGEuaW52b2tlLmFwcGx5KGEsay5mcm9tKGFyZ3VtZW50cykpO2kuZm9jdXMmJmEuaW52b2tlKFwiZWRpdG9yLmZvY3VzXCIpfXJldHVybiB0aGlzfX0pO3ZhciBidD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSxuLG8saSl7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLnNjPWUsdGhpcy5zbz1uLHRoaXMuZWM9byx0aGlzLmVvPWksdGhpcy5pc09uRWRpdGFibGU9dGhpcy5tYWtlSXNPbihodC5pc0VkaXRhYmxlKSx0aGlzLmlzT25MaXN0PXRoaXMubWFrZUlzT24oaHQuaXNMaXN0KSx0aGlzLmlzT25BbmNob3I9dGhpcy5tYWtlSXNPbihodC5pc0FuY2hvciksdGhpcy5pc09uQ2VsbD10aGlzLm1ha2VJc09uKGh0LmlzQ2VsbCksdGhpcy5pc09uRGF0YT10aGlzLm1ha2VJc09uKGh0LmlzRGF0YSl9dmFyIG4sbyxpO3JldHVybiBuPXQsbz1be2tleTpcIm5hdGl2ZVJhbmdlXCIsdmFsdWU6ZnVuY3Rpb24oKXtpZihmLmlzVzNDUmFuZ2VTdXBwb3J0KXt2YXIgdD1kb2N1bWVudC5jcmVhdGVSYW5nZSgpO3JldHVybiB0LnNldFN0YXJ0KHRoaXMuc2MsdGhpcy5zbyksdC5zZXRFbmQodGhpcy5lYyx0aGlzLmVvKSx0fXZhciBlPWd0KHtub2RlOnRoaXMuc2Msb2Zmc2V0OnRoaXMuc299KTtyZXR1cm4gZS5zZXRFbmRQb2ludChcIkVuZFRvRW5kXCIsZ3Qoe25vZGU6dGhpcy5lYyxvZmZzZXQ6dGhpcy5lb30pKSxlfX0se2tleTpcImdldFBvaW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJue3NjOnRoaXMuc2Msc286dGhpcy5zbyxlYzp0aGlzLmVjLGVvOnRoaXMuZW99fX0se2tleTpcImdldFN0YXJ0UG9pbnRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybntub2RlOnRoaXMuc2Msb2Zmc2V0OnRoaXMuc299fX0se2tleTpcImdldEVuZFBvaW50XCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm57bm9kZTp0aGlzLmVjLG9mZnNldDp0aGlzLmVvfX19LHtrZXk6XCJzZWxlY3RcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMubmF0aXZlUmFuZ2UoKTtpZihmLmlzVzNDUmFuZ2VTdXBwb3J0KXt2YXIgZT1kb2N1bWVudC5nZXRTZWxlY3Rpb24oKTtlLnJhbmdlQ291bnQ+MCYmZS5yZW1vdmVBbGxSYW5nZXMoKSxlLmFkZFJhbmdlKHQpfWVsc2UgdC5zZWxlY3QoKTtyZXR1cm4gdGhpc319LHtrZXk6XCJzY3JvbGxJbnRvVmlld1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBuPWUoKSh0KS5oZWlnaHQoKTtyZXR1cm4gdC5zY3JvbGxUb3Arbjx0aGlzLnNjLm9mZnNldFRvcCYmKHQuc2Nyb2xsVG9wKz1NYXRoLmFicyh0LnNjcm9sbFRvcCtuLXRoaXMuc2Mub2Zmc2V0VG9wKSksdGhpc319LHtrZXk6XCJub3JtYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWZ1bmN0aW9uKHQsZSl7aWYoIXQpcmV0dXJuIHQ7aWYoaHQuaXNWaXNpYmxlUG9pbnQodCkmJighaHQuaXNFZGdlUG9pbnQodCl8fGh0LmlzUmlnaHRFZGdlUG9pbnQodCkmJiFlfHxodC5pc0xlZnRFZGdlUG9pbnQodCkmJmV8fGh0LmlzUmlnaHRFZGdlUG9pbnQodCkmJmUmJmh0LmlzVm9pZCh0Lm5vZGUubmV4dFNpYmxpbmcpfHxodC5pc0xlZnRFZGdlUG9pbnQodCkmJiFlJiZodC5pc1ZvaWQodC5ub2RlLnByZXZpb3VzU2libGluZyl8fGh0LmlzQmxvY2sodC5ub2RlKSYmaHQuaXNFbXB0eSh0Lm5vZGUpKSlyZXR1cm4gdDt2YXIgbj1odC5hbmNlc3Rvcih0Lm5vZGUsaHQuaXNCbG9jayksbz0hMTtpZighbyl7dmFyIGk9aHQucHJldlBvaW50KHQpfHx7bm9kZTpudWxsfTtvPShodC5pc0xlZnRFZGdlUG9pbnRPZih0LG4pfHxodC5pc1ZvaWQoaS5ub2RlKSkmJiFlfXZhciByPSExO2lmKCFyKXt2YXIgYT1odC5uZXh0UG9pbnQodCl8fHtub2RlOm51bGx9O3I9KGh0LmlzUmlnaHRFZGdlUG9pbnRPZih0LG4pfHxodC5pc1ZvaWQoYS5ub2RlKSkmJmV9aWYob3x8cil7aWYoaHQuaXNWaXNpYmxlUG9pbnQodCkpcmV0dXJuIHQ7ZT0hZX1yZXR1cm4oZT9odC5uZXh0UG9pbnRVbnRpbChodC5uZXh0UG9pbnQodCksaHQuaXNWaXNpYmxlUG9pbnQpOmh0LnByZXZQb2ludFVudGlsKGh0LnByZXZQb2ludCh0KSxodC5pc1Zpc2libGVQb2ludCkpfHx0fSxuPWUodGhpcy5nZXRFbmRQb2ludCgpLCExKSxvPXRoaXMuaXNDb2xsYXBzZWQoKT9uOmUodGhpcy5nZXRTdGFydFBvaW50KCksITApO3JldHVybiBuZXcgdChvLm5vZGUsby5vZmZzZXQsbi5ub2RlLG4ub2Zmc2V0KX19LHtrZXk6XCJub2Rlc1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dD10fHxtLm9rO3ZhciBuPWUmJmUuaW5jbHVkZUFuY2VzdG9yLG89ZSYmZS5mdWxseUNvbnRhaW5zLGk9dGhpcy5nZXRTdGFydFBvaW50KCkscj10aGlzLmdldEVuZFBvaW50KCksYT1bXSxzPVtdO3JldHVybiBodC53YWxrUG9pbnQoaSxyLChmdW5jdGlvbihlKXt2YXIgaTtodC5pc0VkaXRhYmxlKGUubm9kZSl8fChvPyhodC5pc0xlZnRFZGdlUG9pbnQoZSkmJnMucHVzaChlLm5vZGUpLGh0LmlzUmlnaHRFZGdlUG9pbnQoZSkmJmsuY29udGFpbnMocyxlLm5vZGUpJiYoaT1lLm5vZGUpKTppPW4/aHQuYW5jZXN0b3IoZS5ub2RlLHQpOmUubm9kZSxpJiZ0KGkpJiZhLnB1c2goaSkpfSksITApLGsudW5pcXVlKGEpfX0se2tleTpcImNvbW1vbkFuY2VzdG9yXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gaHQuY29tbW9uQW5jZXN0b3IodGhpcy5zYyx0aGlzLmVjKX19LHtrZXk6XCJleHBhbmRcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgbj1odC5hbmNlc3Rvcih0aGlzLnNjLGUpLG89aHQuYW5jZXN0b3IodGhpcy5lYyxlKTtpZighbiYmIW8pcmV0dXJuIG5ldyB0KHRoaXMuc2MsdGhpcy5zbyx0aGlzLmVjLHRoaXMuZW8pO3ZhciBpPXRoaXMuZ2V0UG9pbnRzKCk7cmV0dXJuIG4mJihpLnNjPW4saS5zbz0wKSxvJiYoaS5lYz1vLGkuZW89aHQubm9kZUxlbmd0aChvKSksbmV3IHQoaS5zYyxpLnNvLGkuZWMsaS5lbyl9fSx7a2V5OlwiY29sbGFwc2VcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZT9uZXcgdCh0aGlzLnNjLHRoaXMuc28sdGhpcy5zYyx0aGlzLnNvKTpuZXcgdCh0aGlzLmVjLHRoaXMuZW8sdGhpcy5lYyx0aGlzLmVvKX19LHtrZXk6XCJzcGxpdFRleHRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPXRoaXMuc2M9PT10aGlzLmVjLG49dGhpcy5nZXRQb2ludHMoKTtyZXR1cm4gaHQuaXNUZXh0KHRoaXMuZWMpJiYhaHQuaXNFZGdlUG9pbnQodGhpcy5nZXRFbmRQb2ludCgpKSYmdGhpcy5lYy5zcGxpdFRleHQodGhpcy5lbyksaHQuaXNUZXh0KHRoaXMuc2MpJiYhaHQuaXNFZGdlUG9pbnQodGhpcy5nZXRTdGFydFBvaW50KCkpJiYobi5zYz10aGlzLnNjLnNwbGl0VGV4dCh0aGlzLnNvKSxuLnNvPTAsZSYmKG4uZWM9bi5zYyxuLmVvPXRoaXMuZW8tdGhpcy5zbykpLG5ldyB0KG4uc2Msbi5zbyxuLmVjLG4uZW8pfX0se2tleTpcImRlbGV0ZUNvbnRlbnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXtpZih0aGlzLmlzQ29sbGFwc2VkKCkpcmV0dXJuIHRoaXM7dmFyIG49dGhpcy5zcGxpdFRleHQoKSxvPW4ubm9kZXMobnVsbCx7ZnVsbHlDb250YWluczohMH0pLGk9aHQucHJldlBvaW50VW50aWwobi5nZXRTdGFydFBvaW50KCksKGZ1bmN0aW9uKHQpe3JldHVybiFrLmNvbnRhaW5zKG8sdC5ub2RlKX0pKSxyPVtdO3JldHVybiBlKCkuZWFjaChvLChmdW5jdGlvbih0LGUpe3ZhciBuPWUucGFyZW50Tm9kZTtpLm5vZGUhPT1uJiYxPT09aHQubm9kZUxlbmd0aChuKSYmci5wdXNoKG4pLGh0LnJlbW92ZShlLCExKX0pKSxlKCkuZWFjaChyLChmdW5jdGlvbih0LGUpe2h0LnJlbW92ZShlLCExKX0pKSxuZXcgdChpLm5vZGUsaS5vZmZzZXQsaS5ub2RlLGkub2Zmc2V0KS5ub3JtYWxpemUoKX19LHtrZXk6XCJtYWtlSXNPblwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3ZhciBlPWh0LmFuY2VzdG9yKHRoaXMuc2MsdCk7cmV0dXJuISFlJiZlPT09aHQuYW5jZXN0b3IodGhpcy5lYyx0KX19fSx7a2V5OlwiaXNMZWZ0RWRnZU9mXCIsdmFsdWU6ZnVuY3Rpb24odCl7aWYoIWh0LmlzTGVmdEVkZ2VQb2ludCh0aGlzLmdldFN0YXJ0UG9pbnQoKSkpcmV0dXJuITE7dmFyIGU9aHQuYW5jZXN0b3IodGhpcy5zYyx0KTtyZXR1cm4gZSYmaHQuaXNMZWZ0RWRnZU9mKHRoaXMuc2MsZSl9fSx7a2V5OlwiaXNDb2xsYXBzZWRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNjPT09dGhpcy5lYyYmdGhpcy5zbz09PXRoaXMuZW99fSx7a2V5Olwid3JhcEJvZHlJbmxpbmVXaXRoUGFyYVwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYoaHQuaXNCb2R5Q29udGFpbmVyKHRoaXMuc2MpJiZodC5pc0VtcHR5KHRoaXMuc2MpKXJldHVybiB0aGlzLnNjLmlubmVySFRNTD1odC5lbXB0eVBhcmEsbmV3IHQodGhpcy5zYy5maXJzdENoaWxkLDAsdGhpcy5zYy5maXJzdENoaWxkLDApO3ZhciBlLG49dGhpcy5ub3JtYWxpemUoKTtpZihodC5pc1BhcmFJbmxpbmUodGhpcy5zYyl8fGh0LmlzUGFyYSh0aGlzLnNjKSlyZXR1cm4gbjtpZihodC5pc0lubGluZShuLnNjKSl7dmFyIG89aHQubGlzdEFuY2VzdG9yKG4uc2MsbS5ub3QoaHQuaXNJbmxpbmUpKTtlPWsubGFzdChvKSxodC5pc0lubGluZShlKXx8KGU9b1tvLmxlbmd0aC0yXXx8bi5zYy5jaGlsZE5vZGVzW24uc29dKX1lbHNlIGU9bi5zYy5jaGlsZE5vZGVzW24uc28+MD9uLnNvLTE6MF07aWYoZSl7dmFyIGk9aHQubGlzdFByZXYoZSxodC5pc1BhcmFJbmxpbmUpLnJldmVyc2UoKTtpZigoaT1pLmNvbmNhdChodC5saXN0TmV4dChlLm5leHRTaWJsaW5nLGh0LmlzUGFyYUlubGluZSkpKS5sZW5ndGgpe3ZhciByPWh0LndyYXAoay5oZWFkKGkpLFwicFwiKTtodC5hcHBlbmRDaGlsZE5vZGVzKHIsay50YWlsKGkpKX19cmV0dXJuIHRoaXMubm9ybWFsaXplKCl9fSx7a2V5OlwiaW5zZXJ0Tm9kZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7KGh0LmlzVGV4dCh0KXx8aHQuaXNJbmxpbmUodCkpJiYoZT10aGlzLndyYXBCb2R5SW5saW5lV2l0aFBhcmEoKS5kZWxldGVDb250ZW50cygpKTt2YXIgbj1odC5zcGxpdFBvaW50KGUuZ2V0U3RhcnRQb2ludCgpLGh0LmlzSW5saW5lKHQpKTtyZXR1cm4gbi5yaWdodE5vZGU/KG4ucmlnaHROb2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHQsbi5yaWdodE5vZGUpLGh0LmlzRW1wdHkobi5yaWdodE5vZGUpJiZodC5pc1BhcmEodCkmJm4ucmlnaHROb2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobi5yaWdodE5vZGUpKTpuLmNvbnRhaW5lci5hcHBlbmRDaGlsZCh0KSx0fX0se2tleTpcInBhc3RlSFRNTFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3Q9ZSgpLnRyaW0odCk7dmFyIG49ZSgpKFwiPGRpdj48L2Rpdj5cIikuaHRtbCh0KVswXSxvPWsuZnJvbShuLmNoaWxkTm9kZXMpLGk9dGhpcyxyPSExO3JldHVybiBpLnNvPj0wJiYobz1vLnJldmVyc2UoKSxyPSEwKSxvPW8ubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gaS5pbnNlcnROb2RlKHQpfSkpLHImJihvPW8ucmV2ZXJzZSgpKSxvfX0se2tleTpcInRvU3RyaW5nXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm5hdGl2ZVJhbmdlKCk7cmV0dXJuIGYuaXNXM0NSYW5nZVN1cHBvcnQ/dC50b1N0cmluZygpOnQudGV4dH19LHtrZXk6XCJnZXRXb3JkUmFuZ2VcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgbj10aGlzLmdldEVuZFBvaW50KCk7aWYoIWh0LmlzQ2hhclBvaW50KG4pKXJldHVybiB0aGlzO3ZhciBvPWh0LnByZXZQb2ludFVudGlsKG4sKGZ1bmN0aW9uKHQpe3JldHVybiFodC5pc0NoYXJQb2ludCh0KX0pKTtyZXR1cm4gZSYmKG49aHQubmV4dFBvaW50VW50aWwobiwoZnVuY3Rpb24odCl7cmV0dXJuIWh0LmlzQ2hhclBvaW50KHQpfSkpKSxuZXcgdChvLm5vZGUsby5vZmZzZXQsbi5ub2RlLG4ub2Zmc2V0KX19LHtrZXk6XCJnZXRXb3Jkc1JhbmdlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIG49dGhpcy5nZXRFbmRQb2ludCgpLG89ZnVuY3Rpb24odCl7cmV0dXJuIWh0LmlzQ2hhclBvaW50KHQpJiYhaHQuaXNTcGFjZVBvaW50KHQpfTtpZihvKG4pKXJldHVybiB0aGlzO3ZhciBpPWh0LnByZXZQb2ludFVudGlsKG4sbyk7cmV0dXJuIGUmJihuPWh0Lm5leHRQb2ludFVudGlsKG4sbykpLG5ldyB0KGkubm9kZSxpLm9mZnNldCxuLm5vZGUsbi5vZmZzZXQpfX0se2tleTpcImdldFdvcmRzTWF0Y2hSYW5nZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciBuPXRoaXMuZ2V0RW5kUG9pbnQoKSxvPWh0LnByZXZQb2ludFVudGlsKG4sKGZ1bmN0aW9uKG8pe2lmKCFodC5pc0NoYXJQb2ludChvKSYmIWh0LmlzU3BhY2VQb2ludChvKSlyZXR1cm4hMDt2YXIgaT1uZXcgdChvLm5vZGUsby5vZmZzZXQsbi5ub2RlLG4ub2Zmc2V0KSxyPWUuZXhlYyhpLnRvU3RyaW5nKCkpO3JldHVybiByJiYwPT09ci5pbmRleH0pKSxpPW5ldyB0KG8ubm9kZSxvLm9mZnNldCxuLm5vZGUsbi5vZmZzZXQpLHI9aS50b1N0cmluZygpLGE9ZS5leGVjKHIpO3JldHVybiBhJiZhWzBdLmxlbmd0aD09PXIubGVuZ3RoP2k6bnVsbH19LHtrZXk6XCJib29rbWFya1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybntzOntwYXRoOmh0Lm1ha2VPZmZzZXRQYXRoKHQsdGhpcy5zYyksb2Zmc2V0OnRoaXMuc299LGU6e3BhdGg6aHQubWFrZU9mZnNldFBhdGgodCx0aGlzLmVjKSxvZmZzZXQ6dGhpcy5lb319fX0se2tleTpcInBhcmFCb29rbWFya1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybntzOntwYXRoOmsudGFpbChodC5tYWtlT2Zmc2V0UGF0aChrLmhlYWQodCksdGhpcy5zYykpLG9mZnNldDp0aGlzLnNvfSxlOntwYXRoOmsudGFpbChodC5tYWtlT2Zmc2V0UGF0aChrLmxhc3QodCksdGhpcy5lYykpLG9mZnNldDp0aGlzLmVvfX19fSx7a2V5OlwiZ2V0Q2xpZW50UmVjdHNcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm5hdGl2ZVJhbmdlKCkuZ2V0Q2xpZW50UmVjdHMoKX19XSxvJiZtdChuLnByb3RvdHlwZSxvKSxpJiZtdChuLGkpLHR9KCk7Y29uc3QgeXQ9e2NyZWF0ZTpmdW5jdGlvbih0LGUsbixvKXtpZig0PT09YXJndW1lbnRzLmxlbmd0aClyZXR1cm4gbmV3IGJ0KHQsZSxuLG8pO2lmKDI9PT1hcmd1bWVudHMubGVuZ3RoKXJldHVybiBuZXcgYnQodCxlLG49dCxvPWUpO3ZhciBpPXRoaXMuY3JlYXRlRnJvbVNlbGVjdGlvbigpO2lmKCFpJiYxPT09YXJndW1lbnRzLmxlbmd0aCl7dmFyIHI9YXJndW1lbnRzWzBdO3JldHVybiBodC5pc0VkaXRhYmxlKHIpJiYocj1yLmxhc3RDaGlsZCksdGhpcy5jcmVhdGVGcm9tQm9keUVsZW1lbnQocixodC5lbXB0eVBhcmE9PT1hcmd1bWVudHNbMF0uaW5uZXJIVE1MKX1yZXR1cm4gaX0sY3JlYXRlRnJvbUJvZHlFbGVtZW50OmZ1bmN0aW9uKHQpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MSYmdm9pZCAwIT09YXJndW1lbnRzWzFdJiZhcmd1bWVudHNbMV0sbj10aGlzLmNyZWF0ZUZyb21Ob2RlKHQpO3JldHVybiBuLmNvbGxhcHNlKGUpfSxjcmVhdGVGcm9tU2VsZWN0aW9uOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLG87aWYoZi5pc1czQ1JhbmdlU3VwcG9ydCl7dmFyIGk9ZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCk7aWYoIWl8fDA9PT1pLnJhbmdlQ291bnQpcmV0dXJuIG51bGw7aWYoaHQuaXNCb2R5KGkuYW5jaG9yTm9kZSkpcmV0dXJuIG51bGw7dmFyIHI9aS5nZXRSYW5nZUF0KDApO3Q9ci5zdGFydENvbnRhaW5lcixlPXIuc3RhcnRPZmZzZXQsbj1yLmVuZENvbnRhaW5lcixvPXIuZW5kT2Zmc2V0fWVsc2V7dmFyIGE9ZG9jdW1lbnQuc2VsZWN0aW9uLmNyZWF0ZVJhbmdlKCkscz1hLmR1cGxpY2F0ZSgpO3MuY29sbGFwc2UoITEpO3ZhciBsPWE7bC5jb2xsYXBzZSghMCk7dmFyIGM9dnQobCwhMCksdT12dChzLCExKTtodC5pc1RleHQoYy5ub2RlKSYmaHQuaXNMZWZ0RWRnZVBvaW50KGMpJiZodC5pc1RleHROb2RlKHUubm9kZSkmJmh0LmlzUmlnaHRFZGdlUG9pbnQodSkmJnUubm9kZS5uZXh0U2libGluZz09PWMubm9kZSYmKGM9dSksdD1jLmNvbnQsZT1jLm9mZnNldCxuPXUuY29udCxvPXUub2Zmc2V0fXJldHVybiBuZXcgYnQodCxlLG4sbyl9LGNyZWF0ZUZyb21Ob2RlOmZ1bmN0aW9uKHQpe3ZhciBlPXQsbj0wLG89dCxpPWh0Lm5vZGVMZW5ndGgobyk7cmV0dXJuIGh0LmlzVm9pZChlKSYmKG49aHQubGlzdFByZXYoZSkubGVuZ3RoLTEsZT1lLnBhcmVudE5vZGUpLGh0LmlzQlIobyk/KGk9aHQubGlzdFByZXYobykubGVuZ3RoLTEsbz1vLnBhcmVudE5vZGUpOmh0LmlzVm9pZChvKSYmKGk9aHQubGlzdFByZXYobykubGVuZ3RoLG89by5wYXJlbnROb2RlKSx0aGlzLmNyZWF0ZShlLG4sbyxpKX0sY3JlYXRlRnJvbU5vZGVCZWZvcmU6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY3JlYXRlRnJvbU5vZGUodCkuY29sbGFwc2UoITApfSxjcmVhdGVGcm9tTm9kZUFmdGVyOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNyZWF0ZUZyb21Ob2RlKHQpLmNvbGxhcHNlKCl9LGNyZWF0ZUZyb21Cb29rbWFyazpmdW5jdGlvbih0LGUpe3ZhciBuPWh0LmZyb21PZmZzZXRQYXRoKHQsZS5zLnBhdGgpLG89ZS5zLm9mZnNldCxpPWh0LmZyb21PZmZzZXRQYXRoKHQsZS5lLnBhdGgpLHI9ZS5lLm9mZnNldDtyZXR1cm4gbmV3IGJ0KG4sbyxpLHIpfSxjcmVhdGVGcm9tUGFyYUJvb2ttYXJrOmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5zLm9mZnNldCxvPXQuZS5vZmZzZXQsaT1odC5mcm9tT2Zmc2V0UGF0aChrLmhlYWQoZSksdC5zLnBhdGgpLHI9aHQuZnJvbU9mZnNldFBhdGgoay5sYXN0KGUpLHQuZS5wYXRoKTtyZXR1cm4gbmV3IGJ0KGksbixyLG8pfX07dmFyIGt0PXtCQUNLU1BBQ0U6OCxUQUI6OSxFTlRFUjoxMyxFU0NBUEU6MjcsU1BBQ0U6MzIsREVMRVRFOjQ2LExFRlQ6MzcsVVA6MzgsUklHSFQ6MzksRE9XTjo0MCxOVU0wOjQ4LE5VTTE6NDksTlVNMjo1MCxOVU0zOjUxLE5VTTQ6NTIsTlVNNTo1MyxOVU02OjU0LE5VTTc6NTUsTlVNODo1NixCOjY2LEU6NjksSTo3MyxKOjc0LEs6NzUsTDo3NixSOjgyLFM6ODMsVTo4NSxWOjg2LFk6ODksWjo5MCxTTEFTSDoxOTEsTEVGVEJSQUNLRVQ6MjE5LEJBQ0tTTEFTSDoyMjAsUklHSFRCUkFDS0VUOjIyMSxIT01FOjM2LEVORDozNSxQQUdFVVA6MzMsUEFHRURPV046MzR9O2NvbnN0IHd0PXtpc0VkaXQ6ZnVuY3Rpb24odCl7cmV0dXJuIGsuY29udGFpbnMoW2t0LkJBQ0tTUEFDRSxrdC5UQUIsa3QuRU5URVIsa3QuU1BBQ0Usa3QuREVMRVRFXSx0KX0saXNNb3ZlOmZ1bmN0aW9uKHQpe3JldHVybiBrLmNvbnRhaW5zKFtrdC5MRUZULGt0LlVQLGt0LlJJR0hULGt0LkRPV05dLHQpfSxpc05hdmlnYXRpb246ZnVuY3Rpb24odCl7cmV0dXJuIGsuY29udGFpbnMoW2t0LkhPTUUsa3QuRU5ELGt0LlBBR0VVUCxrdC5QQUdFRE9XTl0sdCl9LG5hbWVGcm9tQ29kZTptLmludmVydE9iamVjdChrdCksY29kZTprdH07ZnVuY3Rpb24gQ3QodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fXZhciB4dD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLnN0YWNrPVtdLHRoaXMuc3RhY2tPZmZzZXQ9LTEsdGhpcy5jb250ZXh0PWUsdGhpcy4kZWRpdGFibGU9ZS5sYXlvdXRJbmZvLmVkaXRhYmxlLHRoaXMuZWRpdGFibGU9dGhpcy4kZWRpdGFibGVbMF19dmFyIGUsbixvO3JldHVybiBlPXQsKG49W3trZXk6XCJtYWtlU25hcHNob3RcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXl0LmNyZWF0ZSh0aGlzLmVkaXRhYmxlKTtyZXR1cm57Y29udGVudHM6dGhpcy4kZWRpdGFibGUuaHRtbCgpLGJvb2ttYXJrOnQmJnQuaXNPbkVkaXRhYmxlKCk/dC5ib29rbWFyayh0aGlzLmVkaXRhYmxlKTp7czp7cGF0aDpbXSxvZmZzZXQ6MH0sZTp7cGF0aDpbXSxvZmZzZXQ6MH19fX19LHtrZXk6XCJhcHBseVNuYXBzaG90XCIsdmFsdWU6ZnVuY3Rpb24odCl7bnVsbCE9PXQuY29udGVudHMmJnRoaXMuJGVkaXRhYmxlLmh0bWwodC5jb250ZW50cyksbnVsbCE9PXQuYm9va21hcmsmJnl0LmNyZWF0ZUZyb21Cb29rbWFyayh0aGlzLmVkaXRhYmxlLHQuYm9va21hcmspLnNlbGVjdCgpfX0se2tleTpcInJld2luZFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWRpdGFibGUuaHRtbCgpIT09dGhpcy5zdGFja1t0aGlzLnN0YWNrT2Zmc2V0XS5jb250ZW50cyYmdGhpcy5yZWNvcmRVbmRvKCksdGhpcy5zdGFja09mZnNldD0wLHRoaXMuYXBwbHlTbmFwc2hvdCh0aGlzLnN0YWNrW3RoaXMuc3RhY2tPZmZzZXRdKX19LHtrZXk6XCJjb21taXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuc3RhY2s9W10sdGhpcy5zdGFja09mZnNldD0tMSx0aGlzLnJlY29yZFVuZG8oKX19LHtrZXk6XCJyZXNldFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5zdGFjaz1bXSx0aGlzLnN0YWNrT2Zmc2V0PS0xLHRoaXMuJGVkaXRhYmxlLmh0bWwoXCJcIiksdGhpcy5yZWNvcmRVbmRvKCl9fSx7a2V5OlwidW5kb1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWRpdGFibGUuaHRtbCgpIT09dGhpcy5zdGFja1t0aGlzLnN0YWNrT2Zmc2V0XS5jb250ZW50cyYmdGhpcy5yZWNvcmRVbmRvKCksdGhpcy5zdGFja09mZnNldD4wJiYodGhpcy5zdGFja09mZnNldC0tLHRoaXMuYXBwbHlTbmFwc2hvdCh0aGlzLnN0YWNrW3RoaXMuc3RhY2tPZmZzZXRdKSl9fSx7a2V5OlwicmVkb1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5zdGFjay5sZW5ndGgtMT50aGlzLnN0YWNrT2Zmc2V0JiYodGhpcy5zdGFja09mZnNldCsrLHRoaXMuYXBwbHlTbmFwc2hvdCh0aGlzLnN0YWNrW3RoaXMuc3RhY2tPZmZzZXRdKSl9fSx7a2V5OlwicmVjb3JkVW5kb1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5zdGFja09mZnNldCsrLHRoaXMuc3RhY2subGVuZ3RoPnRoaXMuc3RhY2tPZmZzZXQmJih0aGlzLnN0YWNrPXRoaXMuc3RhY2suc2xpY2UoMCx0aGlzLnN0YWNrT2Zmc2V0KSksdGhpcy5zdGFjay5wdXNoKHRoaXMubWFrZVNuYXBzaG90KCkpLHRoaXMuc3RhY2subGVuZ3RoPnRoaXMuY29udGV4dC5vcHRpb25zLmhpc3RvcnlMaW1pdCYmKHRoaXMuc3RhY2suc2hpZnQoKSx0aGlzLnN0YWNrT2Zmc2V0LT0xKX19XSkmJkN0KGUucHJvdG90eXBlLG4pLG8mJkN0KGUsbyksdH0oKTtmdW5jdGlvbiBTdCh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19dmFyIFR0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCl9dmFyIG4sbyxpO3JldHVybiBuPXQsbz1be2tleTpcImpRdWVyeUNTU1wiLHZhbHVlOmZ1bmN0aW9uKHQsbil7dmFyIG89e307cmV0dXJuIGUoKS5lYWNoKG4sKGZ1bmN0aW9uKGUsbil7b1tuXT10LmNzcyhuKX0pKSxvfX0se2tleTpcImZyb21Ob2RlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5qUXVlcnlDU1ModCxbXCJmb250LWZhbWlseVwiLFwiZm9udC1zaXplXCIsXCJ0ZXh0LWFsaWduXCIsXCJsaXN0LXN0eWxlLXR5cGVcIixcImxpbmUtaGVpZ2h0XCJdKXx8e30sbj10WzBdLnN0eWxlLmZvbnRTaXplfHxlW1wiZm9udC1zaXplXCJdO3JldHVybiBlW1wiZm9udC1zaXplXCJdPXBhcnNlSW50KG4sMTApLGVbXCJmb250LXNpemUtdW5pdFwiXT1uLm1hdGNoKC9bYS16JV0rJC8pLGV9fSx7a2V5Olwic3R5bGVQYXJhXCIsdmFsdWU6ZnVuY3Rpb24odCxuKXtlKCkuZWFjaCh0Lm5vZGVzKGh0LmlzUGFyYSx7aW5jbHVkZUFuY2VzdG9yOiEwfSksKGZ1bmN0aW9uKHQsbyl7ZSgpKG8pLmNzcyhuKX0pKX19LHtrZXk6XCJzdHlsZU5vZGVzXCIsdmFsdWU6ZnVuY3Rpb24odCxuKXt0PXQuc3BsaXRUZXh0KCk7dmFyIG89biYmbi5ub2RlTmFtZXx8XCJTUEFOXCIsaT0hKCFufHwhbi5leHBhbmRDbG9zZXN0U2libGluZykscj0hKCFufHwhbi5vbmx5UGFydGlhbENvbnRhaW5zKTtpZih0LmlzQ29sbGFwc2VkKCkpcmV0dXJuW3QuaW5zZXJ0Tm9kZShodC5jcmVhdGUobykpXTt2YXIgYT1odC5tYWtlUHJlZEJ5Tm9kZU5hbWUobykscz10Lm5vZGVzKGh0LmlzVGV4dCx7ZnVsbHlDb250YWluczohMH0pLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIGh0LnNpbmdsZUNoaWxkQW5jZXN0b3IodCxhKXx8aHQud3JhcCh0LG8pfSkpO2lmKGkpe2lmKHIpe3ZhciBsPXQubm9kZXMoKTthPW0uYW5kKGEsKGZ1bmN0aW9uKHQpe3JldHVybiBrLmNvbnRhaW5zKGwsdCl9KSl9cmV0dXJuIHMubWFwKChmdW5jdGlvbih0KXt2YXIgbj1odC53aXRoQ2xvc2VzdFNpYmxpbmdzKHQsYSksbz1rLmhlYWQobiksaT1rLnRhaWwobik7cmV0dXJuIGUoKS5lYWNoKGksKGZ1bmN0aW9uKHQsZSl7aHQuYXBwZW5kQ2hpbGROb2RlcyhvLGUuY2hpbGROb2RlcyksaHQucmVtb3ZlKGUpfSkpLGsuaGVhZChuKX0pKX1yZXR1cm4gc319LHtrZXk6XCJjdXJyZW50XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIG49ZSgpKGh0LmlzRWxlbWVudCh0LnNjKT90LnNjOnQuc2MucGFyZW50Tm9kZSksbz10aGlzLmZyb21Ob2RlKG4pO3RyeXtvPWUoKS5leHRlbmQobyx7XCJmb250LWJvbGRcIjpkb2N1bWVudC5xdWVyeUNvbW1hbmRTdGF0ZShcImJvbGRcIik/XCJib2xkXCI6XCJub3JtYWxcIixcImZvbnQtaXRhbGljXCI6ZG9jdW1lbnQucXVlcnlDb21tYW5kU3RhdGUoXCJpdGFsaWNcIik/XCJpdGFsaWNcIjpcIm5vcm1hbFwiLFwiZm9udC11bmRlcmxpbmVcIjpkb2N1bWVudC5xdWVyeUNvbW1hbmRTdGF0ZShcInVuZGVybGluZVwiKT9cInVuZGVybGluZVwiOlwibm9ybWFsXCIsXCJmb250LXN1YnNjcmlwdFwiOmRvY3VtZW50LnF1ZXJ5Q29tbWFuZFN0YXRlKFwic3Vic2NyaXB0XCIpP1wic3Vic2NyaXB0XCI6XCJub3JtYWxcIixcImZvbnQtc3VwZXJzY3JpcHRcIjpkb2N1bWVudC5xdWVyeUNvbW1hbmRTdGF0ZShcInN1cGVyc2NyaXB0XCIpP1wic3VwZXJzY3JpcHRcIjpcIm5vcm1hbFwiLFwiZm9udC1zdHJpa2V0aHJvdWdoXCI6ZG9jdW1lbnQucXVlcnlDb21tYW5kU3RhdGUoXCJzdHJpa2V0aHJvdWdoXCIpP1wic3RyaWtldGhyb3VnaFwiOlwibm9ybWFsXCIsXCJmb250LWZhbWlseVwiOmRvY3VtZW50LnF1ZXJ5Q29tbWFuZFZhbHVlKFwiZm9udG5hbWVcIil8fG9bXCJmb250LWZhbWlseVwiXX0pfWNhdGNoKHQpe31pZih0LmlzT25MaXN0KCkpe3ZhciBpPVtcImNpcmNsZVwiLFwiZGlzY1wiLFwiZGlzYy1sZWFkaW5nLXplcm9cIixcInNxdWFyZVwiXS5pbmRleE9mKG9bXCJsaXN0LXN0eWxlLXR5cGVcIl0pPi0xO29bXCJsaXN0LXN0eWxlXCJdPWk/XCJ1bm9yZGVyZWRcIjpcIm9yZGVyZWRcIn1lbHNlIG9bXCJsaXN0LXN0eWxlXCJdPVwibm9uZVwiO3ZhciByPWh0LmFuY2VzdG9yKHQuc2MsaHQuaXNQYXJhKTtpZihyJiZyLnN0eWxlW1wibGluZS1oZWlnaHRcIl0pb1tcImxpbmUtaGVpZ2h0XCJdPXIuc3R5bGUubGluZUhlaWdodDtlbHNle3ZhciBhPXBhcnNlSW50KG9bXCJsaW5lLWhlaWdodFwiXSwxMCkvcGFyc2VJbnQob1tcImZvbnQtc2l6ZVwiXSwxMCk7b1tcImxpbmUtaGVpZ2h0XCJdPWEudG9GaXhlZCgxKX1yZXR1cm4gby5hbmNob3I9dC5pc09uQW5jaG9yKCkmJmh0LmFuY2VzdG9yKHQuc2MsaHQuaXNBbmNob3IpLG8uYW5jZXN0b3JzPWh0Lmxpc3RBbmNlc3Rvcih0LnNjLGh0LmlzRWRpdGFibGUpLG8ucmFuZ2U9dCxvfX1dLG8mJlN0KG4ucHJvdG90eXBlLG8pLGkmJlN0KG4saSksdH0oKTtmdW5jdGlvbiBFdCh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19dmFyIEl0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCl9dmFyIG4sbyxpO3JldHVybiBuPXQsbz1be2tleTpcImluc2VydE9yZGVyZWRMaXN0XCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy50b2dnbGVMaXN0KFwiT0xcIix0KX19LHtrZXk6XCJpbnNlcnRVbm9yZGVyZWRMaXN0XCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy50b2dnbGVMaXN0KFwiVUxcIix0KX19LHtrZXk6XCJpbmRlbnRcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgbj10aGlzLG89eXQuY3JlYXRlKHQpLndyYXBCb2R5SW5saW5lV2l0aFBhcmEoKSxpPW8ubm9kZXMoaHQuaXNQYXJhLHtpbmNsdWRlQW5jZXN0b3I6ITB9KSxyPWsuY2x1c3RlckJ5KGksbS5wZXEyKFwicGFyZW50Tm9kZVwiKSk7ZSgpLmVhY2gociwoZnVuY3Rpb24odCxvKXt2YXIgaT1rLmhlYWQobyk7aWYoaHQuaXNMaShpKSl7dmFyIHI9bi5maW5kTGlzdChpLnByZXZpb3VzU2libGluZyk7cj9vLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIHIuYXBwZW5kQ2hpbGQodCl9KSk6KG4ud3JhcExpc3QobyxpLnBhcmVudE5vZGUubm9kZU5hbWUpLG8ubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC5wYXJlbnROb2RlfSkpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIG4uYXBwZW5kVG9QcmV2aW91cyh0KX0pKSl9ZWxzZSBlKCkuZWFjaChvLChmdW5jdGlvbih0LG4pe2UoKShuKS5jc3MoXCJtYXJnaW5MZWZ0XCIsKGZ1bmN0aW9uKHQsZSl7cmV0dXJuKHBhcnNlSW50KGUsMTApfHwwKSsyNX0pKX0pKX0pKSxvLnNlbGVjdCgpfX0se2tleTpcIm91dGRlbnRcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgbj10aGlzLG89eXQuY3JlYXRlKHQpLndyYXBCb2R5SW5saW5lV2l0aFBhcmEoKSxpPW8ubm9kZXMoaHQuaXNQYXJhLHtpbmNsdWRlQW5jZXN0b3I6ITB9KSxyPWsuY2x1c3RlckJ5KGksbS5wZXEyKFwicGFyZW50Tm9kZVwiKSk7ZSgpLmVhY2gociwoZnVuY3Rpb24odCxvKXt2YXIgaT1rLmhlYWQobyk7aHQuaXNMaShpKT9uLnJlbGVhc2VMaXN0KFtvXSk6ZSgpLmVhY2gobywoZnVuY3Rpb24odCxuKXtlKCkobikuY3NzKFwibWFyZ2luTGVmdFwiLChmdW5jdGlvbih0LGUpe3JldHVybihlPXBhcnNlSW50KGUsMTApfHwwKT4yNT9lLTI1OlwiXCJ9KSl9KSl9KSksby5zZWxlY3QoKX19LHtrZXk6XCJ0b2dnbGVMaXN0XCIsdmFsdWU6ZnVuY3Rpb24odCxuKXt2YXIgbz10aGlzLGk9eXQuY3JlYXRlKG4pLndyYXBCb2R5SW5saW5lV2l0aFBhcmEoKSxyPWkubm9kZXMoaHQuaXNQYXJhLHtpbmNsdWRlQW5jZXN0b3I6ITB9KSxhPWkucGFyYUJvb2ttYXJrKHIpLHM9ay5jbHVzdGVyQnkocixtLnBlcTIoXCJwYXJlbnROb2RlXCIpKTtpZihrLmZpbmQocixodC5pc1B1cmVQYXJhKSl7dmFyIGw9W107ZSgpLmVhY2gocywoZnVuY3Rpb24oZSxuKXtsPWwuY29uY2F0KG8ud3JhcExpc3Qobix0KSl9KSkscj1sfWVsc2V7dmFyIGM9aS5ub2RlcyhodC5pc0xpc3Qse2luY2x1ZGVBbmNlc3RvcjohMH0pLmZpbHRlcigoZnVuY3Rpb24obil7cmV0dXJuIWUoKS5ub2RlTmFtZShuLHQpfSkpO2MubGVuZ3RoP2UoKS5lYWNoKGMsKGZ1bmN0aW9uKGUsbil7aHQucmVwbGFjZShuLHQpfSkpOnI9dGhpcy5yZWxlYXNlTGlzdChzLCEwKX15dC5jcmVhdGVGcm9tUGFyYUJvb2ttYXJrKGEscikuc2VsZWN0KCl9fSx7a2V5Olwid3JhcExpc3RcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3ZhciBuPWsuaGVhZCh0KSxvPWsubGFzdCh0KSxpPWh0LmlzTGlzdChuLnByZXZpb3VzU2libGluZykmJm4ucHJldmlvdXNTaWJsaW5nLHI9aHQuaXNMaXN0KG8ubmV4dFNpYmxpbmcpJiZvLm5leHRTaWJsaW5nLGE9aXx8aHQuaW5zZXJ0QWZ0ZXIoaHQuY3JlYXRlKGV8fFwiVUxcIiksbyk7cmV0dXJuIHQ9dC5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiBodC5pc1B1cmVQYXJhKHQpP2h0LnJlcGxhY2UodCxcIkxJXCIpOnR9KSksaHQuYXBwZW5kQ2hpbGROb2RlcyhhLHQpLHImJihodC5hcHBlbmRDaGlsZE5vZGVzKGEsay5mcm9tKHIuY2hpbGROb2RlcykpLGh0LnJlbW92ZShyKSksdH19LHtrZXk6XCJyZWxlYXNlTGlzdFwiLHZhbHVlOmZ1bmN0aW9uKHQsbil7dmFyIG89dGhpcyxpPVtdO3JldHVybiBlKCkuZWFjaCh0LChmdW5jdGlvbih0LHIpe3ZhciBhPWsuaGVhZChyKSxzPWsubGFzdChyKSxsPW4/aHQubGFzdEFuY2VzdG9yKGEsaHQuaXNMaXN0KTphLnBhcmVudE5vZGUsYz1sLnBhcmVudE5vZGU7aWYoXCJMSVwiPT09bC5wYXJlbnROb2RlLm5vZGVOYW1lKXIubWFwKChmdW5jdGlvbih0KXt2YXIgZT1vLmZpbmROZXh0U2libGluZ3ModCk7Yy5uZXh0U2libGluZz9jLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHQsYy5uZXh0U2libGluZyk6Yy5wYXJlbnROb2RlLmFwcGVuZENoaWxkKHQpLGUubGVuZ3RoJiYoby53cmFwTGlzdChlLGwubm9kZU5hbWUpLHQuYXBwZW5kQ2hpbGQoZVswXS5wYXJlbnROb2RlKSl9KSksMD09PWwuY2hpbGRyZW4ubGVuZ3RoJiZjLnJlbW92ZUNoaWxkKGwpLDA9PT1jLmNoaWxkTm9kZXMubGVuZ3RoJiZjLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYyk7ZWxzZXt2YXIgdT1sLmNoaWxkTm9kZXMubGVuZ3RoPjE/aHQuc3BsaXRUcmVlKGwse25vZGU6cy5wYXJlbnROb2RlLG9mZnNldDpodC5wb3NpdGlvbihzKSsxfSx7aXNTa2lwUGFkZGluZ0JsYW5rSFRNTDohMH0pOm51bGwsZD1odC5zcGxpdFRyZWUobCx7bm9kZTphLnBhcmVudE5vZGUsb2Zmc2V0Omh0LnBvc2l0aW9uKGEpfSx7aXNTa2lwUGFkZGluZ0JsYW5rSFRNTDohMH0pO3I9bj9odC5saXN0RGVzY2VuZGFudChkLGh0LmlzTGkpOmsuZnJvbShkLmNoaWxkTm9kZXMpLmZpbHRlcihodC5pc0xpKSwhbiYmaHQuaXNMaXN0KGwucGFyZW50Tm9kZSl8fChyPXIubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gaHQucmVwbGFjZSh0LFwiUFwiKX0pKSksZSgpLmVhY2goay5mcm9tKHIpLnJldmVyc2UoKSwoZnVuY3Rpb24odCxlKXtodC5pbnNlcnRBZnRlcihlLGwpfSkpO3ZhciBoPWsuY29tcGFjdChbbCxkLHVdKTtlKCkuZWFjaChoLChmdW5jdGlvbih0LG4pe3ZhciBvPVtuXS5jb25jYXQoaHQubGlzdERlc2NlbmRhbnQobixodC5pc0xpc3QpKTtlKCkuZWFjaChvLnJldmVyc2UoKSwoZnVuY3Rpb24odCxlKXtodC5ub2RlTGVuZ3RoKGUpfHxodC5yZW1vdmUoZSwhMCl9KSl9KSl9aT1pLmNvbmNhdChyKX0pKSxpfX0se2tleTpcImFwcGVuZFRvUHJldmlvdXNcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdC5wcmV2aW91c1NpYmxpbmc/aHQuYXBwZW5kQ2hpbGROb2Rlcyh0LnByZXZpb3VzU2libGluZyxbdF0pOnRoaXMud3JhcExpc3QoW3RdLFwiTElcIil9fSx7a2V5OlwiZmluZExpc3RcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gdD9rLmZpbmQodC5jaGlsZHJlbiwoZnVuY3Rpb24odCl7cmV0dXJuW1wiT0xcIixcIlVMXCJdLmluZGV4T2YodC5ub2RlTmFtZSk+LTF9KSk6bnVsbH19LHtrZXk6XCJmaW5kTmV4dFNpYmxpbmdzXCIsdmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdO3QubmV4dFNpYmxpbmc7KWUucHVzaCh0Lm5leHRTaWJsaW5nKSx0PXQubmV4dFNpYmxpbmc7cmV0dXJuIGV9fV0sbyYmRXQobi5wcm90b3R5cGUsbyksaSYmRXQobixpKSx0fSgpO2Z1bmN0aW9uICR0KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgTnQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5idWxsZXQ9bmV3IEl0LHRoaXMub3B0aW9ucz1lLm9wdGlvbnN9dmFyIG4sbyxpO3JldHVybiBuPXQsbz1be2tleTpcImluc2VydFRhYlwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49aHQuY3JlYXRlVGV4dChuZXcgQXJyYXkoZSsxKS5qb2luKGh0Lk5CU1BfQ0hBUikpOyh0PXQuZGVsZXRlQ29udGVudHMoKSkuaW5zZXJ0Tm9kZShuLCEwKSwodD15dC5jcmVhdGUobixlKSkuc2VsZWN0KCl9fSx7a2V5OlwiaW5zZXJ0UGFyYWdyYXBoXCIsdmFsdWU6ZnVuY3Rpb24odCxuKXtuPShuPShuPW58fHl0LmNyZWF0ZSh0KSkuZGVsZXRlQ29udGVudHMoKSkud3JhcEJvZHlJbmxpbmVXaXRoUGFyYSgpO3ZhciBvLGk9aHQuYW5jZXN0b3Iobi5zYyxodC5pc1BhcmEpO2lmKGkpe2lmKGh0LmlzTGkoaSkmJihodC5pc0VtcHR5KGkpfHxodC5kZWVwZXN0Q2hpbGRJc0VtcHR5KGkpKSlyZXR1cm4gdm9pZCB0aGlzLmJ1bGxldC50b2dnbGVMaXN0KGkucGFyZW50Tm9kZS5ub2RlTmFtZSk7dmFyIHI9bnVsbDtpZigxPT09dGhpcy5vcHRpb25zLmJsb2NrcXVvdGVCcmVha2luZ0xldmVsP3I9aHQuYW5jZXN0b3IoaSxodC5pc0Jsb2NrcXVvdGUpOjI9PT10aGlzLm9wdGlvbnMuYmxvY2txdW90ZUJyZWFraW5nTGV2ZWwmJihyPWh0Lmxhc3RBbmNlc3RvcihpLGh0LmlzQmxvY2txdW90ZSkpLHIpe289ZSgpKGh0LmVtcHR5UGFyYSlbMF0saHQuaXNSaWdodEVkZ2VQb2ludChuLmdldFN0YXJ0UG9pbnQoKSkmJmh0LmlzQlIobi5zYy5uZXh0U2libGluZykmJmUoKShuLnNjLm5leHRTaWJsaW5nKS5yZW1vdmUoKTt2YXIgYT1odC5zcGxpdFRyZWUocixuLmdldFN0YXJ0UG9pbnQoKSx7aXNEaXNjYXJkRW1wdHlTcGxpdHM6ITB9KTthP2EucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobyxhKTpodC5pbnNlcnRBZnRlcihvLHIpfWVsc2V7bz1odC5zcGxpdFRyZWUoaSxuLmdldFN0YXJ0UG9pbnQoKSk7dmFyIHM9aHQubGlzdERlc2NlbmRhbnQoaSxodC5pc0VtcHR5QW5jaG9yKTtzPXMuY29uY2F0KGh0Lmxpc3REZXNjZW5kYW50KG8saHQuaXNFbXB0eUFuY2hvcikpLGUoKS5lYWNoKHMsKGZ1bmN0aW9uKHQsZSl7aHQucmVtb3ZlKGUpfSkpLChodC5pc0hlYWRpbmcobyl8fGh0LmlzUHJlKG8pfHxodC5pc0N1c3RvbVN0eWxlVGFnKG8pKSYmaHQuaXNFbXB0eShvKSYmKG89aHQucmVwbGFjZShvLFwicFwiKSl9fWVsc2V7dmFyIGw9bi5zYy5jaGlsZE5vZGVzW24uc29dO289ZSgpKGh0LmVtcHR5UGFyYSlbMF0sbD9uLnNjLmluc2VydEJlZm9yZShvLGwpOm4uc2MuYXBwZW5kQ2hpbGQobyl9eXQuY3JlYXRlKG8sMCkubm9ybWFsaXplKCkuc2VsZWN0KCkuc2Nyb2xsSW50b1ZpZXcodCl9fV0sbyYmJHQobi5wcm90b3R5cGUsbyksaSYmJHQobixpKSx0fSgpO2Z1bmN0aW9uIFB0KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgUnQ9ZnVuY3Rpb24gdChlLG4sbyxpKXt2YXIgcj17Y29sUG9zOjAscm93UG9zOjB9LGE9W10scz1bXTtmdW5jdGlvbiBsKHQsZSxuLG8saSxyLHMpe3ZhciBsPXtiYXNlUm93Om4sYmFzZUNlbGw6byxpc1Jvd1NwYW46aSxpc0NvbFNwYW46cixpc1ZpcnR1YWw6c307YVt0XXx8KGFbdF09W10pLGFbdF1bZV09bH1mdW5jdGlvbiBjKHQsZSxuLG8pe3JldHVybntiYXNlQ2VsbDp0LmJhc2VDZWxsLGFjdGlvbjplLHZpcnR1YWxUYWJsZTp7cm93SW5kZXg6bixjZWxsSW5kZXg6b319fWZ1bmN0aW9uIHUodCxlKXtpZighYVt0XSlyZXR1cm4gZTtpZighYVt0XVtlXSlyZXR1cm4gZTtmb3IodmFyIG49ZTthW3RdW25dOylpZihuKyssIWFbdF1bbl0pcmV0dXJuIG59ZnVuY3Rpb24gZCh0LGUpe3ZhciBuPXUodC5yb3dJbmRleCxlLmNlbGxJbmRleCksbz1lLmNvbFNwYW4+MSxpPWUucm93U3Bhbj4xLGE9dC5yb3dJbmRleD09PXIucm93UG9zJiZlLmNlbGxJbmRleD09PXIuY29sUG9zO2wodC5yb3dJbmRleCxuLHQsZSxpLG8sITEpO3ZhciBzPWUuYXR0cmlidXRlcy5yb3dTcGFuP3BhcnNlSW50KGUuYXR0cmlidXRlcy5yb3dTcGFuLnZhbHVlLDEwKTowO2lmKHM+MSlmb3IodmFyIGM9MTtjPHM7YysrKXt2YXIgZD10LnJvd0luZGV4K2M7aChkLG4sZSxhKSxsKGQsbix0LGUsITAsbywhMCl9dmFyIGY9ZS5hdHRyaWJ1dGVzLmNvbFNwYW4/cGFyc2VJbnQoZS5hdHRyaWJ1dGVzLmNvbFNwYW4udmFsdWUsMTApOjA7aWYoZj4xKWZvcih2YXIgcD0xO3A8ZjtwKyspe3ZhciBtPXUodC5yb3dJbmRleCxuK3ApO2godC5yb3dJbmRleCxtLGUsYSksbCh0LnJvd0luZGV4LG0sdCxlLGksITAsITApfX1mdW5jdGlvbiBoKHQsZSxuLG8pe3Q9PT1yLnJvd1BvcyYmci5jb2xQb3M+PW4uY2VsbEluZGV4JiZuLmNlbGxJbmRleDw9ZSYmIW8mJnIuY29sUG9zKyt9ZnVuY3Rpb24gZihlKXtzd2l0Y2gobil7Y2FzZSB0LndoZXJlLkNvbHVtbjppZihlLmlzQ29sU3BhbilyZXR1cm4gdC5yZXN1bHRBY3Rpb24uU3VidHJhY3RTcGFuQ291bnQ7YnJlYWs7Y2FzZSB0LndoZXJlLlJvdzppZighZS5pc1ZpcnR1YWwmJmUuaXNSb3dTcGFuKXJldHVybiB0LnJlc3VsdEFjdGlvbi5BZGRDZWxsO2lmKGUuaXNSb3dTcGFuKXJldHVybiB0LnJlc3VsdEFjdGlvbi5TdWJ0cmFjdFNwYW5Db3VudH1yZXR1cm4gdC5yZXN1bHRBY3Rpb24uUmVtb3ZlQ2VsbH1mdW5jdGlvbiBwKGUpe3N3aXRjaChuKXtjYXNlIHQud2hlcmUuQ29sdW1uOmlmKGUuaXNDb2xTcGFuKXJldHVybiB0LnJlc3VsdEFjdGlvbi5TdW1TcGFuQ291bnQ7aWYoZS5pc1Jvd1NwYW4mJmUuaXNWaXJ0dWFsKXJldHVybiB0LnJlc3VsdEFjdGlvbi5JZ25vcmU7YnJlYWs7Y2FzZSB0LndoZXJlLlJvdzppZihlLmlzUm93U3BhbilyZXR1cm4gdC5yZXN1bHRBY3Rpb24uU3VtU3BhbkNvdW50O2lmKGUuaXNDb2xTcGFuJiZlLmlzVmlydHVhbClyZXR1cm4gdC5yZXN1bHRBY3Rpb24uSWdub3JlfXJldHVybiB0LnJlc3VsdEFjdGlvbi5BZGRDZWxsfXRoaXMuZ2V0QWN0aW9uTGlzdD1mdW5jdGlvbigpe2Zvcih2YXIgZT1uPT09dC53aGVyZS5Sb3c/ci5yb3dQb3M6LTEsaT1uPT09dC53aGVyZS5Db2x1bW4/ci5jb2xQb3M6LTEsbD0wLHU9ITA7dTspe3ZhciBkPWU+PTA/ZTpsLGg9aT49MD9pOmwsbT1hW2RdO2lmKCFtKXJldHVybiB1PSExLHM7dmFyIHY9bVtoXTtpZighdilyZXR1cm4gdT0hMSxzO3ZhciBnPXQucmVzdWx0QWN0aW9uLklnbm9yZTtzd2l0Y2gobyl7Y2FzZSB0LnJlcXVlc3RBY3Rpb24uQWRkOmc9cCh2KTticmVhaztjYXNlIHQucmVxdWVzdEFjdGlvbi5EZWxldGU6Zz1mKHYpfXMucHVzaChjKHYsZyxkLGgpKSxsKyt9cmV0dXJuIHN9LGUmJmUudGFnTmFtZSYmKFwidGRcIj09PWUudGFnTmFtZS50b0xvd2VyQ2FzZSgpfHxcInRoXCI9PT1lLnRhZ05hbWUudG9Mb3dlckNhc2UoKSkmJihyLmNvbFBvcz1lLmNlbGxJbmRleCxlLnBhcmVudEVsZW1lbnQmJmUucGFyZW50RWxlbWVudC50YWdOYW1lJiZcInRyXCI9PT1lLnBhcmVudEVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpJiYoci5yb3dQb3M9ZS5wYXJlbnRFbGVtZW50LnJvd0luZGV4KSksZnVuY3Rpb24oKXtmb3IodmFyIHQ9aS5yb3dzLGU9MDtlPHQubGVuZ3RoO2UrKylmb3IodmFyIG49dFtlXS5jZWxscyxvPTA7bzxuLmxlbmd0aDtvKyspZCh0W2VdLG5bb10pfSgpfTtSdC53aGVyZT17Um93OjAsQ29sdW1uOjF9LFJ0LnJlcXVlc3RBY3Rpb249e0FkZDowLERlbGV0ZToxfSxSdC5yZXN1bHRBY3Rpb249e0lnbm9yZTowLFN1YnRyYWN0U3BhbkNvdW50OjEsUmVtb3ZlQ2VsbDoyLEFkZENlbGw6MyxTdW1TcGFuQ291bnQ6NH07dmFyIEx0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCgpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCl9dmFyIG4sbyxpO3JldHVybiBuPXQsbz1be2tleTpcInRhYlwiLHZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG49aHQuYW5jZXN0b3IodC5jb21tb25BbmNlc3RvcigpLGh0LmlzQ2VsbCksbz1odC5hbmNlc3RvcihuLGh0LmlzVGFibGUpLGk9aHQubGlzdERlc2NlbmRhbnQobyxodC5pc0NlbGwpLHI9a1tlP1wicHJldlwiOlwibmV4dFwiXShpLG4pO3ImJnl0LmNyZWF0ZShyLDApLnNlbGVjdCgpfX0se2tleTpcImFkZFJvd1wiLHZhbHVlOmZ1bmN0aW9uKHQsbil7Zm9yKHZhciBvPWh0LmFuY2VzdG9yKHQuY29tbW9uQW5jZXN0b3IoKSxodC5pc0NlbGwpLGk9ZSgpKG8pLmNsb3Nlc3QoXCJ0clwiKSxyPXRoaXMucmVjb3ZlckF0dHJpYnV0ZXMoaSksYT1lKCkoXCI8dHJcIityK1wiPjwvdHI+XCIpLHM9bmV3IFJ0KG8sUnQud2hlcmUuUm93LFJ0LnJlcXVlc3RBY3Rpb24uQWRkLGUoKShpKS5jbG9zZXN0KFwidGFibGVcIilbMF0pLmdldEFjdGlvbkxpc3QoKSxsPTA7bDxzLmxlbmd0aDtsKyspe3ZhciBjPXNbbF0sdT10aGlzLnJlY292ZXJBdHRyaWJ1dGVzKGMuYmFzZUNlbGwpO3N3aXRjaChjLmFjdGlvbil7Y2FzZSBSdC5yZXN1bHRBY3Rpb24uQWRkQ2VsbDphLmFwcGVuZChcIjx0ZFwiK3UrXCI+XCIraHQuYmxhbmsrXCI8L3RkPlwiKTticmVhaztjYXNlIFJ0LnJlc3VsdEFjdGlvbi5TdW1TcGFuQ291bnQ6aWYoXCJ0b3BcIj09PW4mJihjLmJhc2VDZWxsLnBhcmVudD9jLmJhc2VDZWxsLmNsb3Nlc3QoXCJ0clwiKS5yb3dJbmRleDowKTw9aVswXS5yb3dJbmRleCl7dmFyIGQ9ZSgpKFwiPGRpdj48L2Rpdj5cIikuYXBwZW5kKGUoKShcIjx0ZFwiK3UrXCI+XCIraHQuYmxhbmsrXCI8L3RkPlwiKS5yZW1vdmVBdHRyKFwicm93c3BhblwiKSkuaHRtbCgpO2EuYXBwZW5kKGQpO2JyZWFrfXZhciBoPXBhcnNlSW50KGMuYmFzZUNlbGwucm93U3BhbiwxMCk7aCsrLGMuYmFzZUNlbGwuc2V0QXR0cmlidXRlKFwicm93U3BhblwiLGgpfX1pZihcInRvcFwiPT09bilpLmJlZm9yZShhKTtlbHNle2lmKG8ucm93U3Bhbj4xKXt2YXIgZj1pWzBdLnJvd0luZGV4KyhvLnJvd1NwYW4tMik7cmV0dXJuIHZvaWQgZSgpKGUoKShpKS5wYXJlbnQoKS5maW5kKFwidHJcIilbZl0pLmFmdGVyKGUoKShhKSl9aS5hZnRlcihhKX19fSx7a2V5OlwiYWRkQ29sXCIsdmFsdWU6ZnVuY3Rpb24odCxuKXt2YXIgbz1odC5hbmNlc3Rvcih0LmNvbW1vbkFuY2VzdG9yKCksaHQuaXNDZWxsKSxpPWUoKShvKS5jbG9zZXN0KFwidHJcIik7ZSgpKGkpLnNpYmxpbmdzKCkucHVzaChpKTtmb3IodmFyIHI9bmV3IFJ0KG8sUnQud2hlcmUuQ29sdW1uLFJ0LnJlcXVlc3RBY3Rpb24uQWRkLGUoKShpKS5jbG9zZXN0KFwidGFibGVcIilbMF0pLmdldEFjdGlvbkxpc3QoKSxhPTA7YTxyLmxlbmd0aDthKyspe3ZhciBzPXJbYV0sbD10aGlzLnJlY292ZXJBdHRyaWJ1dGVzKHMuYmFzZUNlbGwpO3N3aXRjaChzLmFjdGlvbil7Y2FzZSBSdC5yZXN1bHRBY3Rpb24uQWRkQ2VsbDpcInJpZ2h0XCI9PT1uP2UoKShzLmJhc2VDZWxsKS5hZnRlcihcIjx0ZFwiK2wrXCI+XCIraHQuYmxhbmsrXCI8L3RkPlwiKTplKCkocy5iYXNlQ2VsbCkuYmVmb3JlKFwiPHRkXCIrbCtcIj5cIitodC5ibGFuaytcIjwvdGQ+XCIpO2JyZWFrO2Nhc2UgUnQucmVzdWx0QWN0aW9uLlN1bVNwYW5Db3VudDppZihcInJpZ2h0XCI9PT1uKXt2YXIgYz1wYXJzZUludChzLmJhc2VDZWxsLmNvbFNwYW4sMTApO2MrKyxzLmJhc2VDZWxsLnNldEF0dHJpYnV0ZShcImNvbFNwYW5cIixjKX1lbHNlIGUoKShzLmJhc2VDZWxsKS5iZWZvcmUoXCI8dGRcIitsK1wiPlwiK2h0LmJsYW5rK1wiPC90ZD5cIil9fX19LHtrZXk6XCJyZWNvdmVyQXR0cmlidXRlc1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPVwiXCI7aWYoIXQpcmV0dXJuIGU7Zm9yKHZhciBuPXQuYXR0cmlidXRlc3x8W10sbz0wO288bi5sZW5ndGg7bysrKVwiaWRcIiE9PW5bb10ubmFtZS50b0xvd2VyQ2FzZSgpJiZuW29dLnNwZWNpZmllZCYmKGUrPVwiIFwiK25bb10ubmFtZStcIj0nXCIrbltvXS52YWx1ZStcIidcIik7cmV0dXJuIGV9fSx7a2V5OlwiZGVsZXRlUm93XCIsdmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBuPWh0LmFuY2VzdG9yKHQuY29tbW9uQW5jZXN0b3IoKSxodC5pc0NlbGwpLG89ZSgpKG4pLmNsb3Nlc3QoXCJ0clwiKSxpPW8uY2hpbGRyZW4oXCJ0ZCwgdGhcIikuaW5kZXgoZSgpKG4pKSxyPW9bMF0ucm93SW5kZXgsYT1uZXcgUnQobixSdC53aGVyZS5Sb3csUnQucmVxdWVzdEFjdGlvbi5EZWxldGUsZSgpKG8pLmNsb3Nlc3QoXCJ0YWJsZVwiKVswXSkuZ2V0QWN0aW9uTGlzdCgpLHM9MDtzPGEubGVuZ3RoO3MrKylpZihhW3NdKXt2YXIgbD1hW3NdLmJhc2VDZWxsLGM9YVtzXS52aXJ0dWFsVGFibGUsdT1sLnJvd1NwYW4mJmwucm93U3Bhbj4xLGQ9dT9wYXJzZUludChsLnJvd1NwYW4sMTApOjA7c3dpdGNoKGFbc10uYWN0aW9uKXtjYXNlIFJ0LnJlc3VsdEFjdGlvbi5JZ25vcmU6Y29udGludWU7Y2FzZSBSdC5yZXN1bHRBY3Rpb24uQWRkQ2VsbDp2YXIgaD1vLm5leHQoXCJ0clwiKVswXTtpZighaCljb250aW51ZTt2YXIgZj1vWzBdLmNlbGxzW2ldO3UmJihkPjI/KGQtLSxoLmluc2VydEJlZm9yZShmLGguY2VsbHNbaV0pLGguY2VsbHNbaV0uc2V0QXR0cmlidXRlKFwicm93U3BhblwiLGQpLGguY2VsbHNbaV0uaW5uZXJIVE1MPVwiXCIpOjI9PT1kJiYoaC5pbnNlcnRCZWZvcmUoZixoLmNlbGxzW2ldKSxoLmNlbGxzW2ldLnJlbW92ZUF0dHJpYnV0ZShcInJvd1NwYW5cIiksaC5jZWxsc1tpXS5pbm5lckhUTUw9XCJcIikpO2NvbnRpbnVlO2Nhc2UgUnQucmVzdWx0QWN0aW9uLlN1YnRyYWN0U3BhbkNvdW50OnUmJihkPjI/KGQtLSxsLnNldEF0dHJpYnV0ZShcInJvd1NwYW5cIixkKSxjLnJvd0luZGV4IT09ciYmbC5jZWxsSW5kZXg9PT1pJiYobC5pbm5lckhUTUw9XCJcIikpOjI9PT1kJiYobC5yZW1vdmVBdHRyaWJ1dGUoXCJyb3dTcGFuXCIpLGMucm93SW5kZXghPT1yJiZsLmNlbGxJbmRleD09PWkmJihsLmlubmVySFRNTD1cIlwiKSkpO2NvbnRpbnVlO2Nhc2UgUnQucmVzdWx0QWN0aW9uLlJlbW92ZUNlbGw6Y29udGludWV9fW8ucmVtb3ZlKCl9fSx7a2V5OlwiZGVsZXRlQ29sXCIsdmFsdWU6ZnVuY3Rpb24odCl7Zm9yKHZhciBuPWh0LmFuY2VzdG9yKHQuY29tbW9uQW5jZXN0b3IoKSxodC5pc0NlbGwpLG89ZSgpKG4pLmNsb3Nlc3QoXCJ0clwiKSxpPW8uY2hpbGRyZW4oXCJ0ZCwgdGhcIikuaW5kZXgoZSgpKG4pKSxyPW5ldyBSdChuLFJ0LndoZXJlLkNvbHVtbixSdC5yZXF1ZXN0QWN0aW9uLkRlbGV0ZSxlKCkobykuY2xvc2VzdChcInRhYmxlXCIpWzBdKS5nZXRBY3Rpb25MaXN0KCksYT0wO2E8ci5sZW5ndGg7YSsrKWlmKHJbYV0pc3dpdGNoKHJbYV0uYWN0aW9uKXtjYXNlIFJ0LnJlc3VsdEFjdGlvbi5JZ25vcmU6Y29udGludWU7Y2FzZSBSdC5yZXN1bHRBY3Rpb24uU3VidHJhY3RTcGFuQ291bnQ6dmFyIHM9clthXS5iYXNlQ2VsbDtpZihzLmNvbFNwYW4mJnMuY29sU3Bhbj4xKXt2YXIgbD1zLmNvbFNwYW4/cGFyc2VJbnQocy5jb2xTcGFuLDEwKTowO2w+Mj8obC0tLHMuc2V0QXR0cmlidXRlKFwiY29sU3BhblwiLGwpLHMuY2VsbEluZGV4PT09aSYmKHMuaW5uZXJIVE1MPVwiXCIpKToyPT09bCYmKHMucmVtb3ZlQXR0cmlidXRlKFwiY29sU3BhblwiKSxzLmNlbGxJbmRleD09PWkmJihzLmlubmVySFRNTD1cIlwiKSl9Y29udGludWU7Y2FzZSBSdC5yZXN1bHRBY3Rpb24uUmVtb3ZlQ2VsbDpodC5yZW1vdmUoclthXS5iYXNlQ2VsbCwhMCk7Y29udGludWV9fX0se2tleTpcImNyZWF0ZVRhYmxlXCIsdmFsdWU6ZnVuY3Rpb24odCxuLG8pe2Zvcih2YXIgaSxyPVtdLGE9MDthPHQ7YSsrKXIucHVzaChcIjx0ZD5cIitodC5ibGFuaytcIjwvdGQ+XCIpO2k9ci5qb2luKFwiXCIpO2Zvcih2YXIgcyxsPVtdLGM9MDtjPG47YysrKWwucHVzaChcIjx0cj5cIitpK1wiPC90cj5cIik7cz1sLmpvaW4oXCJcIik7dmFyIHU9ZSgpKFwiPHRhYmxlPlwiK3MrXCI8L3RhYmxlPlwiKTtyZXR1cm4gbyYmby50YWJsZUNsYXNzTmFtZSYmdS5hZGRDbGFzcyhvLnRhYmxlQ2xhc3NOYW1lKSx1WzBdfX0se2tleTpcImRlbGV0ZVRhYmxlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIG49aHQuYW5jZXN0b3IodC5jb21tb25BbmNlc3RvcigpLGh0LmlzQ2VsbCk7ZSgpKG4pLmNsb3Nlc3QoXCJ0YWJsZVwiKS5yZW1vdmUoKX19XSxvJiZQdChuLnByb3RvdHlwZSxvKSxpJiZQdChuLGkpLHR9KCk7ZnVuY3Rpb24gQXQodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fXZhciBGdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQobil7dmFyIG89dGhpczshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLHRoaXMuY29udGV4dD1uLHRoaXMuJG5vdGU9bi5sYXlvdXRJbmZvLm5vdGUsdGhpcy4kZWRpdG9yPW4ubGF5b3V0SW5mby5lZGl0b3IsdGhpcy4kZWRpdGFibGU9bi5sYXlvdXRJbmZvLmVkaXRhYmxlLHRoaXMub3B0aW9ucz1uLm9wdGlvbnMsdGhpcy5sYW5nPXRoaXMub3B0aW9ucy5sYW5nSW5mbyx0aGlzLmVkaXRhYmxlPXRoaXMuJGVkaXRhYmxlWzBdLHRoaXMubGFzdFJhbmdlPW51bGwsdGhpcy5zbmFwc2hvdD1udWxsLHRoaXMuc3R5bGU9bmV3IFR0LHRoaXMudGFibGU9bmV3IEx0LHRoaXMudHlwaW5nPW5ldyBOdChuKSx0aGlzLmJ1bGxldD1uZXcgSXQsdGhpcy5oaXN0b3J5PW5ldyB4dChuKSx0aGlzLmNvbnRleHQubWVtbyhcImhlbHAuZXNjYXBlXCIsdGhpcy5sYW5nLmhlbHAuZXNjYXBlKSx0aGlzLmNvbnRleHQubWVtbyhcImhlbHAudW5kb1wiLHRoaXMubGFuZy5oZWxwLnVuZG8pLHRoaXMuY29udGV4dC5tZW1vKFwiaGVscC5yZWRvXCIsdGhpcy5sYW5nLmhlbHAucmVkbyksdGhpcy5jb250ZXh0Lm1lbW8oXCJoZWxwLnRhYlwiLHRoaXMubGFuZy5oZWxwLnRhYiksdGhpcy5jb250ZXh0Lm1lbW8oXCJoZWxwLnVudGFiXCIsdGhpcy5sYW5nLmhlbHAudW50YWIpLHRoaXMuY29udGV4dC5tZW1vKFwiaGVscC5pbnNlcnRQYXJhZ3JhcGhcIix0aGlzLmxhbmcuaGVscC5pbnNlcnRQYXJhZ3JhcGgpLHRoaXMuY29udGV4dC5tZW1vKFwiaGVscC5pbnNlcnRPcmRlcmVkTGlzdFwiLHRoaXMubGFuZy5oZWxwLmluc2VydE9yZGVyZWRMaXN0KSx0aGlzLmNvbnRleHQubWVtbyhcImhlbHAuaW5zZXJ0VW5vcmRlcmVkTGlzdFwiLHRoaXMubGFuZy5oZWxwLmluc2VydFVub3JkZXJlZExpc3QpLHRoaXMuY29udGV4dC5tZW1vKFwiaGVscC5pbmRlbnRcIix0aGlzLmxhbmcuaGVscC5pbmRlbnQpLHRoaXMuY29udGV4dC5tZW1vKFwiaGVscC5vdXRkZW50XCIsdGhpcy5sYW5nLmhlbHAub3V0ZGVudCksdGhpcy5jb250ZXh0Lm1lbW8oXCJoZWxwLmZvcm1hdFBhcmFcIix0aGlzLmxhbmcuaGVscC5mb3JtYXRQYXJhKSx0aGlzLmNvbnRleHQubWVtbyhcImhlbHAuaW5zZXJ0SG9yaXpvbnRhbFJ1bGVcIix0aGlzLmxhbmcuaGVscC5pbnNlcnRIb3Jpem9udGFsUnVsZSksdGhpcy5jb250ZXh0Lm1lbW8oXCJoZWxwLmZvbnROYW1lXCIsdGhpcy5sYW5nLmhlbHAuZm9udE5hbWUpO2Zvcih2YXIgaT1bXCJib2xkXCIsXCJpdGFsaWNcIixcInVuZGVybGluZVwiLFwic3RyaWtldGhyb3VnaFwiLFwic3VwZXJzY3JpcHRcIixcInN1YnNjcmlwdFwiLFwianVzdGlmeUxlZnRcIixcImp1c3RpZnlDZW50ZXJcIixcImp1c3RpZnlSaWdodFwiLFwianVzdGlmeUZ1bGxcIixcImZvcm1hdEJsb2NrXCIsXCJyZW1vdmVGb3JtYXRcIixcImJhY2tDb2xvclwiXSxyPTAsYT1pLmxlbmd0aDtyPGE7cisrKXRoaXNbaVtyXV09ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe28uYmVmb3JlQ29tbWFuZCgpLGRvY3VtZW50LmV4ZWNDb21tYW5kKHQsITEsZSksby5hZnRlckNvbW1hbmQoITApfX0oaVtyXSksdGhpcy5jb250ZXh0Lm1lbW8oXCJoZWxwLlwiK2lbcl0sdGhpcy5sYW5nLmhlbHBbaVtyXV0pO3RoaXMuZm9udE5hbWU9dGhpcy53cmFwQ29tbWFuZCgoZnVuY3Rpb24odCl7cmV0dXJuIG8uZm9udFN0eWxpbmcoXCJmb250LWZhbWlseVwiLGYudmFsaWRGb250TmFtZSh0KSl9KSksdGhpcy5mb250U2l6ZT10aGlzLndyYXBDb21tYW5kKChmdW5jdGlvbih0KXt2YXIgZT1vLmN1cnJlbnRTdHlsZSgpW1wiZm9udC1zaXplLXVuaXRcIl07cmV0dXJuIG8uZm9udFN0eWxpbmcoXCJmb250LXNpemVcIix0K2UpfSkpLHRoaXMuZm9udFNpemVVbml0PXRoaXMud3JhcENvbW1hbmQoKGZ1bmN0aW9uKHQpe3ZhciBlPW8uY3VycmVudFN0eWxlKClbXCJmb250LXNpemVcIl07cmV0dXJuIG8uZm9udFN0eWxpbmcoXCJmb250LXNpemVcIixlK3QpfSkpO2Zvcih2YXIgcz0xO3M8PTY7cysrKXRoaXNbXCJmb3JtYXRIXCIrc109ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7by5mb3JtYXRCbG9jayhcIkhcIit0KX19KHMpLHRoaXMuY29udGV4dC5tZW1vKFwiaGVscC5mb3JtYXRIXCIrcyx0aGlzLmxhbmcuaGVscFtcImZvcm1hdEhcIitzXSk7dGhpcy5pbnNlcnRQYXJhZ3JhcGg9dGhpcy53cmFwQ29tbWFuZCgoZnVuY3Rpb24oKXtvLnR5cGluZy5pbnNlcnRQYXJhZ3JhcGgoby5lZGl0YWJsZSl9KSksdGhpcy5pbnNlcnRPcmRlcmVkTGlzdD10aGlzLndyYXBDb21tYW5kKChmdW5jdGlvbigpe28uYnVsbGV0Lmluc2VydE9yZGVyZWRMaXN0KG8uZWRpdGFibGUpfSkpLHRoaXMuaW5zZXJ0VW5vcmRlcmVkTGlzdD10aGlzLndyYXBDb21tYW5kKChmdW5jdGlvbigpe28uYnVsbGV0Lmluc2VydFVub3JkZXJlZExpc3Qoby5lZGl0YWJsZSl9KSksdGhpcy5pbmRlbnQ9dGhpcy53cmFwQ29tbWFuZCgoZnVuY3Rpb24oKXtvLmJ1bGxldC5pbmRlbnQoby5lZGl0YWJsZSl9KSksdGhpcy5vdXRkZW50PXRoaXMud3JhcENvbW1hbmQoKGZ1bmN0aW9uKCl7by5idWxsZXQub3V0ZGVudChvLmVkaXRhYmxlKX0pKSx0aGlzLmluc2VydE5vZGU9dGhpcy53cmFwQ29tbWFuZCgoZnVuY3Rpb24odCl7by5pc0xpbWl0ZWQoZSgpKHQpLnRleHQoKS5sZW5ndGgpfHwoby5nZXRMYXN0UmFuZ2UoKS5pbnNlcnROb2RlKHQpLG8uc2V0TGFzdFJhbmdlKHl0LmNyZWF0ZUZyb21Ob2RlQWZ0ZXIodCkuc2VsZWN0KCkpKX0pKSx0aGlzLmluc2VydFRleHQ9dGhpcy53cmFwQ29tbWFuZCgoZnVuY3Rpb24odCl7aWYoIW8uaXNMaW1pdGVkKHQubGVuZ3RoKSl7dmFyIGU9by5nZXRMYXN0UmFuZ2UoKS5pbnNlcnROb2RlKGh0LmNyZWF0ZVRleHQodCkpO28uc2V0TGFzdFJhbmdlKHl0LmNyZWF0ZShlLGh0Lm5vZGVMZW5ndGgoZSkpLnNlbGVjdCgpKX19KSksdGhpcy5wYXN0ZUhUTUw9dGhpcy53cmFwQ29tbWFuZCgoZnVuY3Rpb24odCl7aWYoIW8uaXNMaW1pdGVkKHQubGVuZ3RoKSl7dD1vLmNvbnRleHQuaW52b2tlKFwiY29kZXZpZXcucHVyaWZ5XCIsdCk7dmFyIGU9by5nZXRMYXN0UmFuZ2UoKS5wYXN0ZUhUTUwodCk7by5zZXRMYXN0UmFuZ2UoeXQuY3JlYXRlRnJvbU5vZGVBZnRlcihrLmxhc3QoZSkpLnNlbGVjdCgpKX19KSksdGhpcy5mb3JtYXRCbG9jaz10aGlzLndyYXBDb21tYW5kKChmdW5jdGlvbih0LGUpe3ZhciBuPW8ub3B0aW9ucy5jYWxsYmFja3Mub25BcHBseUN1c3RvbVN0eWxlO24/bi5jYWxsKG8sZSxvLmNvbnRleHQsby5vbkZvcm1hdEJsb2NrKTpvLm9uRm9ybWF0QmxvY2sodCxlKX0pKSx0aGlzLmluc2VydEhvcml6b250YWxSdWxlPXRoaXMud3JhcENvbW1hbmQoKGZ1bmN0aW9uKCl7dmFyIHQ9by5nZXRMYXN0UmFuZ2UoKS5pbnNlcnROb2RlKGh0LmNyZWF0ZShcIkhSXCIpKTt0Lm5leHRTaWJsaW5nJiZvLnNldExhc3RSYW5nZSh5dC5jcmVhdGUodC5uZXh0U2libGluZywwKS5ub3JtYWxpemUoKS5zZWxlY3QoKSl9KSksdGhpcy5saW5lSGVpZ2h0PXRoaXMud3JhcENvbW1hbmQoKGZ1bmN0aW9uKHQpe28uc3R5bGUuc3R5bGVQYXJhKG8uZ2V0TGFzdFJhbmdlKCkse2xpbmVIZWlnaHQ6dH0pfSkpLHRoaXMuY3JlYXRlTGluaz10aGlzLndyYXBDb21tYW5kKChmdW5jdGlvbih0KXt2YXIgbj10LnVybCxpPXQudGV4dCxyPXQuaXNOZXdXaW5kb3csYT10LmNoZWNrUHJvdG9jb2wscz10LnJhbmdlfHxvLmdldExhc3RSYW5nZSgpLGw9aS5sZW5ndGgtcy50b1N0cmluZygpLmxlbmd0aDtpZighKGw+MCYmby5pc0xpbWl0ZWQobCkpKXt2YXIgYz1zLnRvU3RyaW5nKCkhPT1pO1wic3RyaW5nXCI9PXR5cGVvZiBuJiYobj1uLnRyaW0oKSksby5vcHRpb25zLm9uQ3JlYXRlTGluaz9uPW8ub3B0aW9ucy5vbkNyZWF0ZUxpbmsobik6YSYmKG49L14oW0EtWmEtel1bQS1aYS16MC05Ky0uXSpcXDp8I3xcXC8pLy50ZXN0KG4pP246by5vcHRpb25zLmRlZmF1bHRQcm90b2NvbCtuKTt2YXIgdT1bXTtpZihjKXt2YXIgZD0ocz1zLmRlbGV0ZUNvbnRlbnRzKCkpLmluc2VydE5vZGUoZSgpKFwiPEE+XCIraStcIjwvQT5cIilbMF0pO3UucHVzaChkKX1lbHNlIHU9by5zdHlsZS5zdHlsZU5vZGVzKHMse25vZGVOYW1lOlwiQVwiLGV4cGFuZENsb3Nlc3RTaWJsaW5nOiEwLG9ubHlQYXJ0aWFsQ29udGFpbnM6ITB9KTtlKCkuZWFjaCh1LChmdW5jdGlvbih0LG8pe2UoKShvKS5hdHRyKFwiaHJlZlwiLG4pLHI/ZSgpKG8pLmF0dHIoXCJ0YXJnZXRcIixcIl9ibGFua1wiKTplKCkobykucmVtb3ZlQXR0cihcInRhcmdldFwiKX0pKSxvLnNldExhc3RSYW5nZShvLmNyZWF0ZVJhbmdlRnJvbUxpc3QodSkuc2VsZWN0KCkpfX0pKSx0aGlzLmNvbG9yPXRoaXMud3JhcENvbW1hbmQoKGZ1bmN0aW9uKHQpe3ZhciBlPXQuZm9yZUNvbG9yLG49dC5iYWNrQ29sb3I7ZSYmZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJmb3JlQ29sb3JcIiwhMSxlKSxuJiZkb2N1bWVudC5leGVjQ29tbWFuZChcImJhY2tDb2xvclwiLCExLG4pfSkpLHRoaXMuZm9yZUNvbG9yPXRoaXMud3JhcENvbW1hbmQoKGZ1bmN0aW9uKHQpe2RvY3VtZW50LmV4ZWNDb21tYW5kKFwiZm9yZUNvbG9yXCIsITEsdCl9KSksdGhpcy5pbnNlcnRUYWJsZT10aGlzLndyYXBDb21tYW5kKChmdW5jdGlvbih0KXt2YXIgZT10LnNwbGl0KFwieFwiKTtvLmdldExhc3RSYW5nZSgpLmRlbGV0ZUNvbnRlbnRzKCkuaW5zZXJ0Tm9kZShvLnRhYmxlLmNyZWF0ZVRhYmxlKGVbMF0sZVsxXSxvLm9wdGlvbnMpKX0pKSx0aGlzLnJlbW92ZU1lZGlhPXRoaXMud3JhcENvbW1hbmQoKGZ1bmN0aW9uKCl7dmFyIHQ9ZSgpKG8ucmVzdG9yZVRhcmdldCgpKS5wYXJlbnQoKTt0LmNsb3Nlc3QoXCJmaWd1cmVcIikubGVuZ3RoP3QuY2xvc2VzdChcImZpZ3VyZVwiKS5yZW1vdmUoKTp0PWUoKShvLnJlc3RvcmVUYXJnZXQoKSkuZGV0YWNoKCksby5jb250ZXh0LnRyaWdnZXJFdmVudChcIm1lZGlhLmRlbGV0ZVwiLHQsby4kZWRpdGFibGUpfSkpLHRoaXMuZmxvYXRNZT10aGlzLndyYXBDb21tYW5kKChmdW5jdGlvbih0KXt2YXIgbj1lKCkoby5yZXN0b3JlVGFyZ2V0KCkpO24udG9nZ2xlQ2xhc3MoXCJub3RlLWZsb2F0LWxlZnRcIixcImxlZnRcIj09PXQpLG4udG9nZ2xlQ2xhc3MoXCJub3RlLWZsb2F0LXJpZ2h0XCIsXCJyaWdodFwiPT09dCksbi5jc3MoXCJmbG9hdFwiLFwibm9uZVwiPT09dD9cIlwiOnQpfSkpLHRoaXMucmVzaXplPXRoaXMud3JhcENvbW1hbmQoKGZ1bmN0aW9uKHQpe3ZhciBuPWUoKShvLnJlc3RvcmVUYXJnZXQoKSk7MD09PSh0PXBhcnNlRmxvYXQodCkpP24uY3NzKFwid2lkdGhcIixcIlwiKTpuLmNzcyh7d2lkdGg6MTAwKnQrXCIlXCIsaGVpZ2h0OlwiXCJ9KX0pKX12YXIgbixvLGk7cmV0dXJuIG49dCxvPVt7a2V5OlwiaW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLiRlZGl0YWJsZS5vbihcImtleWRvd25cIiwoZnVuY3Rpb24oZSl7aWYoZS5rZXlDb2RlPT09d3QuY29kZS5FTlRFUiYmdC5jb250ZXh0LnRyaWdnZXJFdmVudChcImVudGVyXCIsZSksdC5jb250ZXh0LnRyaWdnZXJFdmVudChcImtleWRvd25cIixlKSx0LnNuYXBzaG90PXQuaGlzdG9yeS5tYWtlU25hcHNob3QoKSx0Lmhhc0tleVNob3J0Q3V0PSExLGUuaXNEZWZhdWx0UHJldmVudGVkKCl8fCh0Lm9wdGlvbnMuc2hvcnRjdXRzP3QuaGFzS2V5U2hvcnRDdXQ9dC5oYW5kbGVLZXlNYXAoZSk6dC5wcmV2ZW50RGVmYXVsdEVkaXRhYmxlU2hvcnRDdXRzKGUpKSx0LmlzTGltaXRlZCgxLGUpKXt2YXIgbj10LmdldExhc3RSYW5nZSgpO2lmKG4uZW8tbi5zbz09MClyZXR1cm4hMX10LnNldExhc3RSYW5nZSgpLHQub3B0aW9ucy5yZWNvcmRFdmVyeUtleXN0cm9rZSYmITE9PT10Lmhhc0tleVNob3J0Q3V0JiZ0Lmhpc3RvcnkucmVjb3JkVW5kbygpfSkpLm9uKFwia2V5dXBcIiwoZnVuY3Rpb24oZSl7dC5zZXRMYXN0UmFuZ2UoKSx0LmNvbnRleHQudHJpZ2dlckV2ZW50KFwia2V5dXBcIixlKX0pKS5vbihcImZvY3VzXCIsKGZ1bmN0aW9uKGUpe3Quc2V0TGFzdFJhbmdlKCksdC5jb250ZXh0LnRyaWdnZXJFdmVudChcImZvY3VzXCIsZSl9KSkub24oXCJibHVyXCIsKGZ1bmN0aW9uKGUpe3QuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJibHVyXCIsZSl9KSkub24oXCJtb3VzZWRvd25cIiwoZnVuY3Rpb24oZSl7dC5jb250ZXh0LnRyaWdnZXJFdmVudChcIm1vdXNlZG93blwiLGUpfSkpLm9uKFwibW91c2V1cFwiLChmdW5jdGlvbihlKXt0LnNldExhc3RSYW5nZSgpLHQuaGlzdG9yeS5yZWNvcmRVbmRvKCksdC5jb250ZXh0LnRyaWdnZXJFdmVudChcIm1vdXNldXBcIixlKX0pKS5vbihcInNjcm9sbFwiLChmdW5jdGlvbihlKXt0LmNvbnRleHQudHJpZ2dlckV2ZW50KFwic2Nyb2xsXCIsZSl9KSkub24oXCJwYXN0ZVwiLChmdW5jdGlvbihlKXt0LnNldExhc3RSYW5nZSgpLHQuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJwYXN0ZVwiLGUpfSkpLm9uKFwiaW5wdXRcIiwoZnVuY3Rpb24oKXt0LmlzTGltaXRlZCgwKSYmdC5zbmFwc2hvdCYmdC5oaXN0b3J5LmFwcGx5U25hcHNob3QodC5zbmFwc2hvdCl9KSksdGhpcy4kZWRpdGFibGUuYXR0cihcInNwZWxsY2hlY2tcIix0aGlzLm9wdGlvbnMuc3BlbGxDaGVjayksdGhpcy4kZWRpdGFibGUuYXR0cihcImF1dG9jb3JyZWN0XCIsdGhpcy5vcHRpb25zLnNwZWxsQ2hlY2spLHRoaXMub3B0aW9ucy5kaXNhYmxlR3JhbW1hciYmdGhpcy4kZWRpdGFibGUuYXR0cihcImRhdGEtZ3JhbW1cIiwhMSksdGhpcy4kZWRpdGFibGUuaHRtbChodC5odG1sKHRoaXMuJG5vdGUpfHxodC5lbXB0eVBhcmEpLHRoaXMuJGVkaXRhYmxlLm9uKGYuaW5wdXRFdmVudE5hbWUsbS5kZWJvdW5jZSgoZnVuY3Rpb24oKXt0LmNvbnRleHQudHJpZ2dlckV2ZW50KFwiY2hhbmdlXCIsdC4kZWRpdGFibGUuaHRtbCgpLHQuJGVkaXRhYmxlKX0pLDEwKSksdGhpcy4kZWRpdGFibGUub24oXCJmb2N1c2luXCIsKGZ1bmN0aW9uKGUpe3QuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJmb2N1c2luXCIsZSl9KSkub24oXCJmb2N1c291dFwiLChmdW5jdGlvbihlKXt0LmNvbnRleHQudHJpZ2dlckV2ZW50KFwiZm9jdXNvdXRcIixlKX0pKSx0aGlzLm9wdGlvbnMuYWlyTW9kZT90aGlzLm9wdGlvbnMub3ZlcnJpZGVDb250ZXh0TWVudSYmdGhpcy4kZWRpdG9yLm9uKFwiY29udGV4dG1lbnVcIiwoZnVuY3Rpb24oZSl7cmV0dXJuIHQuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJjb250ZXh0bWVudVwiLGUpLCExfSkpOih0aGlzLm9wdGlvbnMud2lkdGgmJnRoaXMuJGVkaXRvci5vdXRlcldpZHRoKHRoaXMub3B0aW9ucy53aWR0aCksdGhpcy5vcHRpb25zLmhlaWdodCYmdGhpcy4kZWRpdGFibGUub3V0ZXJIZWlnaHQodGhpcy5vcHRpb25zLmhlaWdodCksdGhpcy5vcHRpb25zLm1heEhlaWdodCYmdGhpcy4kZWRpdGFibGUuY3NzKFwibWF4LWhlaWdodFwiLHRoaXMub3B0aW9ucy5tYXhIZWlnaHQpLHRoaXMub3B0aW9ucy5taW5IZWlnaHQmJnRoaXMuJGVkaXRhYmxlLmNzcyhcIm1pbi1oZWlnaHRcIix0aGlzLm9wdGlvbnMubWluSGVpZ2h0KSksdGhpcy5oaXN0b3J5LnJlY29yZFVuZG8oKSx0aGlzLnNldExhc3RSYW5nZSgpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJGVkaXRhYmxlLm9mZigpfX0se2tleTpcImhhbmRsZUtleU1hcFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMub3B0aW9ucy5rZXlNYXBbZi5pc01hYz9cIm1hY1wiOlwicGNcIl0sbj1bXTt0Lm1ldGFLZXkmJm4ucHVzaChcIkNNRFwiKSx0LmN0cmxLZXkmJiF0LmFsdEtleSYmbi5wdXNoKFwiQ1RSTFwiKSx0LnNoaWZ0S2V5JiZuLnB1c2goXCJTSElGVFwiKTt2YXIgbz13dC5uYW1lRnJvbUNvZGVbdC5rZXlDb2RlXTtvJiZuLnB1c2gobyk7dmFyIGk9ZVtuLmpvaW4oXCIrXCIpXTtpZihcIlRBQlwiIT09b3x8dGhpcy5vcHRpb25zLnRhYkRpc2FibGUpaWYoaSl7aWYoITEhPT10aGlzLmNvbnRleHQuaW52b2tlKGkpKXJldHVybiB0LnByZXZlbnREZWZhdWx0KCksITB9ZWxzZSB3dC5pc0VkaXQodC5rZXlDb2RlKSYmdGhpcy5hZnRlckNvbW1hbmQoKTtlbHNlIHRoaXMuYWZ0ZXJDb21tYW5kKCk7cmV0dXJuITF9fSx7a2V5OlwicHJldmVudERlZmF1bHRFZGl0YWJsZVNob3J0Q3V0c1wiLHZhbHVlOmZ1bmN0aW9uKHQpeyh0LmN0cmxLZXl8fHQubWV0YUtleSkmJmsuY29udGFpbnMoWzY2LDczLDg1XSx0LmtleUNvZGUpJiZ0LnByZXZlbnREZWZhdWx0KCl9fSx7a2V5OlwiaXNMaW1pdGVkXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD10fHwwLCh2b2lkIDA9PT1lfHwhKHd0LmlzTW92ZShlLmtleUNvZGUpfHx3dC5pc05hdmlnYXRpb24oZS5rZXlDb2RlKXx8ZS5jdHJsS2V5fHxlLm1ldGFLZXl8fGsuY29udGFpbnMoW3d0LmNvZGUuQkFDS1NQQUNFLHd0LmNvZGUuREVMRVRFXSxlLmtleUNvZGUpKSkmJnRoaXMub3B0aW9ucy5tYXhUZXh0TGVuZ3RoPjAmJnRoaXMuJGVkaXRhYmxlLnRleHQoKS5sZW5ndGgrdD50aGlzLm9wdGlvbnMubWF4VGV4dExlbmd0aH19LHtrZXk6XCJjcmVhdGVSYW5nZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZm9jdXMoKSx0aGlzLnNldExhc3RSYW5nZSgpLHRoaXMuZ2V0TGFzdFJhbmdlKCl9fSx7a2V5OlwiY3JlYXRlUmFuZ2VGcm9tTGlzdFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXl0LmNyZWF0ZUZyb21Ob2RlQmVmb3JlKGsuaGVhZCh0KSkuZ2V0U3RhcnRQb2ludCgpLG49eXQuY3JlYXRlRnJvbU5vZGVBZnRlcihrLmxhc3QodCkpLmdldEVuZFBvaW50KCk7cmV0dXJuIHl0LmNyZWF0ZShlLm5vZGUsZS5vZmZzZXQsbi5ub2RlLG4ub2Zmc2V0KX19LHtrZXk6XCJzZXRMYXN0UmFuZ2VcIix2YWx1ZTpmdW5jdGlvbih0KXt0P3RoaXMubGFzdFJhbmdlPXQ6KHRoaXMubGFzdFJhbmdlPXl0LmNyZWF0ZSh0aGlzLmVkaXRhYmxlKSwwPT09ZSgpKHRoaXMubGFzdFJhbmdlLnNjKS5jbG9zZXN0KFwiLm5vdGUtZWRpdGFibGVcIikubGVuZ3RoJiYodGhpcy5sYXN0UmFuZ2U9eXQuY3JlYXRlRnJvbUJvZHlFbGVtZW50KHRoaXMuZWRpdGFibGUpKSl9fSx7a2V5OlwiZ2V0TGFzdFJhbmdlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sYXN0UmFuZ2V8fHRoaXMuc2V0TGFzdFJhbmdlKCksdGhpcy5sYXN0UmFuZ2V9fSx7a2V5Olwic2F2ZVJhbmdlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dCYmdGhpcy5nZXRMYXN0UmFuZ2UoKS5jb2xsYXBzZSgpLnNlbGVjdCgpfX0se2tleTpcInJlc3RvcmVSYW5nZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5sYXN0UmFuZ2UmJih0aGlzLmxhc3RSYW5nZS5zZWxlY3QoKSx0aGlzLmZvY3VzKCkpfX0se2tleTpcInNhdmVUYXJnZXRcIix2YWx1ZTpmdW5jdGlvbih0KXt0aGlzLiRlZGl0YWJsZS5kYXRhKFwidGFyZ2V0XCIsdCl9fSx7a2V5OlwiY2xlYXJUYXJnZXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJGVkaXRhYmxlLnJlbW92ZURhdGEoXCJ0YXJnZXRcIil9fSx7a2V5OlwicmVzdG9yZVRhcmdldFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuJGVkaXRhYmxlLmRhdGEoXCJ0YXJnZXRcIil9fSx7a2V5OlwiY3VycmVudFN0eWxlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD15dC5jcmVhdGUoKTtyZXR1cm4gdCYmKHQ9dC5ub3JtYWxpemUoKSksdD90aGlzLnN0eWxlLmN1cnJlbnQodCk6dGhpcy5zdHlsZS5mcm9tTm9kZSh0aGlzLiRlZGl0YWJsZSl9fSx7a2V5Olwic3R5bGVGcm9tTm9kZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnN0eWxlLmZyb21Ob2RlKHQpfX0se2tleTpcInVuZG9cIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJiZWZvcmUuY29tbWFuZFwiLHRoaXMuJGVkaXRhYmxlLmh0bWwoKSksdGhpcy5oaXN0b3J5LnVuZG8oKSx0aGlzLmNvbnRleHQudHJpZ2dlckV2ZW50KFwiY2hhbmdlXCIsdGhpcy4kZWRpdGFibGUuaHRtbCgpLHRoaXMuJGVkaXRhYmxlKX19LHtrZXk6XCJjb21taXRcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJiZWZvcmUuY29tbWFuZFwiLHRoaXMuJGVkaXRhYmxlLmh0bWwoKSksdGhpcy5oaXN0b3J5LmNvbW1pdCgpLHRoaXMuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJjaGFuZ2VcIix0aGlzLiRlZGl0YWJsZS5odG1sKCksdGhpcy4kZWRpdGFibGUpfX0se2tleTpcInJlZG9cIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJiZWZvcmUuY29tbWFuZFwiLHRoaXMuJGVkaXRhYmxlLmh0bWwoKSksdGhpcy5oaXN0b3J5LnJlZG8oKSx0aGlzLmNvbnRleHQudHJpZ2dlckV2ZW50KFwiY2hhbmdlXCIsdGhpcy4kZWRpdGFibGUuaHRtbCgpLHRoaXMuJGVkaXRhYmxlKX19LHtrZXk6XCJiZWZvcmVDb21tYW5kXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmNvbnRleHQudHJpZ2dlckV2ZW50KFwiYmVmb3JlLmNvbW1hbmRcIix0aGlzLiRlZGl0YWJsZS5odG1sKCkpLGRvY3VtZW50LmV4ZWNDb21tYW5kKFwic3R5bGVXaXRoQ1NTXCIsITEsdGhpcy5vcHRpb25zLnN0eWxlV2l0aENTUyksdGhpcy5mb2N1cygpfX0se2tleTpcImFmdGVyQ29tbWFuZFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMubm9ybWFsaXplQ29udGVudCgpLHRoaXMuaGlzdG9yeS5yZWNvcmRVbmRvKCksdHx8dGhpcy5jb250ZXh0LnRyaWdnZXJFdmVudChcImNoYW5nZVwiLHRoaXMuJGVkaXRhYmxlLmh0bWwoKSx0aGlzLiRlZGl0YWJsZSl9fSx7a2V5OlwidGFiXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldExhc3RSYW5nZSgpO2lmKHQuaXNDb2xsYXBzZWQoKSYmdC5pc09uQ2VsbCgpKXRoaXMudGFibGUudGFiKHQpO2Vsc2V7aWYoMD09PXRoaXMub3B0aW9ucy50YWJTaXplKXJldHVybiExO3RoaXMuaXNMaW1pdGVkKHRoaXMub3B0aW9ucy50YWJTaXplKXx8KHRoaXMuYmVmb3JlQ29tbWFuZCgpLHRoaXMudHlwaW5nLmluc2VydFRhYih0LHRoaXMub3B0aW9ucy50YWJTaXplKSx0aGlzLmFmdGVyQ29tbWFuZCgpKX19fSx7a2V5OlwidW50YWJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0TGFzdFJhbmdlKCk7aWYodC5pc0NvbGxhcHNlZCgpJiZ0LmlzT25DZWxsKCkpdGhpcy50YWJsZS50YWIodCwhMCk7ZWxzZSBpZigwPT09dGhpcy5vcHRpb25zLnRhYlNpemUpcmV0dXJuITF9fSx7a2V5Olwid3JhcENvbW1hbmRcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0aGlzLmJlZm9yZUNvbW1hbmQoKSx0LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLmFmdGVyQ29tbWFuZCgpfX19LHtrZXk6XCJpbnNlcnRJbWFnZVwiLHZhbHVlOmZ1bmN0aW9uKHQsbil7dmFyIG8saT10aGlzO3JldHVybihvPXQsZSgpLkRlZmVycmVkKChmdW5jdGlvbih0KXt2YXIgbj1lKCkoXCI8aW1nPlwiKTtuLm9uZShcImxvYWRcIiwoZnVuY3Rpb24oKXtuLm9mZihcImVycm9yIGFib3J0XCIpLHQucmVzb2x2ZShuKX0pKS5vbmUoXCJlcnJvciBhYm9ydFwiLChmdW5jdGlvbigpe24ub2ZmKFwibG9hZFwiKS5kZXRhY2goKSx0LnJlamVjdChuKX0pKS5jc3Moe2Rpc3BsYXk6XCJub25lXCJ9KS5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KS5hdHRyKFwic3JjXCIsbyl9KSkucHJvbWlzZSgpKS50aGVuKChmdW5jdGlvbih0KXtpLmJlZm9yZUNvbW1hbmQoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24odCk6KFwic3RyaW5nXCI9PXR5cGVvZiBuJiZ0LmF0dHIoXCJkYXRhLWZpbGVuYW1lXCIsbiksdC5jc3MoXCJ3aWR0aFwiLE1hdGgubWluKGkuJGVkaXRhYmxlLndpZHRoKCksdC53aWR0aCgpKSkpLHQuc2hvdygpLGkuZ2V0TGFzdFJhbmdlKCkuaW5zZXJ0Tm9kZSh0WzBdKSxpLnNldExhc3RSYW5nZSh5dC5jcmVhdGVGcm9tTm9kZUFmdGVyKHRbMF0pLnNlbGVjdCgpKSxpLmFmdGVyQ29tbWFuZCgpfSkpLmZhaWwoKGZ1bmN0aW9uKHQpe2kuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJpbWFnZS51cGxvYWQuZXJyb3JcIix0KX0pKX19LHtrZXk6XCJpbnNlcnRJbWFnZXNBc0RhdGFVUkxcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgbj10aGlzO2UoKS5lYWNoKHQsKGZ1bmN0aW9uKHQsbyl7dmFyIGk9by5uYW1lO24ub3B0aW9ucy5tYXhpbXVtSW1hZ2VGaWxlU2l6ZSYmbi5vcHRpb25zLm1heGltdW1JbWFnZUZpbGVTaXplPG8uc2l6ZT9uLmNvbnRleHQudHJpZ2dlckV2ZW50KFwiaW1hZ2UudXBsb2FkLmVycm9yXCIsbi5sYW5nLmltYWdlLm1heGltdW1GaWxlU2l6ZUVycm9yKTpmdW5jdGlvbih0KXtyZXR1cm4gZSgpLkRlZmVycmVkKChmdW5jdGlvbihuKXtlKCkuZXh0ZW5kKG5ldyBGaWxlUmVhZGVyLHtvbmxvYWQ6ZnVuY3Rpb24odCl7dmFyIGU9dC50YXJnZXQucmVzdWx0O24ucmVzb2x2ZShlKX0sb25lcnJvcjpmdW5jdGlvbih0KXtuLnJlamVjdCh0KX19KS5yZWFkQXNEYXRhVVJMKHQpfSkpLnByb21pc2UoKX0obykudGhlbigoZnVuY3Rpb24odCl7cmV0dXJuIG4uaW5zZXJ0SW1hZ2UodCxpKX0pKS5mYWlsKChmdW5jdGlvbigpe24uY29udGV4dC50cmlnZ2VyRXZlbnQoXCJpbWFnZS51cGxvYWQuZXJyb3JcIil9KSl9KSl9fSx7a2V5OlwiaW5zZXJ0SW1hZ2VzT3JDYWxsYmFja1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMub3B0aW9ucy5jYWxsYmFja3Mub25JbWFnZVVwbG9hZD90aGlzLmNvbnRleHQudHJpZ2dlckV2ZW50KFwiaW1hZ2UudXBsb2FkXCIsdCk6dGhpcy5pbnNlcnRJbWFnZXNBc0RhdGFVUkwodCl9fSx7a2V5OlwiZ2V0U2VsZWN0ZWRUZXh0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldExhc3RSYW5nZSgpO3JldHVybiB0LmlzT25BbmNob3IoKSYmKHQ9eXQuY3JlYXRlRnJvbU5vZGUoaHQuYW5jZXN0b3IodC5zYyxodC5pc0FuY2hvcikpKSx0LnRvU3RyaW5nKCl9fSx7a2V5Olwib25Gb3JtYXRCbG9ja1wiLHZhbHVlOmZ1bmN0aW9uKHQsbil7aWYoZG9jdW1lbnQuZXhlY0NvbW1hbmQoXCJGb3JtYXRCbG9ja1wiLCExLGYuaXNNU0lFP1wiPFwiK3QrXCI+XCI6dCksbiYmbi5sZW5ndGgmJihuWzBdLnRhZ05hbWUudG9VcHBlckNhc2UoKSE9PXQudG9VcHBlckNhc2UoKSYmKG49bi5maW5kKHQpKSxuJiZuLmxlbmd0aCkpe3ZhciBvPXRoaXMuY3JlYXRlUmFuZ2UoKSxpPWUoKShbby5zYyxvLmVjXSkuY2xvc2VzdCh0KTtpLnJlbW92ZUNsYXNzKCk7dmFyIHI9blswXS5jbGFzc05hbWV8fFwiXCI7ciYmaS5hZGRDbGFzcyhyKX19fSx7a2V5OlwiZm9ybWF0UGFyYVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5mb3JtYXRCbG9jayhcIlBcIil9fSx7a2V5OlwiZm9udFN0eWxpbmdcIix2YWx1ZTpmdW5jdGlvbih0LG4pe3ZhciBvPXRoaXMuZ2V0TGFzdFJhbmdlKCk7aWYoXCJcIiE9PW8pe3ZhciBpPXRoaXMuc3R5bGUuc3R5bGVOb2RlcyhvKTtpZih0aGlzLiRlZGl0b3IuZmluZChcIi5ub3RlLXN0YXR1cy1vdXRwdXRcIikuaHRtbChcIlwiKSxlKCkoaSkuY3NzKHQsbiksby5pc0NvbGxhcHNlZCgpKXt2YXIgcj1rLmhlYWQoaSk7ciYmIWh0Lm5vZGVMZW5ndGgocikmJihyLmlubmVySFRNTD1odC5aRVJPX1dJRFRIX05CU1BfQ0hBUix5dC5jcmVhdGVGcm9tTm9kZShyLmZpcnN0Q2hpbGQpLnNlbGVjdCgpLHRoaXMuc2V0TGFzdFJhbmdlKCksdGhpcy4kZWRpdGFibGUuZGF0YShcImJvZ3VzXCIscikpfWVsc2UgdGhpcy5zZXRMYXN0UmFuZ2UodGhpcy5jcmVhdGVSYW5nZUZyb21MaXN0KGkpLnNlbGVjdCgpKX1lbHNle3ZhciBhPWUoKS5ub3coKTt0aGlzLiRlZGl0b3IuZmluZChcIi5ub3RlLXN0YXR1cy1vdXRwdXRcIikuaHRtbCgnPGRpdiBpZD1cIm5vdGUtc3RhdHVzLW91dHB1dC0nK2ErJ1wiIGNsYXNzPVwiYWxlcnQgYWxlcnQtaW5mb1wiPicrdGhpcy5sYW5nLm91dHB1dC5ub1NlbGVjdGlvbitcIjwvZGl2PlwiKSxzZXRUaW1lb3V0KChmdW5jdGlvbigpe2UoKShcIiNub3RlLXN0YXR1cy1vdXRwdXQtXCIrYSkucmVtb3ZlKCl9KSw1ZTMpfX19LHtrZXk6XCJ1bmxpbmtcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0TGFzdFJhbmdlKCk7aWYodC5pc09uQW5jaG9yKCkpe3ZhciBlPWh0LmFuY2VzdG9yKHQuc2MsaHQuaXNBbmNob3IpOyh0PXl0LmNyZWF0ZUZyb21Ob2RlKGUpKS5zZWxlY3QoKSx0aGlzLnNldExhc3RSYW5nZSgpLHRoaXMuYmVmb3JlQ29tbWFuZCgpLGRvY3VtZW50LmV4ZWNDb21tYW5kKFwidW5saW5rXCIpLHRoaXMuYWZ0ZXJDb21tYW5kKCl9fX0se2tleTpcImdldExpbmtJbmZvXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldExhc3RSYW5nZSgpLmV4cGFuZChodC5pc0FuY2hvciksbj1lKCkoay5oZWFkKHQubm9kZXMoaHQuaXNBbmNob3IpKSksbz17cmFuZ2U6dCx0ZXh0OnQudG9TdHJpbmcoKSx1cmw6bi5sZW5ndGg/bi5hdHRyKFwiaHJlZlwiKTpcIlwifTtyZXR1cm4gbi5sZW5ndGgmJihvLmlzTmV3V2luZG93PVwiX2JsYW5rXCI9PT1uLmF0dHIoXCJ0YXJnZXRcIikpLG99fSx7a2V5OlwiYWRkUm93XCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5nZXRMYXN0UmFuZ2UodGhpcy4kZWRpdGFibGUpO2UuaXNDb2xsYXBzZWQoKSYmZS5pc09uQ2VsbCgpJiYodGhpcy5iZWZvcmVDb21tYW5kKCksdGhpcy50YWJsZS5hZGRSb3coZSx0KSx0aGlzLmFmdGVyQ29tbWFuZCgpKX19LHtrZXk6XCJhZGRDb2xcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldExhc3RSYW5nZSh0aGlzLiRlZGl0YWJsZSk7ZS5pc0NvbGxhcHNlZCgpJiZlLmlzT25DZWxsKCkmJih0aGlzLmJlZm9yZUNvbW1hbmQoKSx0aGlzLnRhYmxlLmFkZENvbChlLHQpLHRoaXMuYWZ0ZXJDb21tYW5kKCkpfX0se2tleTpcImRlbGV0ZVJvd1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRMYXN0UmFuZ2UodGhpcy4kZWRpdGFibGUpO3QuaXNDb2xsYXBzZWQoKSYmdC5pc09uQ2VsbCgpJiYodGhpcy5iZWZvcmVDb21tYW5kKCksdGhpcy50YWJsZS5kZWxldGVSb3codCksdGhpcy5hZnRlckNvbW1hbmQoKSl9fSx7a2V5OlwiZGVsZXRlQ29sXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldExhc3RSYW5nZSh0aGlzLiRlZGl0YWJsZSk7dC5pc0NvbGxhcHNlZCgpJiZ0LmlzT25DZWxsKCkmJih0aGlzLmJlZm9yZUNvbW1hbmQoKSx0aGlzLnRhYmxlLmRlbGV0ZUNvbCh0KSx0aGlzLmFmdGVyQ29tbWFuZCgpKX19LHtrZXk6XCJkZWxldGVUYWJsZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRMYXN0UmFuZ2UodGhpcy4kZWRpdGFibGUpO3QuaXNDb2xsYXBzZWQoKSYmdC5pc09uQ2VsbCgpJiYodGhpcy5iZWZvcmVDb21tYW5kKCksdGhpcy50YWJsZS5kZWxldGVUYWJsZSh0KSx0aGlzLmFmdGVyQ29tbWFuZCgpKX19LHtrZXk6XCJyZXNpemVUb1wiLHZhbHVlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgbztpZihuKXt2YXIgaT10LnkvdC54LHI9ZS5kYXRhKFwicmF0aW9cIik7bz17d2lkdGg6cj5pP3QueDp0LnkvcixoZWlnaHQ6cj5pP3QueCpyOnQueX19ZWxzZSBvPXt3aWR0aDp0LngsaGVpZ2h0OnQueX07ZS5jc3Mobyl9fSx7a2V5OlwiaGFzRm9jdXNcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLiRlZGl0YWJsZS5pcyhcIjpmb2N1c1wiKX19LHtrZXk6XCJmb2N1c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5oYXNGb2N1cygpfHx0aGlzLiRlZGl0YWJsZS5mb2N1cygpfX0se2tleTpcImlzRW1wdHlcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiBodC5pc0VtcHR5KHRoaXMuJGVkaXRhYmxlWzBdKXx8aHQuZW1wdHlQYXJhPT09dGhpcy4kZWRpdGFibGUuaHRtbCgpfX0se2tleTpcImVtcHR5XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmNvbnRleHQuaW52b2tlKFwiY29kZVwiLGh0LmVtcHR5UGFyYSl9fSx7a2V5Olwibm9ybWFsaXplQ29udGVudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWRpdGFibGVbMF0ubm9ybWFsaXplKCl9fV0sbyYmQXQobi5wcm90b3R5cGUsbyksaSYmQXQobixpKSx0fSgpO2Z1bmN0aW9uIER0KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgSHQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5jb250ZXh0PWUsdGhpcy4kZWRpdGFibGU9ZS5sYXlvdXRJbmZvLmVkaXRhYmxlfXZhciBlLG4sbztyZXR1cm4gZT10LChuPVt7a2V5OlwiaW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWRpdGFibGUub24oXCJwYXN0ZVwiLHRoaXMucGFzdGVCeUV2ZW50LmJpbmQodGhpcykpfX0se2tleTpcInBhc3RlQnlFdmVudFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10Lm9yaWdpbmFsRXZlbnQuY2xpcGJvYXJkRGF0YTtpZihuJiZuLml0ZW1zJiZuLml0ZW1zLmxlbmd0aCl7dmFyIG89bi5pdGVtcy5sZW5ndGg+MT9uLml0ZW1zWzFdOmsuaGVhZChuLml0ZW1zKTtcImZpbGVcIj09PW8ua2luZCYmLTEhPT1vLnR5cGUuaW5kZXhPZihcImltYWdlL1wiKT8odGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5pbnNlcnRJbWFnZXNPckNhbGxiYWNrXCIsW28uZ2V0QXNGaWxlKCldKSx0LnByZXZlbnREZWZhdWx0KCkpOlwic3RyaW5nXCI9PT1vLmtpbmQmJnRoaXMuY29udGV4dC5pbnZva2UoXCJlZGl0b3IuaXNMaW1pdGVkXCIsbi5nZXREYXRhKFwiVGV4dFwiKS5sZW5ndGgpJiZ0LnByZXZlbnREZWZhdWx0KCl9ZWxzZSBpZih3aW5kb3cuY2xpcGJvYXJkRGF0YSl7dmFyIGk9d2luZG93LmNsaXBib2FyZERhdGEuZ2V0RGF0YShcInRleHRcIik7dGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5pc0xpbWl0ZWRcIixpLmxlbmd0aCkmJnQucHJldmVudERlZmF1bHQoKX1zZXRUaW1lb3V0KChmdW5jdGlvbigpe2UuY29udGV4dC5pbnZva2UoXCJlZGl0b3IuYWZ0ZXJDb21tYW5kXCIpfSksMTApfX1dKSYmRHQoZS5wcm90b3R5cGUsbiksbyYmRHQoZSxvKSx0fSgpO2Z1bmN0aW9uIHp0KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgQnQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4peyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5jb250ZXh0PW4sdGhpcy4kZXZlbnRMaXN0ZW5lcj1lKCkoZG9jdW1lbnQpLHRoaXMuJGVkaXRvcj1uLmxheW91dEluZm8uZWRpdG9yLHRoaXMuJGVkaXRhYmxlPW4ubGF5b3V0SW5mby5lZGl0YWJsZSx0aGlzLm9wdGlvbnM9bi5vcHRpb25zLHRoaXMubGFuZz10aGlzLm9wdGlvbnMubGFuZ0luZm8sdGhpcy5kb2N1bWVudEV2ZW50SGFuZGxlcnM9e30sdGhpcy4kZHJvcHpvbmU9ZSgpKFsnPGRpdiBjbGFzcz1cIm5vdGUtZHJvcHpvbmVcIj4nLCc8ZGl2IGNsYXNzPVwibm90ZS1kcm9wem9uZS1tZXNzYWdlXCI+PC9kaXY+JyxcIjwvZGl2PlwiXS5qb2luKFwiXCIpKS5wcmVwZW5kVG8odGhpcy4kZWRpdG9yKX12YXIgbixvLGk7cmV0dXJuIG49dCxvPVt7a2V5OlwiaW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5vcHRpb25zLmRpc2FibGVEcmFnQW5kRHJvcD8odGhpcy5kb2N1bWVudEV2ZW50SGFuZGxlcnMub25Ecm9wPWZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKX0sdGhpcy4kZXZlbnRMaXN0ZW5lcj10aGlzLiRkcm9wem9uZSx0aGlzLiRldmVudExpc3RlbmVyLm9uKFwiZHJvcFwiLHRoaXMuZG9jdW1lbnRFdmVudEhhbmRsZXJzLm9uRHJvcCkpOnRoaXMuYXR0YWNoRHJhZ0FuZERyb3BFdmVudCgpfX0se2tleTpcImF0dGFjaERyYWdBbmREcm9wRXZlbnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsbj1lKCkoKSxvPXRoaXMuJGRyb3B6b25lLmZpbmQoXCIubm90ZS1kcm9wem9uZS1tZXNzYWdlXCIpO3RoaXMuZG9jdW1lbnRFdmVudEhhbmRsZXJzLm9uRHJhZ2VudGVyPWZ1bmN0aW9uKGUpe3ZhciBpPXQuY29udGV4dC5pbnZva2UoXCJjb2Rldmlldy5pc0FjdGl2YXRlZFwiKSxyPXQuJGVkaXRvci53aWR0aCgpPjAmJnQuJGVkaXRvci5oZWlnaHQoKT4wO2l8fG4ubGVuZ3RofHwhcnx8KHQuJGVkaXRvci5hZGRDbGFzcyhcImRyYWdvdmVyXCIpLHQuJGRyb3B6b25lLndpZHRoKHQuJGVkaXRvci53aWR0aCgpKSx0LiRkcm9wem9uZS5oZWlnaHQodC4kZWRpdG9yLmhlaWdodCgpKSxvLnRleHQodC5sYW5nLmltYWdlLmRyYWdJbWFnZUhlcmUpKSxuPW4uYWRkKGUudGFyZ2V0KX0sdGhpcy5kb2N1bWVudEV2ZW50SGFuZGxlcnMub25EcmFnbGVhdmU9ZnVuY3Rpb24obyl7KG49bi5ub3Qoby50YXJnZXQpKS5sZW5ndGgmJlwiQk9EWVwiIT09by50YXJnZXQubm9kZU5hbWV8fChuPWUoKSgpLHQuJGVkaXRvci5yZW1vdmVDbGFzcyhcImRyYWdvdmVyXCIpKX0sdGhpcy5kb2N1bWVudEV2ZW50SGFuZGxlcnMub25Ecm9wPWZ1bmN0aW9uKCl7bj1lKCkoKSx0LiRlZGl0b3IucmVtb3ZlQ2xhc3MoXCJkcmFnb3ZlclwiKX0sdGhpcy4kZXZlbnRMaXN0ZW5lci5vbihcImRyYWdlbnRlclwiLHRoaXMuZG9jdW1lbnRFdmVudEhhbmRsZXJzLm9uRHJhZ2VudGVyKS5vbihcImRyYWdsZWF2ZVwiLHRoaXMuZG9jdW1lbnRFdmVudEhhbmRsZXJzLm9uRHJhZ2xlYXZlKS5vbihcImRyb3BcIix0aGlzLmRvY3VtZW50RXZlbnRIYW5kbGVycy5vbkRyb3ApLHRoaXMuJGRyb3B6b25lLm9uKFwiZHJhZ2VudGVyXCIsKGZ1bmN0aW9uKCl7dC4kZHJvcHpvbmUuYWRkQ2xhc3MoXCJob3ZlclwiKSxvLnRleHQodC5sYW5nLmltYWdlLmRyb3BJbWFnZSl9KSkub24oXCJkcmFnbGVhdmVcIiwoZnVuY3Rpb24oKXt0LiRkcm9wem9uZS5yZW1vdmVDbGFzcyhcImhvdmVyXCIpLG8udGV4dCh0LmxhbmcuaW1hZ2UuZHJhZ0ltYWdlSGVyZSl9KSksdGhpcy4kZHJvcHpvbmUub24oXCJkcm9wXCIsKGZ1bmN0aW9uKG4pe3ZhciBvPW4ub3JpZ2luYWxFdmVudC5kYXRhVHJhbnNmZXI7bi5wcmV2ZW50RGVmYXVsdCgpLG8mJm8uZmlsZXMmJm8uZmlsZXMubGVuZ3RoPyh0LiRlZGl0YWJsZS5mb2N1cygpLHQuY29udGV4dC5pbnZva2UoXCJlZGl0b3IuaW5zZXJ0SW1hZ2VzT3JDYWxsYmFja1wiLG8uZmlsZXMpKTplKCkuZWFjaChvLnR5cGVzLChmdW5jdGlvbihuLGkpe2lmKCEoaS50b0xvd2VyQ2FzZSgpLmluZGV4T2YoXCJfbW96X1wiKT4tMSkpe3ZhciByPW8uZ2V0RGF0YShpKTtpLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihcInRleHRcIik+LTE/dC5jb250ZXh0Lmludm9rZShcImVkaXRvci5wYXN0ZUhUTUxcIixyKTplKCkocikuZWFjaCgoZnVuY3Rpb24oZSxuKXt0LmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmluc2VydE5vZGVcIixuKX0pKX19KSl9KSkub24oXCJkcmFnb3ZlclwiLCExKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO09iamVjdC5rZXlzKHRoaXMuZG9jdW1lbnRFdmVudEhhbmRsZXJzKS5mb3JFYWNoKChmdW5jdGlvbihlKXt0LiRldmVudExpc3RlbmVyLm9mZihlLnN1YnN0cigyKS50b0xvd2VyQ2FzZSgpLHQuZG9jdW1lbnRFdmVudEhhbmRsZXJzW2VdKX0pKSx0aGlzLmRvY3VtZW50RXZlbnRIYW5kbGVycz17fX19XSxvJiZ6dChuLnByb3RvdHlwZSxvKSxpJiZ6dChuLGkpLHR9KCk7ZnVuY3Rpb24gTXQodCxlKXt2YXIgbj1cInVuZGVmaW5lZFwiIT10eXBlb2YgU3ltYm9sJiZ0W1N5bWJvbC5pdGVyYXRvcl18fHRbXCJAQGl0ZXJhdG9yXCJdO2lmKCFuKXtpZihBcnJheS5pc0FycmF5KHQpfHwobj1mdW5jdGlvbih0LGUpe2lmKCF0KXJldHVybjtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4gT3QodCxlKTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkuc2xpY2UoOCwtMSk7XCJPYmplY3RcIj09PW4mJnQuY29uc3RydWN0b3ImJihuPXQuY29uc3RydWN0b3IubmFtZSk7aWYoXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uKXJldHVybiBBcnJheS5mcm9tKHQpO2lmKFwiQXJndW1lbnRzXCI9PT1ufHwvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSlyZXR1cm4gT3QodCxlKX0odCkpfHxlJiZ0JiZcIm51bWJlclwiPT10eXBlb2YgdC5sZW5ndGgpe24mJih0PW4pO3ZhciBvPTAsaT1mdW5jdGlvbigpe307cmV0dXJue3M6aSxuOmZ1bmN0aW9uKCl7cmV0dXJuIG8+PXQubGVuZ3RoP3tkb25lOiEwfTp7ZG9uZTohMSx2YWx1ZTp0W28rK119fSxlOmZ1bmN0aW9uKHQpe3Rocm93IHR9LGY6aX19dGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpfXZhciByLGE9ITAscz0hMTtyZXR1cm57czpmdW5jdGlvbigpe249bi5jYWxsKHQpfSxuOmZ1bmN0aW9uKCl7dmFyIHQ9bi5uZXh0KCk7cmV0dXJuIGE9dC5kb25lLHR9LGU6ZnVuY3Rpb24odCl7cz0hMCxyPXR9LGY6ZnVuY3Rpb24oKXt0cnl7YXx8bnVsbD09bi5yZXR1cm58fG4ucmV0dXJuKCl9ZmluYWxseXtpZihzKXRocm93IHJ9fX19ZnVuY3Rpb24gT3QodCxlKXsobnVsbD09ZXx8ZT50Lmxlbmd0aCkmJihlPXQubGVuZ3RoKTtmb3IodmFyIG49MCxvPW5ldyBBcnJheShlKTtuPGU7bisrKW9bbl09dFtuXTtyZXR1cm4gb31mdW5jdGlvbiBVdCh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19dmFyIGp0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlKXshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLHRoaXMuY29udGV4dD1lLHRoaXMuJGVkaXRvcj1lLmxheW91dEluZm8uZWRpdG9yLHRoaXMuJGVkaXRhYmxlPWUubGF5b3V0SW5mby5lZGl0YWJsZSx0aGlzLiRjb2RhYmxlPWUubGF5b3V0SW5mby5jb2RhYmxlLHRoaXMub3B0aW9ucz1lLm9wdGlvbnMsdGhpcy5Db2RlTWlycm9yQ29uc3RydWN0b3I9d2luZG93LkNvZGVNaXJyb3IsdGhpcy5vcHRpb25zLmNvZGVtaXJyb3IuQ29kZU1pcnJvckNvbnN0cnVjdG9yJiYodGhpcy5Db2RlTWlycm9yQ29uc3RydWN0b3I9dGhpcy5vcHRpb25zLmNvZGVtaXJyb3IuQ29kZU1pcnJvckNvbnN0cnVjdG9yKX12YXIgZSxuLG87cmV0dXJuIGU9dCxuPVt7a2V5Olwic3luY1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuaXNBY3RpdmF0ZWQoKSxuPXRoaXMuQ29kZU1pcnJvckNvbnN0cnVjdG9yO2UmJih0P24/dGhpcy4kY29kYWJsZS5kYXRhKFwiY21FZGl0b3JcIikuZ2V0RG9jKCkuc2V0VmFsdWUodCk6dGhpcy4kY29kYWJsZS52YWwodCk6biYmdGhpcy4kY29kYWJsZS5kYXRhKFwiY21FZGl0b3JcIikuc2F2ZSgpKX19LHtrZXk6XCJpbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuJGNvZGFibGUub24oXCJrZXl1cFwiLChmdW5jdGlvbihlKXtlLmtleUNvZGU9PT13dC5jb2RlLkVTQ0FQRSYmdC5kZWFjdGl2YXRlKCl9KSl9fSx7a2V5OlwiaXNBY3RpdmF0ZWRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLiRlZGl0b3IuaGFzQ2xhc3MoXCJjb2Rldmlld1wiKX19LHtrZXk6XCJ0b2dnbGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuaXNBY3RpdmF0ZWQoKT90aGlzLmRlYWN0aXZhdGUoKTp0aGlzLmFjdGl2YXRlKCksdGhpcy5jb250ZXh0LnRyaWdnZXJFdmVudChcImNvZGV2aWV3LnRvZ2dsZWRcIil9fSx7a2V5OlwicHVyaWZ5XCIsdmFsdWU6ZnVuY3Rpb24odCl7aWYodGhpcy5vcHRpb25zLmNvZGV2aWV3RmlsdGVyJiYodD10LnJlcGxhY2UodGhpcy5vcHRpb25zLmNvZGV2aWV3RmlsdGVyUmVnZXgsXCJcIiksdGhpcy5vcHRpb25zLmNvZGV2aWV3SWZyYW1lRmlsdGVyKSl7dmFyIGU9dGhpcy5vcHRpb25zLmNvZGV2aWV3SWZyYW1lV2hpdGVsaXN0U3JjLmNvbmNhdCh0aGlzLm9wdGlvbnMuY29kZXZpZXdJZnJhbWVXaGl0ZWxpc3RTcmNCYXNlKTt0PXQucmVwbGFjZSgvKDxpZnJhbWUuKj8+Lio/KD86PFxcL2lmcmFtZT4pPykvZ2ksKGZ1bmN0aW9uKHQpe2lmKC88LitzcmMoPz09PygnfFwifFxccyk/KVtcXHNcXFNdK3NyYyg/PSgnfFwifFxccyk/KVtePl0qPz4vaS50ZXN0KHQpKXJldHVyblwiXCI7dmFyIG4sbz1NdChlKTt0cnl7Zm9yKG8ucygpOyEobj1vLm4oKSkuZG9uZTspe3ZhciBpPW4udmFsdWU7aWYobmV3IFJlZ0V4cCgnc3JjPVwiKGh0dHBzPzopPy8vJytpLnJlcGxhY2UoL1stXFwvXFxcXF4kKis/LigpfFtcXF17fV0vZyxcIlxcXFwkJlwiKSsnLyguKylcIicpLnRlc3QodCkpcmV0dXJuIHR9fWNhdGNoKHQpe28uZSh0KX1maW5hbGx5e28uZigpfXJldHVyblwiXCJ9KSl9cmV0dXJuIHR9fSx7a2V5OlwiYWN0aXZhdGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLkNvZGVNaXJyb3JDb25zdHJ1Y3RvcjtpZih0aGlzLiRjb2RhYmxlLnZhbChodC5odG1sKHRoaXMuJGVkaXRhYmxlLHRoaXMub3B0aW9ucy5wcmV0dGlmeUh0bWwpKSx0aGlzLiRjb2RhYmxlLmhlaWdodCh0aGlzLiRlZGl0YWJsZS5oZWlnaHQoKSksdGhpcy5jb250ZXh0Lmludm9rZShcInRvb2xiYXIudXBkYXRlQ29kZXZpZXdcIiwhMCksdGhpcy5jb250ZXh0Lmludm9rZShcImFpclBvcG92ZXIudXBkYXRlQ29kZXZpZXdcIiwhMCksdGhpcy4kZWRpdG9yLmFkZENsYXNzKFwiY29kZXZpZXdcIiksdGhpcy4kY29kYWJsZS5mb2N1cygpLGUpe3ZhciBuPWUuZnJvbVRleHRBcmVhKHRoaXMuJGNvZGFibGVbMF0sdGhpcy5vcHRpb25zLmNvZGVtaXJyb3IpO2lmKHRoaXMub3B0aW9ucy5jb2RlbWlycm9yLnRlcm4pe3ZhciBvPW5ldyBlLlRlcm5TZXJ2ZXIodGhpcy5vcHRpb25zLmNvZGVtaXJyb3IudGVybik7bi50ZXJuU2VydmVyPW8sbi5vbihcImN1cnNvckFjdGl2aXR5XCIsKGZ1bmN0aW9uKHQpe28udXBkYXRlQXJnSGludHModCl9KSl9bi5vbihcImJsdXJcIiwoZnVuY3Rpb24oZSl7dC5jb250ZXh0LnRyaWdnZXJFdmVudChcImJsdXIuY29kZXZpZXdcIixuLmdldFZhbHVlKCksZSl9KSksbi5vbihcImNoYW5nZVwiLChmdW5jdGlvbigpe3QuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJjaGFuZ2UuY29kZXZpZXdcIixuLmdldFZhbHVlKCksbil9KSksbi5zZXRTaXplKG51bGwsdGhpcy4kZWRpdGFibGUub3V0ZXJIZWlnaHQoKSksdGhpcy4kY29kYWJsZS5kYXRhKFwiY21FZGl0b3JcIixuKX1lbHNlIHRoaXMuJGNvZGFibGUub24oXCJibHVyXCIsKGZ1bmN0aW9uKGUpe3QuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJibHVyLmNvZGV2aWV3XCIsdC4kY29kYWJsZS52YWwoKSxlKX0pKSx0aGlzLiRjb2RhYmxlLm9uKFwiaW5wdXRcIiwoZnVuY3Rpb24oKXt0LmNvbnRleHQudHJpZ2dlckV2ZW50KFwiY2hhbmdlLmNvZGV2aWV3XCIsdC4kY29kYWJsZS52YWwoKSx0LiRjb2RhYmxlKX0pKX19LHtrZXk6XCJkZWFjdGl2YXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXtpZih0aGlzLkNvZGVNaXJyb3JDb25zdHJ1Y3Rvcil7dmFyIHQ9dGhpcy4kY29kYWJsZS5kYXRhKFwiY21FZGl0b3JcIik7dGhpcy4kY29kYWJsZS52YWwodC5nZXRWYWx1ZSgpKSx0LnRvVGV4dEFyZWEoKX12YXIgZT10aGlzLnB1cmlmeShodC52YWx1ZSh0aGlzLiRjb2RhYmxlLHRoaXMub3B0aW9ucy5wcmV0dGlmeUh0bWwpfHxodC5lbXB0eVBhcmEpLG49dGhpcy4kZWRpdGFibGUuaHRtbCgpIT09ZTt0aGlzLiRlZGl0YWJsZS5odG1sKGUpLHRoaXMuJGVkaXRhYmxlLmhlaWdodCh0aGlzLm9wdGlvbnMuaGVpZ2h0P3RoaXMuJGNvZGFibGUuaGVpZ2h0KCk6XCJhdXRvXCIpLHRoaXMuJGVkaXRvci5yZW1vdmVDbGFzcyhcImNvZGV2aWV3XCIpLG4mJnRoaXMuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJjaGFuZ2VcIix0aGlzLiRlZGl0YWJsZS5odG1sKCksdGhpcy4kZWRpdGFibGUpLHRoaXMuJGVkaXRhYmxlLmZvY3VzKCksdGhpcy5jb250ZXh0Lmludm9rZShcInRvb2xiYXIudXBkYXRlQ29kZXZpZXdcIiwhMSksdGhpcy5jb250ZXh0Lmludm9rZShcImFpclBvcG92ZXIudXBkYXRlQ29kZXZpZXdcIiwhMSl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5pc0FjdGl2YXRlZCgpJiZ0aGlzLmRlYWN0aXZhdGUoKX19XSxuJiZVdChlLnByb3RvdHlwZSxuKSxvJiZVdChlLG8pLHR9KCk7ZnVuY3Rpb24gV3QodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fXZhciBLdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQobil7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLiRkb2N1bWVudD1lKCkoZG9jdW1lbnQpLHRoaXMuJHN0YXR1c2Jhcj1uLmxheW91dEluZm8uc3RhdHVzYmFyLHRoaXMuJGVkaXRhYmxlPW4ubGF5b3V0SW5mby5lZGl0YWJsZSx0aGlzLiRjb2RhYmxlPW4ubGF5b3V0SW5mby5jb2RhYmxlLHRoaXMub3B0aW9ucz1uLm9wdGlvbnN9dmFyIG4sbyxpO3JldHVybiBuPXQsKG89W3trZXk6XCJpbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMub3B0aW9ucy5haXJNb2RlfHx0aGlzLm9wdGlvbnMuZGlzYWJsZVJlc2l6ZUVkaXRvcj90aGlzLmRlc3Ryb3koKTp0aGlzLiRzdGF0dXNiYXIub24oXCJtb3VzZWRvd25cIiwoZnVuY3Rpb24oZSl7ZS5wcmV2ZW50RGVmYXVsdCgpLGUuc3RvcFByb3BhZ2F0aW9uKCk7dmFyIG49dC4kZWRpdGFibGUub2Zmc2V0KCkudG9wLXQuJGRvY3VtZW50LnNjcm9sbFRvcCgpLG89dC4kY29kYWJsZS5vZmZzZXQoKS50b3AtdC4kZG9jdW1lbnQuc2Nyb2xsVG9wKCksaT1mdW5jdGlvbihlKXt2YXIgaT1lLmNsaWVudFktKG4rMjQpLHI9ZS5jbGllbnRZLShvKzI0KTtpPXQub3B0aW9ucy5taW5oZWlnaHQ+MD9NYXRoLm1heChpLHQub3B0aW9ucy5taW5oZWlnaHQpOmksaT10Lm9wdGlvbnMubWF4SGVpZ2h0PjA/TWF0aC5taW4oaSx0Lm9wdGlvbnMubWF4SGVpZ2h0KTppLHI9dC5vcHRpb25zLm1pbmhlaWdodD4wP01hdGgubWF4KHIsdC5vcHRpb25zLm1pbmhlaWdodCk6cixyPXQub3B0aW9ucy5tYXhIZWlnaHQ+MD9NYXRoLm1pbihyLHQub3B0aW9ucy5tYXhIZWlnaHQpOnIsdC4kZWRpdGFibGUuaGVpZ2h0KGkpLHQuJGNvZGFibGUuaGVpZ2h0KHIpfTt0LiRkb2N1bWVudC5vbihcIm1vdXNlbW92ZVwiLGkpLm9uZShcIm1vdXNldXBcIiwoZnVuY3Rpb24oKXt0LiRkb2N1bWVudC5vZmYoXCJtb3VzZW1vdmVcIixpKX0pKX0pKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRzdGF0dXNiYXIub2ZmKCksdGhpcy4kc3RhdHVzYmFyLmFkZENsYXNzKFwibG9ja2VkXCIpfX1dKSYmV3Qobi5wcm90b3R5cGUsbyksaSYmV3QobixpKSx0fSgpO2Z1bmN0aW9uIFZ0KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgcXQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4pe3ZhciBvPXRoaXM7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLmNvbnRleHQ9bix0aGlzLiRlZGl0b3I9bi5sYXlvdXRJbmZvLmVkaXRvcix0aGlzLiR0b29sYmFyPW4ubGF5b3V0SW5mby50b29sYmFyLHRoaXMuJGVkaXRhYmxlPW4ubGF5b3V0SW5mby5lZGl0YWJsZSx0aGlzLiRjb2RhYmxlPW4ubGF5b3V0SW5mby5jb2RhYmxlLHRoaXMuJHdpbmRvdz1lKCkod2luZG93KSx0aGlzLiRzY3JvbGxiYXI9ZSgpKFwiaHRtbCwgYm9keVwiKSx0aGlzLnNjcm9sbGJhckNsYXNzTmFtZT1cIm5vdGUtZnVsbHNjcmVlbi1ib2R5XCIsdGhpcy5vblJlc2l6ZT1mdW5jdGlvbigpe28ucmVzaXplVG8oe2g6by4kd2luZG93LmhlaWdodCgpLW8uJHRvb2xiYXIub3V0ZXJIZWlnaHQoKX0pfX12YXIgbixvLGk7cmV0dXJuIG49dCwobz1be2tleTpcInJlc2l6ZVRvXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy4kZWRpdGFibGUuY3NzKFwiaGVpZ2h0XCIsdC5oKSx0aGlzLiRjb2RhYmxlLmNzcyhcImhlaWdodFwiLHQuaCksdGhpcy4kY29kYWJsZS5kYXRhKFwiY21lZGl0b3JcIikmJnRoaXMuJGNvZGFibGUuZGF0YShcImNtZWRpdG9yXCIpLnNldHNpemUobnVsbCx0LmgpfX0se2tleTpcInRvZ2dsZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kZWRpdG9yLnRvZ2dsZUNsYXNzKFwiZnVsbHNjcmVlblwiKTt2YXIgdD10aGlzLmlzRnVsbHNjcmVlbigpO3RoaXMuJHNjcm9sbGJhci50b2dnbGVDbGFzcyh0aGlzLnNjcm9sbGJhckNsYXNzTmFtZSx0KSx0Pyh0aGlzLiRlZGl0YWJsZS5kYXRhKFwib3JnSGVpZ2h0XCIsdGhpcy4kZWRpdGFibGUuY3NzKFwiaGVpZ2h0XCIpKSx0aGlzLiRlZGl0YWJsZS5kYXRhKFwib3JnTWF4SGVpZ2h0XCIsdGhpcy4kZWRpdGFibGUuY3NzKFwibWF4SGVpZ2h0XCIpKSx0aGlzLiRlZGl0YWJsZS5jc3MoXCJtYXhIZWlnaHRcIixcIlwiKSx0aGlzLiR3aW5kb3cub24oXCJyZXNpemVcIix0aGlzLm9uUmVzaXplKS50cmlnZ2VyKFwicmVzaXplXCIpKToodGhpcy4kd2luZG93Lm9mZihcInJlc2l6ZVwiLHRoaXMub25SZXNpemUpLHRoaXMucmVzaXplVG8oe2g6dGhpcy4kZWRpdGFibGUuZGF0YShcIm9yZ0hlaWdodFwiKX0pLHRoaXMuJGVkaXRhYmxlLmNzcyhcIm1heEhlaWdodFwiLHRoaXMuJGVkaXRhYmxlLmNzcyhcIm9yZ01heEhlaWdodFwiKSkpLHRoaXMuY29udGV4dC5pbnZva2UoXCJ0b29sYmFyLnVwZGF0ZUZ1bGxzY3JlZW5cIix0KX19LHtrZXk6XCJpc0Z1bGxzY3JlZW5cIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLiRlZGl0b3IuaGFzQ2xhc3MoXCJmdWxsc2NyZWVuXCIpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJHNjcm9sbGJhci5yZW1vdmVDbGFzcyh0aGlzLnNjcm9sbGJhckNsYXNzTmFtZSl9fV0pJiZWdChuLnByb3RvdHlwZSxvKSxpJiZWdChuLGkpLHR9KCk7ZnVuY3Rpb24gX3QodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fXZhciBHdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQobil7dmFyIG89dGhpczshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLHRoaXMuY29udGV4dD1uLHRoaXMuJGRvY3VtZW50PWUoKShkb2N1bWVudCksdGhpcy4kZWRpdGluZ0FyZWE9bi5sYXlvdXRJbmZvLmVkaXRpbmdBcmVhLHRoaXMub3B0aW9ucz1uLm9wdGlvbnMsdGhpcy5sYW5nPXRoaXMub3B0aW9ucy5sYW5nSW5mbyx0aGlzLmV2ZW50cz17XCJzdW1tZXJub3RlLm1vdXNlZG93blwiOmZ1bmN0aW9uKHQsZSl7by51cGRhdGUoZS50YXJnZXQsZSkmJmUucHJldmVudERlZmF1bHQoKX0sXCJzdW1tZXJub3RlLmtleXVwIHN1bW1lcm5vdGUuc2Nyb2xsIHN1bW1lcm5vdGUuY2hhbmdlIHN1bW1lcm5vdGUuZGlhbG9nLnNob3duXCI6ZnVuY3Rpb24oKXtvLnVwZGF0ZSgpfSxcInN1bW1lcm5vdGUuZGlzYWJsZSBzdW1tZXJub3RlLmJsdXJcIjpmdW5jdGlvbigpe28uaGlkZSgpfSxcInN1bW1lcm5vdGUuY29kZXZpZXcudG9nZ2xlZFwiOmZ1bmN0aW9uKCl7by51cGRhdGUoKX19fXZhciBuLG8saTtyZXR1cm4gbj10LG89W3trZXk6XCJpbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuJGhhbmRsZT1lKCkoWyc8ZGl2IGNsYXNzPVwibm90ZS1oYW5kbGVcIj4nLCc8ZGl2IGNsYXNzPVwibm90ZS1jb250cm9sLXNlbGVjdGlvblwiPicsJzxkaXYgY2xhc3M9XCJub3RlLWNvbnRyb2wtc2VsZWN0aW9uLWJnXCI+PC9kaXY+JywnPGRpdiBjbGFzcz1cIm5vdGUtY29udHJvbC1ob2xkZXIgbm90ZS1jb250cm9sLW53XCI+PC9kaXY+JywnPGRpdiBjbGFzcz1cIm5vdGUtY29udHJvbC1ob2xkZXIgbm90ZS1jb250cm9sLW5lXCI+PC9kaXY+JywnPGRpdiBjbGFzcz1cIm5vdGUtY29udHJvbC1ob2xkZXIgbm90ZS1jb250cm9sLXN3XCI+PC9kaXY+JywnPGRpdiBjbGFzcz1cIicsdGhpcy5vcHRpb25zLmRpc2FibGVSZXNpemVJbWFnZT9cIm5vdGUtY29udHJvbC1ob2xkZXJcIjpcIm5vdGUtY29udHJvbC1zaXppbmdcIiwnIG5vdGUtY29udHJvbC1zZVwiPjwvZGl2PicsdGhpcy5vcHRpb25zLmRpc2FibGVSZXNpemVJbWFnZT9cIlwiOic8ZGl2IGNsYXNzPVwibm90ZS1jb250cm9sLXNlbGVjdGlvbi1pbmZvXCI+PC9kaXY+JyxcIjwvZGl2PlwiLFwiPC9kaXY+XCJdLmpvaW4oXCJcIikpLnByZXBlbmRUbyh0aGlzLiRlZGl0aW5nQXJlYSksdGhpcy4kaGFuZGxlLm9uKFwibW91c2Vkb3duXCIsKGZ1bmN0aW9uKGUpe2lmKGh0LmlzQ29udHJvbFNpemluZyhlLnRhcmdldCkpe2UucHJldmVudERlZmF1bHQoKSxlLnN0b3BQcm9wYWdhdGlvbigpO3ZhciBuPXQuJGhhbmRsZS5maW5kKFwiLm5vdGUtY29udHJvbC1zZWxlY3Rpb25cIikuZGF0YShcInRhcmdldFwiKSxvPW4ub2Zmc2V0KCksaT10LiRkb2N1bWVudC5zY3JvbGxUb3AoKSxyPWZ1bmN0aW9uKGUpe3QuY29udGV4dC5pbnZva2UoXCJlZGl0b3IucmVzaXplVG9cIix7eDplLmNsaWVudFgtby5sZWZ0LHk6ZS5jbGllbnRZLShvLnRvcC1pKX0sbiwhZS5zaGlmdEtleSksdC51cGRhdGUoblswXSxlKX07dC4kZG9jdW1lbnQub24oXCJtb3VzZW1vdmVcIixyKS5vbmUoXCJtb3VzZXVwXCIsKGZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKSx0LiRkb2N1bWVudC5vZmYoXCJtb3VzZW1vdmVcIixyKSx0LmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmFmdGVyQ29tbWFuZFwiKX0pKSxuLmRhdGEoXCJyYXRpb1wiKXx8bi5kYXRhKFwicmF0aW9cIixuLmhlaWdodCgpL24ud2lkdGgoKSl9fSkpLHRoaXMuJGhhbmRsZS5vbihcIndoZWVsXCIsKGZ1bmN0aW9uKGUpe2UucHJldmVudERlZmF1bHQoKSx0LnVwZGF0ZSgpfSkpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJGhhbmRsZS5yZW1vdmUoKX19LHtrZXk6XCJ1cGRhdGVcIix2YWx1ZTpmdW5jdGlvbih0LG4pe2lmKHRoaXMuY29udGV4dC5pc0Rpc2FibGVkKCkpcmV0dXJuITE7dmFyIG89aHQuaXNJbWcodCksaT10aGlzLiRoYW5kbGUuZmluZChcIi5ub3RlLWNvbnRyb2wtc2VsZWN0aW9uXCIpO2lmKHRoaXMuY29udGV4dC5pbnZva2UoXCJpbWFnZVBvcG92ZXIudXBkYXRlXCIsdCxuKSxvKXt2YXIgcj1lKCkodCksYT1yLnBvc2l0aW9uKCkscz17bGVmdDphLmxlZnQrcGFyc2VJbnQoci5jc3MoXCJtYXJnaW5MZWZ0XCIpLDEwKSx0b3A6YS50b3ArcGFyc2VJbnQoci5jc3MoXCJtYXJnaW5Ub3BcIiksMTApfSxsPXt3OnIub3V0ZXJXaWR0aCghMSksaDpyLm91dGVySGVpZ2h0KCExKX07aS5jc3Moe2Rpc3BsYXk6XCJibG9ja1wiLGxlZnQ6cy5sZWZ0LHRvcDpzLnRvcCx3aWR0aDpsLncsaGVpZ2h0OmwuaH0pLmRhdGEoXCJ0YXJnZXRcIixyKTt2YXIgYz1uZXcgSW1hZ2U7Yy5zcmM9ci5hdHRyKFwic3JjXCIpO3ZhciB1PWwudytcInhcIitsLmgrXCIgKFwiK3RoaXMubGFuZy5pbWFnZS5vcmlnaW5hbCtcIjogXCIrYy53aWR0aCtcInhcIitjLmhlaWdodCtcIilcIjtpLmZpbmQoXCIubm90ZS1jb250cm9sLXNlbGVjdGlvbi1pbmZvXCIpLnRleHQodSksdGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5zYXZlVGFyZ2V0XCIsdCl9ZWxzZSB0aGlzLmhpZGUoKTtyZXR1cm4gb319LHtrZXk6XCJoaWRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmNsZWFyVGFyZ2V0XCIpLHRoaXMuJGhhbmRsZS5jaGlsZHJlbigpLmhpZGUoKX19XSxvJiZfdChuLnByb3RvdHlwZSxvKSxpJiZfdChuLGkpLHR9KCk7ZnVuY3Rpb24gWXQodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fXZhciBadD0vXihbQS1aYS16XVtBLVphLXowLTkrLS5dKlxcOltcXC9dezJ9fHRlbDp8bWFpbHRvOltBLVowLTkuXyUrLV0rQHx4bXBwOltBLVowLTkuXyUrLV0rQCk/KHd3d1xcLik/KC4rKSQvaSxRdD1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7dmFyIG49dGhpczshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLHRoaXMuY29udGV4dD1lLHRoaXMub3B0aW9ucz1lLm9wdGlvbnMsdGhpcy5ldmVudHM9e1wic3VtbWVybm90ZS5rZXl1cFwiOmZ1bmN0aW9uKHQsZSl7ZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKXx8bi5oYW5kbGVLZXl1cChlKX0sXCJzdW1tZXJub3RlLmtleWRvd25cIjpmdW5jdGlvbih0LGUpe24uaGFuZGxlS2V5ZG93bihlKX19fXZhciBuLG8saTtyZXR1cm4gbj10LChvPVt7a2V5OlwiaW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5sYXN0V29yZFJhbmdlPW51bGx9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5sYXN0V29yZFJhbmdlPW51bGx9fSx7a2V5OlwicmVwbGFjZVwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy5sYXN0V29yZFJhbmdlKXt2YXIgdD10aGlzLmxhc3RXb3JkUmFuZ2UudG9TdHJpbmcoKSxuPXQubWF0Y2goWnQpO2lmKG4mJihuWzFdfHxuWzJdKSl7dmFyIG89blsxXT90OlwiaHR0cDovL1wiK3QsaT10aGlzLm9wdGlvbnMuc2hvd0RvbWFpbk9ubHlGb3JBdXRvbGluaz90LnJlcGxhY2UoL14oPzpodHRwcz86XFwvXFwvKT8oPzp0ZWw/Oj8pPyg/Om1haWx0bz86Pyk/KD86eG1wcD86Pyk/KD86d3d3XFwuKT8vaSxcIlwiKS5zcGxpdChcIi9cIilbMF06dCxyPWUoKShcIjxhPjwvYT5cIikuaHRtbChpKS5hdHRyKFwiaHJlZlwiLG8pWzBdO3RoaXMuY29udGV4dC5vcHRpb25zLmxpbmtUYXJnZXRCbGFuayYmZSgpKHIpLmF0dHIoXCJ0YXJnZXRcIixcIl9ibGFua1wiKSx0aGlzLmxhc3RXb3JkUmFuZ2UuaW5zZXJ0Tm9kZShyKSx0aGlzLmxhc3RXb3JkUmFuZ2U9bnVsbCx0aGlzLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmZvY3VzXCIpfX19fSx7a2V5OlwiaGFuZGxlS2V5ZG93blwiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKGsuY29udGFpbnMoW3d0LmNvZGUuRU5URVIsd3QuY29kZS5TUEFDRV0sdC5rZXlDb2RlKSl7dmFyIGU9dGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5jcmVhdGVSYW5nZVwiKS5nZXRXb3JkUmFuZ2UoKTt0aGlzLmxhc3RXb3JkUmFuZ2U9ZX19fSx7a2V5OlwiaGFuZGxlS2V5dXBcIix2YWx1ZTpmdW5jdGlvbih0KXtrLmNvbnRhaW5zKFt3dC5jb2RlLkVOVEVSLHd0LmNvZGUuU1BBQ0VdLHQua2V5Q29kZSkmJnRoaXMucmVwbGFjZSgpfX1dKSYmWXQobi5wcm90b3R5cGUsbyksaSYmWXQobixpKSx0fSgpO2Z1bmN0aW9uIFh0KHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgSnQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpe3ZhciBuPXRoaXM7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLiRub3RlPWUubGF5b3V0SW5mby5ub3RlLHRoaXMuZXZlbnRzPXtcInN1bW1lcm5vdGUuY2hhbmdlXCI6ZnVuY3Rpb24oKXtuLiRub3RlLnZhbChlLmludm9rZShcImNvZGVcIikpfX19dmFyIGUsbixvO3JldHVybiBlPXQsKG49W3trZXk6XCJzaG91bGRJbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gaHQuaXNUZXh0YXJlYSh0aGlzLiRub3RlWzBdKX19XSkmJlh0KGUucHJvdG90eXBlLG4pLG8mJlh0KGUsbyksdH0oKTtmdW5jdGlvbiB0ZSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19dmFyIGVlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChlKXt2YXIgbj10aGlzOyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5jb250ZXh0PWUsdGhpcy5vcHRpb25zPWUub3B0aW9ucy5yZXBsYWNlfHx7fSx0aGlzLmtleXM9W3d0LmNvZGUuRU5URVIsd3QuY29kZS5TUEFDRSx3dC5jb2RlLlBFUklPRCx3dC5jb2RlLkNPTU1BLHd0LmNvZGUuU0VNSUNPTE9OLHd0LmNvZGUuU0xBU0hdLHRoaXMucHJldmlvdXNLZXlkb3duQ29kZT1udWxsLHRoaXMuZXZlbnRzPXtcInN1bW1lcm5vdGUua2V5dXBcIjpmdW5jdGlvbih0LGUpe2UuaXNEZWZhdWx0UHJldmVudGVkKCl8fG4uaGFuZGxlS2V5dXAoZSl9LFwic3VtbWVybm90ZS5rZXlkb3duXCI6ZnVuY3Rpb24odCxlKXtuLmhhbmRsZUtleWRvd24oZSl9fX12YXIgZSxuLG87cmV0dXJuIGU9dCwobj1be2tleTpcInNob3VsZEluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiEhdGhpcy5vcHRpb25zLm1hdGNofX0se2tleTpcImluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMubGFzdFdvcmQ9bnVsbH19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmxhc3RXb3JkPW51bGx9fSx7a2V5OlwicmVwbGFjZVwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy5sYXN0V29yZCl7dmFyIHQ9dGhpcyxlPXRoaXMubGFzdFdvcmQudG9TdHJpbmcoKTt0aGlzLm9wdGlvbnMubWF0Y2goZSwoZnVuY3Rpb24oZSl7aWYoZSl7dmFyIG49XCJcIjtpZihcInN0cmluZ1wiPT10eXBlb2YgZT9uPWh0LmNyZWF0ZVRleHQoZSk6ZSBpbnN0YW5jZW9mIGpRdWVyeT9uPWVbMF06ZSBpbnN0YW5jZW9mIE5vZGUmJihuPWUpLCFuKXJldHVybjt0Lmxhc3RXb3JkLmluc2VydE5vZGUobiksdC5sYXN0V29yZD1udWxsLHQuY29udGV4dC5pbnZva2UoXCJlZGl0b3IuZm9jdXNcIil9fSkpfX19LHtrZXk6XCJoYW5kbGVLZXlkb3duXCIsdmFsdWU6ZnVuY3Rpb24odCl7aWYodGhpcy5wcmV2aW91c0tleWRvd25Db2RlJiZrLmNvbnRhaW5zKHRoaXMua2V5cyx0aGlzLnByZXZpb3VzS2V5ZG93bkNvZGUpKXRoaXMucHJldmlvdXNLZXlkb3duQ29kZT10LmtleUNvZGU7ZWxzZXtpZihrLmNvbnRhaW5zKHRoaXMua2V5cyx0LmtleUNvZGUpKXt2YXIgZT10aGlzLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmNyZWF0ZVJhbmdlXCIpLmdldFdvcmRSYW5nZSgpO3RoaXMubGFzdFdvcmQ9ZX10aGlzLnByZXZpb3VzS2V5ZG93bkNvZGU9dC5rZXlDb2RlfX19LHtrZXk6XCJoYW5kbGVLZXl1cFwiLHZhbHVlOmZ1bmN0aW9uKHQpe2suY29udGFpbnModGhpcy5rZXlzLHQua2V5Q29kZSkmJnRoaXMucmVwbGFjZSgpfX1dKSYmdGUoZS5wcm90b3R5cGUsbiksbyYmdGUoZSxvKSx0fSgpO2Z1bmN0aW9uIG5lKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgb2U9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUpe3ZhciBuPXRoaXM7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLmNvbnRleHQ9ZSx0aGlzLiRlZGl0aW5nQXJlYT1lLmxheW91dEluZm8uZWRpdGluZ0FyZWEsdGhpcy5vcHRpb25zPWUub3B0aW9ucywhMD09PXRoaXMub3B0aW9ucy5pbmhlcml0UGxhY2Vob2xkZXImJih0aGlzLm9wdGlvbnMucGxhY2Vob2xkZXI9dGhpcy5jb250ZXh0LiRub3RlLmF0dHIoXCJwbGFjZWhvbGRlclwiKXx8dGhpcy5vcHRpb25zLnBsYWNlaG9sZGVyKSx0aGlzLmV2ZW50cz17XCJzdW1tZXJub3RlLmluaXQgc3VtbWVybm90ZS5jaGFuZ2VcIjpmdW5jdGlvbigpe24udXBkYXRlKCl9LFwic3VtbWVybm90ZS5jb2Rldmlldy50b2dnbGVkXCI6ZnVuY3Rpb24oKXtuLnVwZGF0ZSgpfX19dmFyIG4sbyxpO3JldHVybiBuPXQsKG89W3trZXk6XCJzaG91bGRJbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMub3B0aW9ucy5wbGFjZWhvbGRlcn19LHtrZXk6XCJpbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuJHBsYWNlaG9sZGVyPWUoKSgnPGRpdiBjbGFzcz1cIm5vdGUtcGxhY2Vob2xkZXJcIj48L2Rpdj4nKSx0aGlzLiRwbGFjZWhvbGRlci5vbihcImNsaWNrXCIsKGZ1bmN0aW9uKCl7dC5jb250ZXh0Lmludm9rZShcImZvY3VzXCIpfSkpLmh0bWwodGhpcy5vcHRpb25zLnBsYWNlaG9sZGVyKS5wcmVwZW5kVG8odGhpcy4kZWRpdGluZ0FyZWEpLHRoaXMudXBkYXRlKCl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kcGxhY2Vob2xkZXIucmVtb3ZlKCl9fSx7a2V5OlwidXBkYXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD0hdGhpcy5jb250ZXh0Lmludm9rZShcImNvZGV2aWV3LmlzQWN0aXZhdGVkXCIpJiZ0aGlzLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmlzRW1wdHlcIik7dGhpcy4kcGxhY2Vob2xkZXIudG9nZ2xlKHQpfX1dKSYmbmUobi5wcm90b3R5cGUsbyksaSYmbmUobixpKSx0fSgpO2Z1bmN0aW9uIGllKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgcmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4peyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy51aT1lKCkuc3VtbWVybm90ZS51aSx0aGlzLmNvbnRleHQ9bix0aGlzLiR0b29sYmFyPW4ubGF5b3V0SW5mby50b29sYmFyLHRoaXMub3B0aW9ucz1uLm9wdGlvbnMsdGhpcy5sYW5nPXRoaXMub3B0aW9ucy5sYW5nSW5mbyx0aGlzLmludmVydGVkS2V5TWFwPW0uaW52ZXJ0T2JqZWN0KHRoaXMub3B0aW9ucy5rZXlNYXBbZi5pc01hYz9cIm1hY1wiOlwicGNcIl0pfXZhciBuLG8saTtyZXR1cm4gbj10LG89W3trZXk6XCJyZXByZXNlbnRTaG9ydGN1dFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuaW52ZXJ0ZWRLZXlNYXBbdF07cmV0dXJuIHRoaXMub3B0aW9ucy5zaG9ydGN1dHMmJmU/KGYuaXNNYWMmJihlPWUucmVwbGFjZShcIkNNRFwiLFwi4oyYXCIpLnJlcGxhY2UoXCJTSElGVFwiLFwi4oenXCIpKSxcIiAoXCIrKGU9ZS5yZXBsYWNlKFwiQkFDS1NMQVNIXCIsXCJcXFxcXCIpLnJlcGxhY2UoXCJTTEFTSFwiLFwiL1wiKS5yZXBsYWNlKFwiTEVGVEJSQUNLRVRcIixcIltcIikucmVwbGFjZShcIlJJR0hUQlJBQ0tFVFwiLFwiXVwiKSkrXCIpXCIpOlwiXCJ9fSx7a2V5OlwiYnV0dG9uXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIXRoaXMub3B0aW9ucy50b29sdGlwJiZ0LnRvb2x0aXAmJmRlbGV0ZSB0LnRvb2x0aXAsdC5jb250YWluZXI9dGhpcy5vcHRpb25zLmNvbnRhaW5lcix0aGlzLnVpLmJ1dHRvbih0KX19LHtrZXk6XCJpbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLmFkZFRvb2xiYXJCdXR0b25zKCksdGhpcy5hZGRJbWFnZVBvcG92ZXJCdXR0b25zKCksdGhpcy5hZGRMaW5rUG9wb3ZlckJ1dHRvbnMoKSx0aGlzLmFkZFRhYmxlUG9wb3ZlckJ1dHRvbnMoKSx0aGlzLmZvbnRJbnN0YWxsZWRNYXA9e319fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7ZGVsZXRlIHRoaXMuZm9udEluc3RhbGxlZE1hcH19LHtrZXk6XCJpc0ZvbnRJbnN0YWxsZWRcIix2YWx1ZTpmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuZm9udEluc3RhbGxlZE1hcCx0KXx8KHRoaXMuZm9udEluc3RhbGxlZE1hcFt0XT1mLmlzRm9udEluc3RhbGxlZCh0KXx8ay5jb250YWlucyh0aGlzLm9wdGlvbnMuZm9udE5hbWVzSWdub3JlQ2hlY2ssdCkpLHRoaXMuZm9udEluc3RhbGxlZE1hcFt0XX19LHtrZXk6XCJpc0ZvbnREZXNlcnZlZFRvQWRkXCIsdmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuXCJcIiE9PSh0PXQudG9Mb3dlckNhc2UoKSkmJnRoaXMuaXNGb250SW5zdGFsbGVkKHQpJiYtMT09PWYuZ2VuZXJpY0ZvbnRGYW1pbGllcy5pbmRleE9mKHQpfX0se2tleTpcImNvbG9yUGFsZXR0ZVwiLHZhbHVlOmZ1bmN0aW9uKHQsbixvLGkpe3ZhciByPXRoaXM7cmV0dXJuIHRoaXMudWkuYnV0dG9uR3JvdXAoe2NsYXNzTmFtZTpcIm5vdGUtY29sb3IgXCIrdCxjaGlsZHJlbjpbdGhpcy5idXR0b24oe2NsYXNzTmFtZTpcIm5vdGUtY3VycmVudC1jb2xvci1idXR0b25cIixjb250ZW50czp0aGlzLnVpLmljb24odGhpcy5vcHRpb25zLmljb25zLmZvbnQrXCIgbm90ZS1yZWNlbnQtY29sb3JcIiksdG9vbHRpcDpuLGNsaWNrOmZ1bmN0aW9uKHQpe3ZhciBuPWUoKSh0LmN1cnJlbnRUYXJnZXQpO28mJmk/ci5jb250ZXh0Lmludm9rZShcImVkaXRvci5jb2xvclwiLHtiYWNrQ29sb3I6bi5hdHRyKFwiZGF0YS1iYWNrQ29sb3JcIiksZm9yZUNvbG9yOm4uYXR0cihcImRhdGEtZm9yZUNvbG9yXCIpfSk6bz9yLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmNvbG9yXCIse2JhY2tDb2xvcjpuLmF0dHIoXCJkYXRhLWJhY2tDb2xvclwiKX0pOmkmJnIuY29udGV4dC5pbnZva2UoXCJlZGl0b3IuY29sb3JcIix7Zm9yZUNvbG9yOm4uYXR0cihcImRhdGEtZm9yZUNvbG9yXCIpfSl9LGNhbGxiYWNrOmZ1bmN0aW9uKHQpe3ZhciBlPXQuZmluZChcIi5ub3RlLXJlY2VudC1jb2xvclwiKTtvJiYoZS5jc3MoXCJiYWNrZ3JvdW5kLWNvbG9yXCIsci5vcHRpb25zLmNvbG9yQnV0dG9uLmJhY2tDb2xvciksdC5hdHRyKFwiZGF0YS1iYWNrQ29sb3JcIixyLm9wdGlvbnMuY29sb3JCdXR0b24uYmFja0NvbG9yKSksaT8oZS5jc3MoXCJjb2xvclwiLHIub3B0aW9ucy5jb2xvckJ1dHRvbi5mb3JlQ29sb3IpLHQuYXR0cihcImRhdGEtZm9yZUNvbG9yXCIsci5vcHRpb25zLmNvbG9yQnV0dG9uLmZvcmVDb2xvcikpOmUuY3NzKFwiY29sb3JcIixcInRyYW5zcGFyZW50XCIpfX0pLHRoaXMuYnV0dG9uKHtjbGFzc05hbWU6XCJkcm9wZG93bi10b2dnbGVcIixjb250ZW50czp0aGlzLnVpLmRyb3Bkb3duQnV0dG9uQ29udGVudHMoXCJcIix0aGlzLm9wdGlvbnMpLHRvb2x0aXA6dGhpcy5sYW5nLmNvbG9yLm1vcmUsZGF0YTp7dG9nZ2xlOlwiZHJvcGRvd25cIn19KSx0aGlzLnVpLmRyb3Bkb3duKHtpdGVtczoobz9bJzxkaXYgY2xhc3M9XCJub3RlLXBhbGV0dGVcIj4nLCc8ZGl2IGNsYXNzPVwibm90ZS1wYWxldHRlLXRpdGxlXCI+Jyt0aGlzLmxhbmcuY29sb3IuYmFja2dyb3VuZCtcIjwvZGl2PlwiLFwiPGRpdj5cIiwnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJub3RlLWNvbG9yLXJlc2V0IGJ0biBidG4tbGlnaHQgYnRuLWRlZmF1bHRcIiBkYXRhLWV2ZW50PVwiYmFja0NvbG9yXCIgZGF0YS12YWx1ZT1cInRyYW5zcGFyZW50XCI+Jyx0aGlzLmxhbmcuY29sb3IudHJhbnNwYXJlbnQsXCI8L2J1dHRvbj5cIixcIjwvZGl2PlwiLCc8ZGl2IGNsYXNzPVwibm90ZS1ob2xkZXJcIiBkYXRhLWV2ZW50PVwiYmFja0NvbG9yXCI+XFx4M2MhLS0gYmFjayBjb2xvcnMgLS1cXHgzZTwvZGl2PicsXCI8ZGl2PlwiLCc8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cIm5vdGUtY29sb3Itc2VsZWN0IGJ0biBidG4tbGlnaHQgYnRuLWRlZmF1bHRcIiBkYXRhLWV2ZW50PVwib3BlblBhbGV0dGVcIiBkYXRhLXZhbHVlPVwiYmFja0NvbG9yUGlja2VyLScrdGhpcy5vcHRpb25zLmlkKydcIj4nLHRoaXMubGFuZy5jb2xvci5jcFNlbGVjdCxcIjwvYnV0dG9uPlwiLCc8aW5wdXQgdHlwZT1cImNvbG9yXCIgaWQ9XCJiYWNrQ29sb3JQaWNrZXItJyt0aGlzLm9wdGlvbnMuaWQrJ1wiIGNsYXNzPVwibm90ZS1idG4gbm90ZS1jb2xvci1zZWxlY3QtYnRuXCIgdmFsdWU9XCInK3RoaXMub3B0aW9ucy5jb2xvckJ1dHRvbi5iYWNrQ29sb3IrJ1wiIGRhdGEtZXZlbnQ9XCJiYWNrQ29sb3JQYWxldHRlLScrdGhpcy5vcHRpb25zLmlkKydcIj4nLFwiPC9kaXY+XCIsJzxkaXYgY2xhc3M9XCJub3RlLWhvbGRlci1jdXN0b21cIiBpZD1cImJhY2tDb2xvclBhbGV0dGUtJyt0aGlzLm9wdGlvbnMuaWQrJ1wiIGRhdGEtZXZlbnQ9XCJiYWNrQ29sb3JcIj48L2Rpdj4nLFwiPC9kaXY+XCJdLmpvaW4oXCJcIik6XCJcIikrKGk/Wyc8ZGl2IGNsYXNzPVwibm90ZS1wYWxldHRlXCI+JywnPGRpdiBjbGFzcz1cIm5vdGUtcGFsZXR0ZS10aXRsZVwiPicrdGhpcy5sYW5nLmNvbG9yLmZvcmVncm91bmQrXCI8L2Rpdj5cIixcIjxkaXY+XCIsJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwibm90ZS1jb2xvci1yZXNldCBidG4gYnRuLWxpZ2h0IGJ0bi1kZWZhdWx0XCIgZGF0YS1ldmVudD1cInJlbW92ZUZvcm1hdFwiIGRhdGEtdmFsdWU9XCJmb3JlQ29sb3JcIj4nLHRoaXMubGFuZy5jb2xvci5yZXNldFRvRGVmYXVsdCxcIjwvYnV0dG9uPlwiLFwiPC9kaXY+XCIsJzxkaXYgY2xhc3M9XCJub3RlLWhvbGRlclwiIGRhdGEtZXZlbnQ9XCJmb3JlQ29sb3JcIj5cXHgzYyEtLSBmb3JlIGNvbG9ycyAtLVxceDNlPC9kaXY+JyxcIjxkaXY+XCIsJzxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwibm90ZS1jb2xvci1zZWxlY3QgYnRuIGJ0bi1saWdodCBidG4tZGVmYXVsdFwiIGRhdGEtZXZlbnQ9XCJvcGVuUGFsZXR0ZVwiIGRhdGEtdmFsdWU9XCJmb3JlQ29sb3JQaWNrZXItJyt0aGlzLm9wdGlvbnMuaWQrJ1wiPicsdGhpcy5sYW5nLmNvbG9yLmNwU2VsZWN0LFwiPC9idXR0b24+XCIsJzxpbnB1dCB0eXBlPVwiY29sb3JcIiBpZD1cImZvcmVDb2xvclBpY2tlci0nK3RoaXMub3B0aW9ucy5pZCsnXCIgY2xhc3M9XCJub3RlLWJ0biBub3RlLWNvbG9yLXNlbGVjdC1idG5cIiB2YWx1ZT1cIicrdGhpcy5vcHRpb25zLmNvbG9yQnV0dG9uLmZvcmVDb2xvcisnXCIgZGF0YS1ldmVudD1cImZvcmVDb2xvclBhbGV0dGUtJyt0aGlzLm9wdGlvbnMuaWQrJ1wiPicsXCI8L2Rpdj5cIiwnPGRpdiBjbGFzcz1cIm5vdGUtaG9sZGVyLWN1c3RvbVwiIGlkPVwiZm9yZUNvbG9yUGFsZXR0ZS0nK3RoaXMub3B0aW9ucy5pZCsnXCIgZGF0YS1ldmVudD1cImZvcmVDb2xvclwiPjwvZGl2PicsXCI8L2Rpdj5cIl0uam9pbihcIlwiKTpcIlwiKSxjYWxsYmFjazpmdW5jdGlvbih0KXt0LmZpbmQoXCIubm90ZS1ob2xkZXJcIikuZWFjaCgoZnVuY3Rpb24odCxuKXt2YXIgbz1lKCkobik7by5hcHBlbmQoci51aS5wYWxldHRlKHtjb2xvcnM6ci5vcHRpb25zLmNvbG9ycyxjb2xvcnNOYW1lOnIub3B0aW9ucy5jb2xvcnNOYW1lLGV2ZW50TmFtZTpvLmRhdGEoXCJldmVudFwiKSxjb250YWluZXI6ci5vcHRpb25zLmNvbnRhaW5lcix0b29sdGlwOnIub3B0aW9ucy50b29sdGlwfSkucmVuZGVyKCkpfSkpO3ZhciBuPVtbXCIjRkZGRkZGXCIsXCIjRkZGRkZGXCIsXCIjRkZGRkZGXCIsXCIjRkZGRkZGXCIsXCIjRkZGRkZGXCIsXCIjRkZGRkZGXCIsXCIjRkZGRkZGXCIsXCIjRkZGRkZGXCJdXTt0LmZpbmQoXCIubm90ZS1ob2xkZXItY3VzdG9tXCIpLmVhY2goKGZ1bmN0aW9uKHQsbyl7dmFyIGk9ZSgpKG8pO2kuYXBwZW5kKHIudWkucGFsZXR0ZSh7Y29sb3JzOm4sY29sb3JzTmFtZTpuLGV2ZW50TmFtZTppLmRhdGEoXCJldmVudFwiKSxjb250YWluZXI6ci5vcHRpb25zLmNvbnRhaW5lcix0b29sdGlwOnIub3B0aW9ucy50b29sdGlwfSkucmVuZGVyKCkpfSkpLHQuZmluZChcImlucHV0W3R5cGU9Y29sb3JdXCIpLmVhY2goKGZ1bmN0aW9uKG4sbyl7ZSgpKG8pLmNoYW5nZSgoZnVuY3Rpb24oKXt2YXIgbj10LmZpbmQoXCIjXCIrZSgpKHRoaXMpLmRhdGEoXCJldmVudFwiKSkuZmluZChcIi5ub3RlLWNvbG9yLWJ0blwiKS5maXJzdCgpLG89dGhpcy52YWx1ZS50b1VwcGVyQ2FzZSgpO24uY3NzKFwiYmFja2dyb3VuZC1jb2xvclwiLG8pLmF0dHIoXCJhcmlhLWxhYmVsXCIsbykuYXR0cihcImRhdGEtdmFsdWVcIixvKS5hdHRyKFwiZGF0YS1vcmlnaW5hbC10aXRsZVwiLG8pLG4uY2xpY2soKX0pKX0pKX0sY2xpY2s6ZnVuY3Rpb24obil7bi5zdG9wUHJvcGFnYXRpb24oKTt2YXIgbz1lKCkoXCIuXCIrdCkuZmluZChcIi5ub3RlLWRyb3Bkb3duLW1lbnVcIiksaT1lKCkobi50YXJnZXQpLGE9aS5kYXRhKFwiZXZlbnRcIikscz1pLmF0dHIoXCJkYXRhLXZhbHVlXCIpO2lmKFwib3BlblBhbGV0dGVcIj09PWEpe3ZhciBsPW8uZmluZChcIiNcIitzKSxjPWUoKShvLmZpbmQoXCIjXCIrbC5kYXRhKFwiZXZlbnRcIikpLmZpbmQoXCIubm90ZS1jb2xvci1yb3dcIilbMF0pLHU9Yy5maW5kKFwiLm5vdGUtY29sb3ItYnRuXCIpLmxhc3QoKS5kZXRhY2goKSxkPWwudmFsKCk7dS5jc3MoXCJiYWNrZ3JvdW5kLWNvbG9yXCIsZCkuYXR0cihcImFyaWEtbGFiZWxcIixkKS5hdHRyKFwiZGF0YS12YWx1ZVwiLGQpLmF0dHIoXCJkYXRhLW9yaWdpbmFsLXRpdGxlXCIsZCksYy5wcmVwZW5kKHUpLGwuY2xpY2soKX1lbHNle2lmKGsuY29udGFpbnMoW1wiYmFja0NvbG9yXCIsXCJmb3JlQ29sb3JcIl0sYSkpe3ZhciBoPVwiYmFja0NvbG9yXCI9PT1hP1wiYmFja2dyb3VuZC1jb2xvclwiOlwiY29sb3JcIixmPWkuY2xvc2VzdChcIi5ub3RlLWNvbG9yXCIpLmZpbmQoXCIubm90ZS1yZWNlbnQtY29sb3JcIikscD1pLmNsb3Nlc3QoXCIubm90ZS1jb2xvclwiKS5maW5kKFwiLm5vdGUtY3VycmVudC1jb2xvci1idXR0b25cIik7Zi5jc3MoaCxzKSxwLmF0dHIoXCJkYXRhLVwiK2Escyl9ci5jb250ZXh0Lmludm9rZShcImVkaXRvci5cIithLHMpfX19KV19KS5yZW5kZXIoKX19LHtrZXk6XCJhZGRUb29sYmFyQnV0dG9uc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5zdHlsZVwiLChmdW5jdGlvbigpe3JldHVybiB0LnVpLmJ1dHRvbkdyb3VwKFt0LmJ1dHRvbih7Y2xhc3NOYW1lOlwiZHJvcGRvd24tdG9nZ2xlXCIsY29udGVudHM6dC51aS5kcm9wZG93bkJ1dHRvbkNvbnRlbnRzKHQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMubWFnaWMpLHQub3B0aW9ucyksdG9vbHRpcDp0Lmxhbmcuc3R5bGUuc3R5bGUsZGF0YTp7dG9nZ2xlOlwiZHJvcGRvd25cIn19KSx0LnVpLmRyb3Bkb3duKHtjbGFzc05hbWU6XCJkcm9wZG93bi1zdHlsZVwiLGl0ZW1zOnQub3B0aW9ucy5zdHlsZVRhZ3MsdGl0bGU6dC5sYW5nLnN0eWxlLnN0eWxlLHRlbXBsYXRlOmZ1bmN0aW9uKGUpe1wic3RyaW5nXCI9PXR5cGVvZiBlJiYoZT17dGFnOmUsdGl0bGU6T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQubGFuZy5zdHlsZSxlKT90Lmxhbmcuc3R5bGVbZV06ZX0pO3ZhciBuPWUudGFnLG89ZS50aXRsZTtyZXR1cm5cIjxcIituKyhlLnN0eWxlPycgc3R5bGU9XCInK2Uuc3R5bGUrJ1wiICc6XCJcIikrKGUuY2xhc3NOYW1lPycgY2xhc3M9XCInK2UuY2xhc3NOYW1lKydcIic6XCJcIikrXCI+XCIrbytcIjwvXCIrbitcIj5cIn0sY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IuZm9ybWF0QmxvY2tcIil9KV0pLnJlbmRlcigpfSkpO2Zvcih2YXIgbj1mdW5jdGlvbihlLG4pe3ZhciBvPXQub3B0aW9ucy5zdHlsZVRhZ3NbZV07dC5jb250ZXh0Lm1lbW8oXCJidXR0b24uc3R5bGUuXCIrbywoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NsYXNzTmFtZTpcIm5vdGUtYnRuLXN0eWxlLVwiK28sY29udGVudHM6JzxkaXYgZGF0YS12YWx1ZT1cIicrbysnXCI+JytvLnRvVXBwZXJDYXNlKCkrXCI8L2Rpdj5cIix0b29sdGlwOnQubGFuZy5zdHlsZVtvXSxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5mb3JtYXRCbG9ja1wiKX0pLnJlbmRlcigpfSkpfSxvPTAsaT10aGlzLm9wdGlvbnMuc3R5bGVUYWdzLmxlbmd0aDtvPGk7bysrKW4obyk7dGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uYm9sZFwiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y2xhc3NOYW1lOlwibm90ZS1idG4tYm9sZFwiLGNvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMuYm9sZCksdG9vbHRpcDp0LmxhbmcuZm9udC5ib2xkK3QucmVwcmVzZW50U2hvcnRjdXQoXCJib2xkXCIpLGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyQW5kVXBkYXRlU3RhdGUoXCJlZGl0b3IuYm9sZFwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLml0YWxpY1wiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y2xhc3NOYW1lOlwibm90ZS1idG4taXRhbGljXCIsY29udGVudHM6dC51aS5pY29uKHQub3B0aW9ucy5pY29ucy5pdGFsaWMpLHRvb2x0aXA6dC5sYW5nLmZvbnQuaXRhbGljK3QucmVwcmVzZW50U2hvcnRjdXQoXCJpdGFsaWNcIiksY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXJBbmRVcGRhdGVTdGF0ZShcImVkaXRvci5pdGFsaWNcIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi51bmRlcmxpbmVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NsYXNzTmFtZTpcIm5vdGUtYnRuLXVuZGVybGluZVwiLGNvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMudW5kZXJsaW5lKSx0b29sdGlwOnQubGFuZy5mb250LnVuZGVybGluZSt0LnJlcHJlc2VudFNob3J0Y3V0KFwidW5kZXJsaW5lXCIpLGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyQW5kVXBkYXRlU3RhdGUoXCJlZGl0b3IudW5kZXJsaW5lXCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uY2xlYXJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMuZXJhc2VyKSx0b29sdGlwOnQubGFuZy5mb250LmNsZWFyK3QucmVwcmVzZW50U2hvcnRjdXQoXCJyZW1vdmVGb3JtYXRcIiksY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IucmVtb3ZlRm9ybWF0XCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uc3RyaWtldGhyb3VnaFwiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y2xhc3NOYW1lOlwibm90ZS1idG4tc3RyaWtldGhyb3VnaFwiLGNvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMuc3RyaWtldGhyb3VnaCksdG9vbHRpcDp0LmxhbmcuZm9udC5zdHJpa2V0aHJvdWdoK3QucmVwcmVzZW50U2hvcnRjdXQoXCJzdHJpa2V0aHJvdWdoXCIpLGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyQW5kVXBkYXRlU3RhdGUoXCJlZGl0b3Iuc3RyaWtldGhyb3VnaFwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLnN1cGVyc2NyaXB0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjbGFzc05hbWU6XCJub3RlLWJ0bi1zdXBlcnNjcmlwdFwiLGNvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMuc3VwZXJzY3JpcHQpLHRvb2x0aXA6dC5sYW5nLmZvbnQuc3VwZXJzY3JpcHQsY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXJBbmRVcGRhdGVTdGF0ZShcImVkaXRvci5zdXBlcnNjcmlwdFwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLnN1YnNjcmlwdFwiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y2xhc3NOYW1lOlwibm90ZS1idG4tc3Vic2NyaXB0XCIsY29udGVudHM6dC51aS5pY29uKHQub3B0aW9ucy5pY29ucy5zdWJzY3JpcHQpLHRvb2x0aXA6dC5sYW5nLmZvbnQuc3Vic2NyaXB0LGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyQW5kVXBkYXRlU3RhdGUoXCJlZGl0b3Iuc3Vic2NyaXB0XCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uZm9udG5hbWVcIiwoZnVuY3Rpb24oKXt2YXIgbj10LmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmN1cnJlbnRTdHlsZVwiKTtyZXR1cm4gdC5vcHRpb25zLmFkZERlZmF1bHRGb250cyYmZSgpLmVhY2gobltcImZvbnQtZmFtaWx5XCJdLnNwbGl0KFwiLFwiKSwoZnVuY3Rpb24oZSxuKXtuPW4udHJpbSgpLnJlcGxhY2UoL1snXCJdKy9nLFwiXCIpLHQuaXNGb250RGVzZXJ2ZWRUb0FkZChuKSYmLTE9PT10Lm9wdGlvbnMuZm9udE5hbWVzLmluZGV4T2YobikmJnQub3B0aW9ucy5mb250TmFtZXMucHVzaChuKX0pKSx0LnVpLmJ1dHRvbkdyb3VwKFt0LmJ1dHRvbih7Y2xhc3NOYW1lOlwiZHJvcGRvd24tdG9nZ2xlXCIsY29udGVudHM6dC51aS5kcm9wZG93bkJ1dHRvbkNvbnRlbnRzKCc8c3BhbiBjbGFzcz1cIm5vdGUtY3VycmVudC1mb250bmFtZVwiPjwvc3Bhbj4nLHQub3B0aW9ucyksdG9vbHRpcDp0LmxhbmcuZm9udC5uYW1lLGRhdGE6e3RvZ2dsZTpcImRyb3Bkb3duXCJ9fSksdC51aS5kcm9wZG93bkNoZWNrKHtjbGFzc05hbWU6XCJkcm9wZG93bi1mb250bmFtZVwiLGNoZWNrQ2xhc3NOYW1lOnQub3B0aW9ucy5pY29ucy5tZW51Q2hlY2ssaXRlbXM6dC5vcHRpb25zLmZvbnROYW1lcy5maWx0ZXIodC5pc0ZvbnRJbnN0YWxsZWQuYmluZCh0KSksdGl0bGU6dC5sYW5nLmZvbnQubmFtZSx0ZW1wbGF0ZTpmdW5jdGlvbih0KXtyZXR1cm4nPHNwYW4gc3R5bGU9XCJmb250LWZhbWlseTogJytmLnZhbGlkRm9udE5hbWUodCkrJ1wiPicrdCtcIjwvc3Bhbj5cIn0sY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXJBbmRVcGRhdGVTdGF0ZShcImVkaXRvci5mb250TmFtZVwiKX0pXSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uZm9udHNpemVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC51aS5idXR0b25Hcm91cChbdC5idXR0b24oe2NsYXNzTmFtZTpcImRyb3Bkb3duLXRvZ2dsZVwiLGNvbnRlbnRzOnQudWkuZHJvcGRvd25CdXR0b25Db250ZW50cygnPHNwYW4gY2xhc3M9XCJub3RlLWN1cnJlbnQtZm9udHNpemVcIj48L3NwYW4+Jyx0Lm9wdGlvbnMpLHRvb2x0aXA6dC5sYW5nLmZvbnQuc2l6ZSxkYXRhOnt0b2dnbGU6XCJkcm9wZG93blwifX0pLHQudWkuZHJvcGRvd25DaGVjayh7Y2xhc3NOYW1lOlwiZHJvcGRvd24tZm9udHNpemVcIixjaGVja0NsYXNzTmFtZTp0Lm9wdGlvbnMuaWNvbnMubWVudUNoZWNrLGl0ZW1zOnQub3B0aW9ucy5mb250U2l6ZXMsdGl0bGU6dC5sYW5nLmZvbnQuc2l6ZSxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlckFuZFVwZGF0ZVN0YXRlKFwiZWRpdG9yLmZvbnRTaXplXCIpfSldKS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5mb250c2l6ZXVuaXRcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC51aS5idXR0b25Hcm91cChbdC5idXR0b24oe2NsYXNzTmFtZTpcImRyb3Bkb3duLXRvZ2dsZVwiLGNvbnRlbnRzOnQudWkuZHJvcGRvd25CdXR0b25Db250ZW50cygnPHNwYW4gY2xhc3M9XCJub3RlLWN1cnJlbnQtZm9udHNpemV1bml0XCI+PC9zcGFuPicsdC5vcHRpb25zKSx0b29sdGlwOnQubGFuZy5mb250LnNpemV1bml0LGRhdGE6e3RvZ2dsZTpcImRyb3Bkb3duXCJ9fSksdC51aS5kcm9wZG93bkNoZWNrKHtjbGFzc05hbWU6XCJkcm9wZG93bi1mb250c2l6ZXVuaXRcIixjaGVja0NsYXNzTmFtZTp0Lm9wdGlvbnMuaWNvbnMubWVudUNoZWNrLGl0ZW1zOnQub3B0aW9ucy5mb250U2l6ZVVuaXRzLHRpdGxlOnQubGFuZy5mb250LnNpemV1bml0LGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyQW5kVXBkYXRlU3RhdGUoXCJlZGl0b3IuZm9udFNpemVVbml0XCIpfSldKS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5jb2xvclwiLChmdW5jdGlvbigpe3JldHVybiB0LmNvbG9yUGFsZXR0ZShcIm5vdGUtY29sb3ItYWxsXCIsdC5sYW5nLmNvbG9yLnJlY2VudCwhMCwhMCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uZm9yZWNvbG9yXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuY29sb3JQYWxldHRlKFwibm90ZS1jb2xvci1mb3JlXCIsdC5sYW5nLmNvbG9yLmZvcmVncm91bmQsITEsITApfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmJhY2tjb2xvclwiLChmdW5jdGlvbigpe3JldHVybiB0LmNvbG9yUGFsZXR0ZShcIm5vdGUtY29sb3ItYmFja1wiLHQubGFuZy5jb2xvci5iYWNrZ3JvdW5kLCEwLCExKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi51bFwiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y29udGVudHM6dC51aS5pY29uKHQub3B0aW9ucy5pY29ucy51bm9yZGVyZWRsaXN0KSx0b29sdGlwOnQubGFuZy5saXN0cy51bm9yZGVyZWQrdC5yZXByZXNlbnRTaG9ydGN1dChcImluc2VydFVub3JkZXJlZExpc3RcIiksY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IuaW5zZXJ0VW5vcmRlcmVkTGlzdFwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLm9sXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLm9yZGVyZWRsaXN0KSx0b29sdGlwOnQubGFuZy5saXN0cy5vcmRlcmVkK3QucmVwcmVzZW50U2hvcnRjdXQoXCJpbnNlcnRPcmRlcmVkTGlzdFwiKSxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5pbnNlcnRPcmRlcmVkTGlzdFwiKX0pLnJlbmRlcigpfSkpO3ZhciByPXRoaXMuYnV0dG9uKHtjb250ZW50czp0aGlzLnVpLmljb24odGhpcy5vcHRpb25zLmljb25zLmFsaWduTGVmdCksdG9vbHRpcDp0aGlzLmxhbmcucGFyYWdyYXBoLmxlZnQrdGhpcy5yZXByZXNlbnRTaG9ydGN1dChcImp1c3RpZnlMZWZ0XCIpLGNsaWNrOnRoaXMuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiZWRpdG9yLmp1c3RpZnlMZWZ0XCIpfSksYT10aGlzLmJ1dHRvbih7Y29udGVudHM6dGhpcy51aS5pY29uKHRoaXMub3B0aW9ucy5pY29ucy5hbGlnbkNlbnRlciksdG9vbHRpcDp0aGlzLmxhbmcucGFyYWdyYXBoLmNlbnRlcit0aGlzLnJlcHJlc2VudFNob3J0Y3V0KFwianVzdGlmeUNlbnRlclwiKSxjbGljazp0aGlzLmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5qdXN0aWZ5Q2VudGVyXCIpfSkscz10aGlzLmJ1dHRvbih7Y29udGVudHM6dGhpcy51aS5pY29uKHRoaXMub3B0aW9ucy5pY29ucy5hbGlnblJpZ2h0KSx0b29sdGlwOnRoaXMubGFuZy5wYXJhZ3JhcGgucmlnaHQrdGhpcy5yZXByZXNlbnRTaG9ydGN1dChcImp1c3RpZnlSaWdodFwiKSxjbGljazp0aGlzLmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5qdXN0aWZ5UmlnaHRcIil9KSxsPXRoaXMuYnV0dG9uKHtjb250ZW50czp0aGlzLnVpLmljb24odGhpcy5vcHRpb25zLmljb25zLmFsaWduSnVzdGlmeSksdG9vbHRpcDp0aGlzLmxhbmcucGFyYWdyYXBoLmp1c3RpZnkrdGhpcy5yZXByZXNlbnRTaG9ydGN1dChcImp1c3RpZnlGdWxsXCIpLGNsaWNrOnRoaXMuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiZWRpdG9yLmp1c3RpZnlGdWxsXCIpfSksYz10aGlzLmJ1dHRvbih7Y29udGVudHM6dGhpcy51aS5pY29uKHRoaXMub3B0aW9ucy5pY29ucy5vdXRkZW50KSx0b29sdGlwOnRoaXMubGFuZy5wYXJhZ3JhcGgub3V0ZGVudCt0aGlzLnJlcHJlc2VudFNob3J0Y3V0KFwib3V0ZGVudFwiKSxjbGljazp0aGlzLmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5vdXRkZW50XCIpfSksdT10aGlzLmJ1dHRvbih7Y29udGVudHM6dGhpcy51aS5pY29uKHRoaXMub3B0aW9ucy5pY29ucy5pbmRlbnQpLHRvb2x0aXA6dGhpcy5sYW5nLnBhcmFncmFwaC5pbmRlbnQrdGhpcy5yZXByZXNlbnRTaG9ydGN1dChcImluZGVudFwiKSxjbGljazp0aGlzLmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5pbmRlbnRcIil9KTt0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5qdXN0aWZ5TGVmdFwiLG0uaW52b2tlKHIsXCJyZW5kZXJcIikpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmp1c3RpZnlDZW50ZXJcIixtLmludm9rZShhLFwicmVuZGVyXCIpKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5qdXN0aWZ5UmlnaHRcIixtLmludm9rZShzLFwicmVuZGVyXCIpKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5qdXN0aWZ5RnVsbFwiLG0uaW52b2tlKGwsXCJyZW5kZXJcIikpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLm91dGRlbnRcIixtLmludm9rZShjLFwicmVuZGVyXCIpKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5pbmRlbnRcIixtLmludm9rZSh1LFwicmVuZGVyXCIpKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5wYXJhZ3JhcGhcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC51aS5idXR0b25Hcm91cChbdC5idXR0b24oe2NsYXNzTmFtZTpcImRyb3Bkb3duLXRvZ2dsZVwiLGNvbnRlbnRzOnQudWkuZHJvcGRvd25CdXR0b25Db250ZW50cyh0LnVpLmljb24odC5vcHRpb25zLmljb25zLmFsaWduTGVmdCksdC5vcHRpb25zKSx0b29sdGlwOnQubGFuZy5wYXJhZ3JhcGgucGFyYWdyYXBoLGRhdGE6e3RvZ2dsZTpcImRyb3Bkb3duXCJ9fSksdC51aS5kcm9wZG93bihbdC51aS5idXR0b25Hcm91cCh7Y2xhc3NOYW1lOlwibm90ZS1hbGlnblwiLGNoaWxkcmVuOltyLGEscyxsXX0pLHQudWkuYnV0dG9uR3JvdXAoe2NsYXNzTmFtZTpcIm5vdGUtbGlzdFwiLGNoaWxkcmVuOltjLHVdfSldKV0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmhlaWdodFwiLChmdW5jdGlvbigpe3JldHVybiB0LnVpLmJ1dHRvbkdyb3VwKFt0LmJ1dHRvbih7Y2xhc3NOYW1lOlwiZHJvcGRvd24tdG9nZ2xlXCIsY29udGVudHM6dC51aS5kcm9wZG93bkJ1dHRvbkNvbnRlbnRzKHQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMudGV4dEhlaWdodCksdC5vcHRpb25zKSx0b29sdGlwOnQubGFuZy5mb250LmhlaWdodCxkYXRhOnt0b2dnbGU6XCJkcm9wZG93blwifX0pLHQudWkuZHJvcGRvd25DaGVjayh7aXRlbXM6dC5vcHRpb25zLmxpbmVIZWlnaHRzLGNoZWNrQ2xhc3NOYW1lOnQub3B0aW9ucy5pY29ucy5tZW51Q2hlY2ssY2xhc3NOYW1lOlwiZHJvcGRvd24tbGluZS1oZWlnaHRcIix0aXRsZTp0LmxhbmcuZm9udC5oZWlnaHQsY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IubGluZUhlaWdodFwiKX0pXSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24udGFibGVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC51aS5idXR0b25Hcm91cChbdC5idXR0b24oe2NsYXNzTmFtZTpcImRyb3Bkb3duLXRvZ2dsZVwiLGNvbnRlbnRzOnQudWkuZHJvcGRvd25CdXR0b25Db250ZW50cyh0LnVpLmljb24odC5vcHRpb25zLmljb25zLnRhYmxlKSx0Lm9wdGlvbnMpLHRvb2x0aXA6dC5sYW5nLnRhYmxlLnRhYmxlLGRhdGE6e3RvZ2dsZTpcImRyb3Bkb3duXCJ9fSksdC51aS5kcm9wZG93bih7dGl0bGU6dC5sYW5nLnRhYmxlLnRhYmxlLGNsYXNzTmFtZTpcIm5vdGUtdGFibGVcIixpdGVtczpbJzxkaXYgY2xhc3M9XCJub3RlLWRpbWVuc2lvbi1waWNrZXJcIj4nLCc8ZGl2IGNsYXNzPVwibm90ZS1kaW1lbnNpb24tcGlja2VyLW1vdXNlY2F0Y2hlclwiIGRhdGEtZXZlbnQ9XCJpbnNlcnRUYWJsZVwiIGRhdGEtdmFsdWU9XCIxeDFcIj48L2Rpdj4nLCc8ZGl2IGNsYXNzPVwibm90ZS1kaW1lbnNpb24tcGlja2VyLWhpZ2hsaWdodGVkXCI+PC9kaXY+JywnPGRpdiBjbGFzcz1cIm5vdGUtZGltZW5zaW9uLXBpY2tlci11bmhpZ2hsaWdodGVkXCI+PC9kaXY+JyxcIjwvZGl2PlwiLCc8ZGl2IGNsYXNzPVwibm90ZS1kaW1lbnNpb24tZGlzcGxheVwiPjEgeCAxPC9kaXY+J10uam9pbihcIlwiKX0pXSx7Y2FsbGJhY2s6ZnVuY3Rpb24oZSl7ZS5maW5kKFwiLm5vdGUtZGltZW5zaW9uLXBpY2tlci1tb3VzZWNhdGNoZXJcIikuY3NzKHt3aWR0aDp0Lm9wdGlvbnMuaW5zZXJ0VGFibGVNYXhTaXplLmNvbCtcImVtXCIsaGVpZ2h0OnQub3B0aW9ucy5pbnNlcnRUYWJsZU1heFNpemUucm93K1wiZW1cIn0pLm1vdXNldXAodC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IuaW5zZXJ0VGFibGVcIikpLm9uKFwibW91c2Vtb3ZlXCIsdC50YWJsZU1vdmVIYW5kbGVyLmJpbmQodCkpfX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmxpbmtcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMubGluayksdG9vbHRpcDp0LmxhbmcubGluay5saW5rK3QucmVwcmVzZW50U2hvcnRjdXQoXCJsaW5rRGlhbG9nLnNob3dcIiksY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJsaW5rRGlhbG9nLnNob3dcIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5waWN0dXJlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLnBpY3R1cmUpLHRvb2x0aXA6dC5sYW5nLmltYWdlLmltYWdlLGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiaW1hZ2VEaWFsb2cuc2hvd1wiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLnZpZGVvXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLnZpZGVvKSx0b29sdGlwOnQubGFuZy52aWRlby52aWRlbyxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcInZpZGVvRGlhbG9nLnNob3dcIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5oclwiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y29udGVudHM6dC51aS5pY29uKHQub3B0aW9ucy5pY29ucy5taW51cyksdG9vbHRpcDp0LmxhbmcuaHIuaW5zZXJ0K3QucmVwcmVzZW50U2hvcnRjdXQoXCJpbnNlcnRIb3Jpem9udGFsUnVsZVwiKSxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5pbnNlcnRIb3Jpem9udGFsUnVsZVwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmZ1bGxzY3JlZW5cIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NsYXNzTmFtZTpcImJ0bi1mdWxsc2NyZWVuIG5vdGUtY29kZXZpZXcta2VlcFwiLGNvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMuYXJyb3dzQWx0KSx0b29sdGlwOnQubGFuZy5vcHRpb25zLmZ1bGxzY3JlZW4sY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJmdWxsc2NyZWVuLnRvZ2dsZVwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmNvZGV2aWV3XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjbGFzc05hbWU6XCJidG4tY29kZXZpZXcgbm90ZS1jb2Rldmlldy1rZWVwXCIsY29udGVudHM6dC51aS5pY29uKHQub3B0aW9ucy5pY29ucy5jb2RlKSx0b29sdGlwOnQubGFuZy5vcHRpb25zLmNvZGV2aWV3LGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiY29kZXZpZXcudG9nZ2xlXCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24ucmVkb1wiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y29udGVudHM6dC51aS5pY29uKHQub3B0aW9ucy5pY29ucy5yZWRvKSx0b29sdGlwOnQubGFuZy5oaXN0b3J5LnJlZG8rdC5yZXByZXNlbnRTaG9ydGN1dChcInJlZG9cIiksY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IucmVkb1wiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLnVuZG9cIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMudW5kbyksdG9vbHRpcDp0LmxhbmcuaGlzdG9yeS51bmRvK3QucmVwcmVzZW50U2hvcnRjdXQoXCJ1bmRvXCIpLGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiZWRpdG9yLnVuZG9cIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5oZWxwXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLnF1ZXN0aW9uKSx0b29sdGlwOnQubGFuZy5vcHRpb25zLmhlbHAsY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJoZWxwRGlhbG9nLnNob3dcIil9KS5yZW5kZXIoKX0pKX19LHtrZXk6XCJhZGRJbWFnZVBvcG92ZXJCdXR0b25zXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLnJlc2l6ZUZ1bGxcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOic8c3BhbiBjbGFzcz1cIm5vdGUtZm9udHNpemUtMTBcIj4xMDAlPC9zcGFuPicsdG9vbHRpcDp0LmxhbmcuaW1hZ2UucmVzaXplRnVsbCxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5yZXNpemVcIixcIjFcIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5yZXNpemVIYWxmXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjb250ZW50czonPHNwYW4gY2xhc3M9XCJub3RlLWZvbnRzaXplLTEwXCI+NTAlPC9zcGFuPicsdG9vbHRpcDp0LmxhbmcuaW1hZ2UucmVzaXplSGFsZixjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5yZXNpemVcIixcIjAuNVwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLnJlc2l6ZVF1YXJ0ZXJcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOic8c3BhbiBjbGFzcz1cIm5vdGUtZm9udHNpemUtMTBcIj4yNSU8L3NwYW4+Jyx0b29sdGlwOnQubGFuZy5pbWFnZS5yZXNpemVRdWFydGVyLGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiZWRpdG9yLnJlc2l6ZVwiLFwiMC4yNVwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLnJlc2l6ZU5vbmVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMucm9sbGJhY2spLHRvb2x0aXA6dC5sYW5nLmltYWdlLnJlc2l6ZU5vbmUsY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IucmVzaXplXCIsXCIwXCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uZmxvYXRMZWZ0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLmZsb2F0TGVmdCksdG9vbHRpcDp0LmxhbmcuaW1hZ2UuZmxvYXRMZWZ0LGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiZWRpdG9yLmZsb2F0TWVcIixcImxlZnRcIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5mbG9hdFJpZ2h0XCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLmZsb2F0UmlnaHQpLHRvb2x0aXA6dC5sYW5nLmltYWdlLmZsb2F0UmlnaHQsY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IuZmxvYXRNZVwiLFwicmlnaHRcIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5mbG9hdE5vbmVcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMucm9sbGJhY2spLHRvb2x0aXA6dC5sYW5nLmltYWdlLmZsb2F0Tm9uZSxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5mbG9hdE1lXCIsXCJub25lXCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24ucmVtb3ZlTWVkaWFcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMudHJhc2gpLHRvb2x0aXA6dC5sYW5nLmltYWdlLnJlbW92ZSxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5yZW1vdmVNZWRpYVwiKX0pLnJlbmRlcigpfSkpfX0se2tleTpcImFkZExpbmtQb3BvdmVyQnV0dG9uc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5saW5rRGlhbG9nU2hvd1wiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y29udGVudHM6dC51aS5pY29uKHQub3B0aW9ucy5pY29ucy5saW5rKSx0b29sdGlwOnQubGFuZy5saW5rLmVkaXQsY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJsaW5rRGlhbG9nLnNob3dcIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi51bmxpbmtcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMudW5saW5rKSx0b29sdGlwOnQubGFuZy5saW5rLnVubGluayxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci51bmxpbmtcIil9KS5yZW5kZXIoKX0pKX19LHtrZXk6XCJhZGRUYWJsZVBvcG92ZXJCdXR0b25zXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmFkZFJvd1VwXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjbGFzc05hbWU6XCJidG4tbWRcIixjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLnJvd0Fib3ZlKSx0b29sdGlwOnQubGFuZy50YWJsZS5hZGRSb3dBYm92ZSxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5hZGRSb3dcIixcInRvcFwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmFkZFJvd0Rvd25cIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NsYXNzTmFtZTpcImJ0bi1tZFwiLGNvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMucm93QmVsb3cpLHRvb2x0aXA6dC5sYW5nLnRhYmxlLmFkZFJvd0JlbG93LGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiZWRpdG9yLmFkZFJvd1wiLFwiYm90dG9tXCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uYWRkQ29sTGVmdFwiLChmdW5jdGlvbigpe3JldHVybiB0LmJ1dHRvbih7Y2xhc3NOYW1lOlwiYnRuLW1kXCIsY29udGVudHM6dC51aS5pY29uKHQub3B0aW9ucy5pY29ucy5jb2xCZWZvcmUpLHRvb2x0aXA6dC5sYW5nLnRhYmxlLmFkZENvbExlZnQsY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IuYWRkQ29sXCIsXCJsZWZ0XCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uYWRkQ29sUmlnaHRcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NsYXNzTmFtZTpcImJ0bi1tZFwiLGNvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMuY29sQWZ0ZXIpLHRvb2x0aXA6dC5sYW5nLnRhYmxlLmFkZENvbFJpZ2h0LGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiZWRpdG9yLmFkZENvbFwiLFwicmlnaHRcIil9KS5yZW5kZXIoKX0pKSx0aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5kZWxldGVSb3dcIiwoZnVuY3Rpb24oKXtyZXR1cm4gdC5idXR0b24oe2NsYXNzTmFtZTpcImJ0bi1tZFwiLGNvbnRlbnRzOnQudWkuaWNvbih0Lm9wdGlvbnMuaWNvbnMucm93UmVtb3ZlKSx0b29sdGlwOnQubGFuZy50YWJsZS5kZWxSb3csY2xpY2s6dC5jb250ZXh0LmNyZWF0ZUludm9rZUhhbmRsZXIoXCJlZGl0b3IuZGVsZXRlUm93XCIpfSkucmVuZGVyKCl9KSksdGhpcy5jb250ZXh0Lm1lbW8oXCJidXR0b24uZGVsZXRlQ29sXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjbGFzc05hbWU6XCJidG4tbWRcIixjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLmNvbFJlbW92ZSksdG9vbHRpcDp0LmxhbmcudGFibGUuZGVsQ29sLGNsaWNrOnQuY29udGV4dC5jcmVhdGVJbnZva2VIYW5kbGVyKFwiZWRpdG9yLmRlbGV0ZUNvbFwiKX0pLnJlbmRlcigpfSkpLHRoaXMuY29udGV4dC5tZW1vKFwiYnV0dG9uLmRlbGV0ZVRhYmxlXCIsKGZ1bmN0aW9uKCl7cmV0dXJuIHQuYnV0dG9uKHtjbGFzc05hbWU6XCJidG4tbWRcIixjb250ZW50czp0LnVpLmljb24odC5vcHRpb25zLmljb25zLnRyYXNoKSx0b29sdGlwOnQubGFuZy50YWJsZS5kZWxUYWJsZSxjbGljazp0LmNvbnRleHQuY3JlYXRlSW52b2tlSGFuZGxlcihcImVkaXRvci5kZWxldGVUYWJsZVwiKX0pLnJlbmRlcigpfSkpfX0se2tleTpcImJ1aWxkXCIsdmFsdWU6ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxvPWUubGVuZ3RoO248bztuKyspe2Zvcih2YXIgaT1lW25dLHI9QXJyYXkuaXNBcnJheShpKT9pWzBdOmksYT1BcnJheS5pc0FycmF5KGkpPzE9PT1pLmxlbmd0aD9baVswXV06aVsxXTpbaV0scz10aGlzLnVpLmJ1dHRvbkdyb3VwKHtjbGFzc05hbWU6XCJub3RlLVwiK3J9KS5yZW5kZXIoKSxsPTAsYz1hLmxlbmd0aDtsPGM7bCsrKXt2YXIgdT10aGlzLmNvbnRleHQubWVtbyhcImJ1dHRvbi5cIithW2xdKTt1JiZzLmFwcGVuZChcImZ1bmN0aW9uXCI9PXR5cGVvZiB1P3UodGhpcy5jb250ZXh0KTp1KX1zLmFwcGVuZFRvKHQpfX19LHtrZXk6XCJ1cGRhdGVDdXJyZW50U3R5bGVcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgbj10fHx0aGlzLiR0b29sYmFyLG89dGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5jdXJyZW50U3R5bGVcIik7aWYodGhpcy51cGRhdGVCdG5TdGF0ZXMobix7XCIubm90ZS1idG4tYm9sZFwiOmZ1bmN0aW9uKCl7cmV0dXJuXCJib2xkXCI9PT1vW1wiZm9udC1ib2xkXCJdfSxcIi5ub3RlLWJ0bi1pdGFsaWNcIjpmdW5jdGlvbigpe3JldHVyblwiaXRhbGljXCI9PT1vW1wiZm9udC1pdGFsaWNcIl19LFwiLm5vdGUtYnRuLXVuZGVybGluZVwiOmZ1bmN0aW9uKCl7cmV0dXJuXCJ1bmRlcmxpbmVcIj09PW9bXCJmb250LXVuZGVybGluZVwiXX0sXCIubm90ZS1idG4tc3Vic2NyaXB0XCI6ZnVuY3Rpb24oKXtyZXR1cm5cInN1YnNjcmlwdFwiPT09b1tcImZvbnQtc3Vic2NyaXB0XCJdfSxcIi5ub3RlLWJ0bi1zdXBlcnNjcmlwdFwiOmZ1bmN0aW9uKCl7cmV0dXJuXCJzdXBlcnNjcmlwdFwiPT09b1tcImZvbnQtc3VwZXJzY3JpcHRcIl19LFwiLm5vdGUtYnRuLXN0cmlrZXRocm91Z2hcIjpmdW5jdGlvbigpe3JldHVyblwic3RyaWtldGhyb3VnaFwiPT09b1tcImZvbnQtc3RyaWtldGhyb3VnaFwiXX19KSxvW1wiZm9udC1mYW1pbHlcIl0pe3ZhciBpPW9bXCJmb250LWZhbWlseVwiXS5zcGxpdChcIixcIikubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC5yZXBsYWNlKC9bXFwnXFxcIl0vZyxcIlwiKS5yZXBsYWNlKC9cXHMrJC8sXCJcIikucmVwbGFjZSgvXlxccysvLFwiXCIpfSkpLHI9ay5maW5kKGksdGhpcy5pc0ZvbnRJbnN0YWxsZWQuYmluZCh0aGlzKSk7bi5maW5kKFwiLmRyb3Bkb3duLWZvbnRuYW1lIGFcIikuZWFjaCgoZnVuY3Rpb24odCxuKXt2YXIgbz1lKCkobiksaT1vLmRhdGEoXCJ2YWx1ZVwiKStcIlwiPT1yK1wiXCI7by50b2dnbGVDbGFzcyhcImNoZWNrZWRcIixpKX0pKSxuLmZpbmQoXCIubm90ZS1jdXJyZW50LWZvbnRuYW1lXCIpLnRleHQocikuY3NzKFwiZm9udC1mYW1pbHlcIixyKX1pZihvW1wiZm9udC1zaXplXCJdKXt2YXIgYT1vW1wiZm9udC1zaXplXCJdO24uZmluZChcIi5kcm9wZG93bi1mb250c2l6ZSBhXCIpLmVhY2goKGZ1bmN0aW9uKHQsbil7dmFyIG89ZSgpKG4pLGk9by5kYXRhKFwidmFsdWVcIikrXCJcIj09YStcIlwiO28udG9nZ2xlQ2xhc3MoXCJjaGVja2VkXCIsaSl9KSksbi5maW5kKFwiLm5vdGUtY3VycmVudC1mb250c2l6ZVwiKS50ZXh0KGEpO3ZhciBzPW9bXCJmb250LXNpemUtdW5pdFwiXTtuLmZpbmQoXCIuZHJvcGRvd24tZm9udHNpemV1bml0IGFcIikuZWFjaCgoZnVuY3Rpb24odCxuKXt2YXIgbz1lKCkobiksaT1vLmRhdGEoXCJ2YWx1ZVwiKStcIlwiPT1zK1wiXCI7by50b2dnbGVDbGFzcyhcImNoZWNrZWRcIixpKX0pKSxuLmZpbmQoXCIubm90ZS1jdXJyZW50LWZvbnRzaXpldW5pdFwiKS50ZXh0KHMpfWlmKG9bXCJsaW5lLWhlaWdodFwiXSl7dmFyIGw9b1tcImxpbmUtaGVpZ2h0XCJdO24uZmluZChcIi5kcm9wZG93bi1saW5lLWhlaWdodCBhXCIpLmVhY2goKGZ1bmN0aW9uKHQsbil7dmFyIG89ZSgpKG4pLGk9ZSgpKG4pLmRhdGEoXCJ2YWx1ZVwiKStcIlwiPT1sK1wiXCI7by50b2dnbGVDbGFzcyhcImNoZWNrZWRcIixpKX0pKSxuLmZpbmQoXCIubm90ZS1jdXJyZW50LWxpbmUtaGVpZ2h0XCIpLnRleHQobCl9fX0se2tleTpcInVwZGF0ZUJ0blN0YXRlc1wiLHZhbHVlOmZ1bmN0aW9uKHQsbil7dmFyIG89dGhpcztlKCkuZWFjaChuLChmdW5jdGlvbihlLG4pe28udWkudG9nZ2xlQnRuQWN0aXZlKHQuZmluZChlKSxuKCkpfSkpfX0se2tleTpcInRhYmxlTW92ZUhhbmRsZXJcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgbixvPWUoKSh0LnRhcmdldC5wYXJlbnROb2RlKSxpPW8ubmV4dCgpLHI9by5maW5kKFwiLm5vdGUtZGltZW5zaW9uLXBpY2tlci1tb3VzZWNhdGNoZXJcIiksYT1vLmZpbmQoXCIubm90ZS1kaW1lbnNpb24tcGlja2VyLWhpZ2hsaWdodGVkXCIpLHM9by5maW5kKFwiLm5vdGUtZGltZW5zaW9uLXBpY2tlci11bmhpZ2hsaWdodGVkXCIpO2lmKHZvaWQgMD09PXQub2Zmc2V0WCl7dmFyIGw9ZSgpKHQudGFyZ2V0KS5vZmZzZXQoKTtuPXt4OnQucGFnZVgtbC5sZWZ0LHk6dC5wYWdlWS1sLnRvcH19ZWxzZSBuPXt4OnQub2Zmc2V0WCx5OnQub2Zmc2V0WX07dmFyIGM9TWF0aC5jZWlsKG4ueC8xOCl8fDEsdT1NYXRoLmNlaWwobi55LzE4KXx8MTthLmNzcyh7d2lkdGg6YytcImVtXCIsaGVpZ2h0OnUrXCJlbVwifSksci5kYXRhKFwidmFsdWVcIixjK1wieFwiK3UpLGM+MyYmYzx0aGlzLm9wdGlvbnMuaW5zZXJ0VGFibGVNYXhTaXplLmNvbCYmcy5jc3Moe3dpZHRoOmMrMStcImVtXCJ9KSx1PjMmJnU8dGhpcy5vcHRpb25zLmluc2VydFRhYmxlTWF4U2l6ZS5yb3cmJnMuY3NzKHtoZWlnaHQ6dSsxK1wiZW1cIn0pLGkuaHRtbChjK1wiIHggXCIrdSl9fV0sbyYmaWUobi5wcm90b3R5cGUsbyksaSYmaWUobixpKSx0fSgpO2Z1bmN0aW9uIGFlKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgc2U9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4peyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5jb250ZXh0PW4sdGhpcy4kd2luZG93PWUoKSh3aW5kb3cpLHRoaXMuJGRvY3VtZW50PWUoKShkb2N1bWVudCksdGhpcy51aT1lKCkuc3VtbWVybm90ZS51aSx0aGlzLiRub3RlPW4ubGF5b3V0SW5mby5ub3RlLHRoaXMuJGVkaXRvcj1uLmxheW91dEluZm8uZWRpdG9yLHRoaXMuJHRvb2xiYXI9bi5sYXlvdXRJbmZvLnRvb2xiYXIsdGhpcy4kZWRpdGFibGU9bi5sYXlvdXRJbmZvLmVkaXRhYmxlLHRoaXMuJHN0YXR1c2Jhcj1uLmxheW91dEluZm8uc3RhdHVzYmFyLHRoaXMub3B0aW9ucz1uLm9wdGlvbnMsdGhpcy5pc0ZvbGxvd2luZz0hMSx0aGlzLmZvbGxvd1Njcm9sbD10aGlzLmZvbGxvd1Njcm9sbC5iaW5kKHRoaXMpfXZhciBuLG8saTtyZXR1cm4gbj10LChvPVt7a2V5Olwic2hvdWxkSW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMub3B0aW9ucy5haXJNb2RlfX0se2tleTpcImluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5vcHRpb25zLnRvb2xiYXI9dGhpcy5vcHRpb25zLnRvb2xiYXJ8fFtdLHRoaXMub3B0aW9ucy50b29sYmFyLmxlbmd0aD90aGlzLmNvbnRleHQuaW52b2tlKFwiYnV0dG9ucy5idWlsZFwiLHRoaXMuJHRvb2xiYXIsdGhpcy5vcHRpb25zLnRvb2xiYXIpOnRoaXMuJHRvb2xiYXIuaGlkZSgpLHRoaXMub3B0aW9ucy50b29sYmFyQ29udGFpbmVyJiZ0aGlzLiR0b29sYmFyLmFwcGVuZFRvKHRoaXMub3B0aW9ucy50b29sYmFyQ29udGFpbmVyKSx0aGlzLmNoYW5nZUNvbnRhaW5lcighMSksdGhpcy4kbm90ZS5vbihcInN1bW1lcm5vdGUua2V5dXAgc3VtbWVybm90ZS5tb3VzZXVwIHN1bW1lcm5vdGUuY2hhbmdlXCIsKGZ1bmN0aW9uKCl7dC5jb250ZXh0Lmludm9rZShcImJ1dHRvbnMudXBkYXRlQ3VycmVudFN0eWxlXCIpfSkpLHRoaXMuY29udGV4dC5pbnZva2UoXCJidXR0b25zLnVwZGF0ZUN1cnJlbnRTdHlsZVwiKSx0aGlzLm9wdGlvbnMuZm9sbG93aW5nVG9vbGJhciYmdGhpcy4kd2luZG93Lm9uKFwic2Nyb2xsIHJlc2l6ZVwiLHRoaXMuZm9sbG93U2Nyb2xsKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiR0b29sYmFyLmNoaWxkcmVuKCkucmVtb3ZlKCksdGhpcy5vcHRpb25zLmZvbGxvd2luZ1Rvb2xiYXImJnRoaXMuJHdpbmRvdy5vZmYoXCJzY3JvbGwgcmVzaXplXCIsdGhpcy5mb2xsb3dTY3JvbGwpfX0se2tleTpcImZvbGxvd1Njcm9sbFwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy4kZWRpdG9yLmhhc0NsYXNzKFwiZnVsbHNjcmVlblwiKSlyZXR1cm4hMTt2YXIgdD10aGlzLiRlZGl0b3Iub3V0ZXJIZWlnaHQoKSxuPXRoaXMuJGVkaXRvci53aWR0aCgpLG89dGhpcy4kdG9vbGJhci5oZWlnaHQoKSxpPXRoaXMuJHN0YXR1c2Jhci5oZWlnaHQoKSxyPTA7dGhpcy5vcHRpb25zLm90aGVyU3RhdGljQmFyJiYocj1lKCkodGhpcy5vcHRpb25zLm90aGVyU3RhdGljQmFyKS5vdXRlckhlaWdodCgpKTt2YXIgYT10aGlzLiRkb2N1bWVudC5zY3JvbGxUb3AoKSxzPXRoaXMuJGVkaXRvci5vZmZzZXQoKS50b3AsbD1zLXIsYz1zK3Qtci1vLWk7IXRoaXMuaXNGb2xsb3dpbmcmJmE+bCYmYTxjLW8/KHRoaXMuaXNGb2xsb3dpbmc9ITAsdGhpcy4kZWRpdGFibGUuY3NzKHttYXJnaW5Ub3A6dGhpcy4kdG9vbGJhci5vdXRlckhlaWdodCgpfSksdGhpcy4kdG9vbGJhci5jc3Moe3Bvc2l0aW9uOlwiZml4ZWRcIix0b3A6cix3aWR0aDpuLHpJbmRleDoxZTN9KSk6dGhpcy5pc0ZvbGxvd2luZyYmKGE8bHx8YT5jKSYmKHRoaXMuaXNGb2xsb3dpbmc9ITEsdGhpcy4kdG9vbGJhci5jc3Moe3Bvc2l0aW9uOlwicmVsYXRpdmVcIix0b3A6MCx3aWR0aDpcIjEwMCVcIix6SW5kZXg6XCJhdXRvXCJ9KSx0aGlzLiRlZGl0YWJsZS5jc3Moe21hcmdpblRvcDpcIlwifSkpfX0se2tleTpcImNoYW5nZUNvbnRhaW5lclwiLHZhbHVlOmZ1bmN0aW9uKHQpe3Q/dGhpcy4kdG9vbGJhci5wcmVwZW5kVG8odGhpcy4kZWRpdG9yKTp0aGlzLm9wdGlvbnMudG9vbGJhckNvbnRhaW5lciYmdGhpcy4kdG9vbGJhci5hcHBlbmRUbyh0aGlzLm9wdGlvbnMudG9vbGJhckNvbnRhaW5lciksdGhpcy5vcHRpb25zLmZvbGxvd2luZ1Rvb2xiYXImJnRoaXMuZm9sbG93U2Nyb2xsKCl9fSx7a2V5OlwidXBkYXRlRnVsbHNjcmVlblwiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMudWkudG9nZ2xlQnRuQWN0aXZlKHRoaXMuJHRvb2xiYXIuZmluZChcIi5idG4tZnVsbHNjcmVlblwiKSx0KSx0aGlzLmNoYW5nZUNvbnRhaW5lcih0KX19LHtrZXk6XCJ1cGRhdGVDb2Rldmlld1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMudWkudG9nZ2xlQnRuQWN0aXZlKHRoaXMuJHRvb2xiYXIuZmluZChcIi5idG4tY29kZXZpZXdcIiksdCksdD90aGlzLmRlYWN0aXZhdGUoKTp0aGlzLmFjdGl2YXRlKCl9fSx7a2V5OlwiYWN0aXZhdGVcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLiR0b29sYmFyLmZpbmQoXCJidXR0b25cIik7dHx8KGU9ZS5ub3QoXCIubm90ZS1jb2Rldmlldy1rZWVwXCIpKSx0aGlzLnVpLnRvZ2dsZUJ0bihlLCEwKX19LHtrZXk6XCJkZWFjdGl2YXRlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy4kdG9vbGJhci5maW5kKFwiYnV0dG9uXCIpO3R8fChlPWUubm90KFwiLm5vdGUtY29kZXZpZXcta2VlcFwiKSksdGhpcy51aS50b2dnbGVCdG4oZSwhMSl9fV0pJiZhZShuLnByb3RvdHlwZSxvKSxpJiZhZShuLGkpLHR9KCk7ZnVuY3Rpb24gbGUodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fXZhciBjZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQobil7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLmNvbnRleHQ9bix0aGlzLnVpPWUoKS5zdW1tZXJub3RlLnVpLHRoaXMuJGJvZHk9ZSgpKGRvY3VtZW50LmJvZHkpLHRoaXMuJGVkaXRvcj1uLmxheW91dEluZm8uZWRpdG9yLHRoaXMub3B0aW9ucz1uLm9wdGlvbnMsdGhpcy5sYW5nPXRoaXMub3B0aW9ucy5sYW5nSW5mbyxuLm1lbW8oXCJoZWxwLmxpbmtEaWFsb2cuc2hvd1wiLHRoaXMub3B0aW9ucy5sYW5nSW5mby5oZWxwW1wibGlua0RpYWxvZy5zaG93XCJdKX12YXIgbixvLGk7cmV0dXJuIG49dCwobz1be2tleTpcImluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucy5kaWFsb2dzSW5Cb2R5P3RoaXMuJGJvZHk6dGhpcy5vcHRpb25zLmNvbnRhaW5lcixuPVsnPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgbm90ZS1mb3JtLWdyb3VwXCI+JywnPGxhYmVsIGZvcj1cIm5vdGUtZGlhbG9nLWxpbmstdHh0LScuY29uY2F0KHRoaXMub3B0aW9ucy5pZCwnXCIgY2xhc3M9XCJub3RlLWZvcm0tbGFiZWxcIj4nKS5jb25jYXQodGhpcy5sYW5nLmxpbmsudGV4dFRvRGlzcGxheSxcIjwvbGFiZWw+XCIpLCc8aW5wdXQgaWQ9XCJub3RlLWRpYWxvZy1saW5rLXR4dC0nLmNvbmNhdCh0aGlzLm9wdGlvbnMuaWQsJ1wiIGNsYXNzPVwibm90ZS1saW5rLXRleHQgZm9ybS1jb250cm9sIG5vdGUtZm9ybS1jb250cm9sIG5vdGUtaW5wdXRcIiB0eXBlPVwidGV4dFwiLz4nKSxcIjwvZGl2PlwiLCc8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCBub3RlLWZvcm0tZ3JvdXBcIj4nLCc8bGFiZWwgZm9yPVwibm90ZS1kaWFsb2ctbGluay11cmwtJy5jb25jYXQodGhpcy5vcHRpb25zLmlkLCdcIiBjbGFzcz1cIm5vdGUtZm9ybS1sYWJlbFwiPicpLmNvbmNhdCh0aGlzLmxhbmcubGluay51cmwsXCI8L2xhYmVsPlwiKSwnPGlucHV0IGlkPVwibm90ZS1kaWFsb2ctbGluay11cmwtJy5jb25jYXQodGhpcy5vcHRpb25zLmlkLCdcIiBjbGFzcz1cIm5vdGUtbGluay11cmwgZm9ybS1jb250cm9sIG5vdGUtZm9ybS1jb250cm9sIG5vdGUtaW5wdXRcIiB0eXBlPVwidGV4dFwiIHZhbHVlPVwiaHR0cDovL1wiLz4nKSxcIjwvZGl2PlwiLHRoaXMub3B0aW9ucy5kaXNhYmxlTGlua1RhcmdldD9cIlwiOmUoKShcIjxkaXY+PC9kaXY+XCIpLmFwcGVuZCh0aGlzLnVpLmNoZWNrYm94KHtjbGFzc05hbWU6XCJzbi1jaGVja2JveC1vcGVuLWluLW5ldy13aW5kb3dcIix0ZXh0OnRoaXMubGFuZy5saW5rLm9wZW5Jbk5ld1dpbmRvdyxjaGVja2VkOiEwfSkucmVuZGVyKCkpLmh0bWwoKSxlKCkoXCI8ZGl2PjwvZGl2PlwiKS5hcHBlbmQodGhpcy51aS5jaGVja2JveCh7Y2xhc3NOYW1lOlwic24tY2hlY2tib3gtdXNlLXByb3RvY29sXCIsdGV4dDp0aGlzLmxhbmcubGluay51c2VQcm90b2NvbCxjaGVja2VkOiEwfSkucmVuZGVyKCkpLmh0bWwoKV0uam9pbihcIlwiKSxvPSc8aW5wdXQgdHlwZT1cImJ1dHRvblwiIGhyZWY9XCIjXCIgY2xhc3M9XCInLmNvbmNhdChcImJ0biBidG4tcHJpbWFyeSBub3RlLWJ0biBub3RlLWJ0bi1wcmltYXJ5IG5vdGUtbGluay1idG5cIiwnXCIgdmFsdWU9XCInKS5jb25jYXQodGhpcy5sYW5nLmxpbmsuaW5zZXJ0LCdcIiBkaXNhYmxlZD4nKTt0aGlzLiRkaWFsb2c9dGhpcy51aS5kaWFsb2coe2NsYXNzTmFtZTpcImxpbmstZGlhbG9nXCIsdGl0bGU6dGhpcy5sYW5nLmxpbmsuaW5zZXJ0LGZhZGU6dGhpcy5vcHRpb25zLmRpYWxvZ3NGYWRlLGJvZHk6bixmb290ZXI6b30pLnJlbmRlcigpLmFwcGVuZFRvKHQpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMudWkuaGlkZURpYWxvZyh0aGlzLiRkaWFsb2cpLHRoaXMuJGRpYWxvZy5yZW1vdmUoKX19LHtrZXk6XCJiaW5kRW50ZXJLZXlcIix2YWx1ZTpmdW5jdGlvbih0LGUpe3Qub24oXCJrZXlwcmVzc1wiLChmdW5jdGlvbih0KXt0LmtleUNvZGU9PT13dC5jb2RlLkVOVEVSJiYodC5wcmV2ZW50RGVmYXVsdCgpLGUudHJpZ2dlcihcImNsaWNrXCIpKX0pKX19LHtrZXk6XCJ0b2dnbGVMaW5rQnRuXCIsdmFsdWU6ZnVuY3Rpb24odCxlLG4pe3RoaXMudWkudG9nZ2xlQnRuKHQsZS52YWwoKSYmbi52YWwoKSl9fSx7a2V5Olwic2hvd0xpbmtEaWFsb2dcIix2YWx1ZTpmdW5jdGlvbih0KXt2YXIgbj10aGlzO3JldHVybiBlKCkuRGVmZXJyZWQoKGZ1bmN0aW9uKGUpe3ZhciBvPW4uJGRpYWxvZy5maW5kKFwiLm5vdGUtbGluay10ZXh0XCIpLGk9bi4kZGlhbG9nLmZpbmQoXCIubm90ZS1saW5rLXVybFwiKSxyPW4uJGRpYWxvZy5maW5kKFwiLm5vdGUtbGluay1idG5cIiksYT1uLiRkaWFsb2cuZmluZChcIi5zbi1jaGVja2JveC1vcGVuLWluLW5ldy13aW5kb3cgaW5wdXRbdHlwZT1jaGVja2JveF1cIikscz1uLiRkaWFsb2cuZmluZChcIi5zbi1jaGVja2JveC11c2UtcHJvdG9jb2wgaW5wdXRbdHlwZT1jaGVja2JveF1cIik7bi51aS5vbkRpYWxvZ1Nob3duKG4uJGRpYWxvZywoZnVuY3Rpb24oKXtuLmNvbnRleHQudHJpZ2dlckV2ZW50KFwiZGlhbG9nLnNob3duXCIpLCF0LnVybCYmbS5pc1ZhbGlkVXJsKHQudGV4dCkmJih0LnVybD10LnRleHQpLG8ub24oXCJpbnB1dCBwYXN0ZSBwcm9wZXJ0eWNoYW5nZVwiLChmdW5jdGlvbigpe3QudGV4dD1vLnZhbCgpLG4udG9nZ2xlTGlua0J0bihyLG8saSl9KSkudmFsKHQudGV4dCksaS5vbihcImlucHV0IHBhc3RlIHByb3BlcnR5Y2hhbmdlXCIsKGZ1bmN0aW9uKCl7dC50ZXh0fHxvLnZhbChpLnZhbCgpKSxuLnRvZ2dsZUxpbmtCdG4ocixvLGkpfSkpLnZhbCh0LnVybCksZi5pc1N1cHBvcnRUb3VjaHx8aS50cmlnZ2VyKFwiZm9jdXNcIiksbi50b2dnbGVMaW5rQnRuKHIsbyxpKSxuLmJpbmRFbnRlcktleShpLHIpLG4uYmluZEVudGVyS2V5KG8scik7dmFyIGw9dm9pZCAwIT09dC5pc05ld1dpbmRvdz90LmlzTmV3V2luZG93Om4uY29udGV4dC5vcHRpb25zLmxpbmtUYXJnZXRCbGFuazthLnByb3AoXCJjaGVja2VkXCIsbCk7dmFyIGM9IXQudXJsJiZuLmNvbnRleHQub3B0aW9ucy51c2VQcm90b2NvbDtzLnByb3AoXCJjaGVja2VkXCIsYyksci5vbmUoXCJjbGlja1wiLChmdW5jdGlvbihyKXtyLnByZXZlbnREZWZhdWx0KCksZS5yZXNvbHZlKHtyYW5nZTp0LnJhbmdlLHVybDppLnZhbCgpLHRleHQ6by52YWwoKSxpc05ld1dpbmRvdzphLmlzKFwiOmNoZWNrZWRcIiksY2hlY2tQcm90b2NvbDpzLmlzKFwiOmNoZWNrZWRcIil9KSxuLnVpLmhpZGVEaWFsb2cobi4kZGlhbG9nKX0pKX0pKSxuLnVpLm9uRGlhbG9nSGlkZGVuKG4uJGRpYWxvZywoZnVuY3Rpb24oKXtvLm9mZigpLGkub2ZmKCksci5vZmYoKSxcInBlbmRpbmdcIj09PWUuc3RhdGUoKSYmZS5yZWplY3QoKX0pKSxuLnVpLnNob3dEaWFsb2cobi4kZGlhbG9nKX0pKS5wcm9taXNlKCl9fSx7a2V5Olwic2hvd1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXRoaXMuY29udGV4dC5pbnZva2UoXCJlZGl0b3IuZ2V0TGlua0luZm9cIik7dGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5zYXZlUmFuZ2VcIiksdGhpcy5zaG93TGlua0RpYWxvZyhlKS50aGVuKChmdW5jdGlvbihlKXt0LmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLnJlc3RvcmVSYW5nZVwiKSx0LmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmNyZWF0ZUxpbmtcIixlKX0pKS5mYWlsKChmdW5jdGlvbigpe3QuY29udGV4dC5pbnZva2UoXCJlZGl0b3IucmVzdG9yZVJhbmdlXCIpfSkpfX1dKSYmbGUobi5wcm90b3R5cGUsbyksaSYmbGUobixpKSx0fSgpO2Z1bmN0aW9uIHVlKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgZGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4pe3ZhciBvPXRoaXM7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLmNvbnRleHQ9bix0aGlzLnVpPWUoKS5zdW1tZXJub3RlLnVpLHRoaXMub3B0aW9ucz1uLm9wdGlvbnMsdGhpcy5ldmVudHM9e1wic3VtbWVybm90ZS5rZXl1cCBzdW1tZXJub3RlLm1vdXNldXAgc3VtbWVybm90ZS5jaGFuZ2Ugc3VtbWVybm90ZS5zY3JvbGxcIjpmdW5jdGlvbigpe28udXBkYXRlKCl9LFwic3VtbWVybm90ZS5kaXNhYmxlIHN1bW1lcm5vdGUuZGlhbG9nLnNob3duXCI6ZnVuY3Rpb24oKXtvLmhpZGUoKX0sXCJzdW1tZXJub3RlLmJsdXJcIjpmdW5jdGlvbih0LGUpe2Uub3JpZ2luYWxFdmVudCYmZS5vcmlnaW5hbEV2ZW50LnJlbGF0ZWRUYXJnZXQmJm8uJHBvcG92ZXJbMF0uY29udGFpbnMoZS5vcmlnaW5hbEV2ZW50LnJlbGF0ZWRUYXJnZXQpfHxvLmhpZGUoKX19fXZhciBuLG8saTtyZXR1cm4gbj10LChvPVt7a2V5Olwic2hvdWxkSW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIWsuaXNFbXB0eSh0aGlzLm9wdGlvbnMucG9wb3Zlci5saW5rKX19LHtrZXk6XCJpbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRwb3BvdmVyPXRoaXMudWkucG9wb3Zlcih7Y2xhc3NOYW1lOlwibm90ZS1saW5rLXBvcG92ZXJcIixjYWxsYmFjazpmdW5jdGlvbih0KXt0LmZpbmQoXCIucG9wb3Zlci1jb250ZW50LC5ub3RlLXBvcG92ZXItY29udGVudFwiKS5wcmVwZW5kKCc8c3Bhbj48YSB0YXJnZXQ9XCJfYmxhbmtcIj48L2E+Jm5ic3A7PC9zcGFuPicpfX0pLnJlbmRlcigpLmFwcGVuZFRvKHRoaXMub3B0aW9ucy5jb250YWluZXIpO3ZhciB0PXRoaXMuJHBvcG92ZXIuZmluZChcIi5wb3BvdmVyLWNvbnRlbnQsLm5vdGUtcG9wb3Zlci1jb250ZW50XCIpO3RoaXMuY29udGV4dC5pbnZva2UoXCJidXR0b25zLmJ1aWxkXCIsdCx0aGlzLm9wdGlvbnMucG9wb3Zlci5saW5rKSx0aGlzLiRwb3BvdmVyLm9uKFwibW91c2Vkb3duXCIsKGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKX0pKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRwb3BvdmVyLnJlbW92ZSgpfX0se2tleTpcInVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7aWYodGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5oYXNGb2N1c1wiKSl7dmFyIHQ9dGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5nZXRMYXN0UmFuZ2VcIik7aWYodC5pc0NvbGxhcHNlZCgpJiZ0LmlzT25BbmNob3IoKSl7dmFyIG49aHQuYW5jZXN0b3IodC5zYyxodC5pc0FuY2hvciksbz1lKCkobikuYXR0cihcImhyZWZcIik7dGhpcy4kcG9wb3Zlci5maW5kKFwiYVwiKS5hdHRyKFwiaHJlZlwiLG8pLnRleHQobyk7dmFyIGk9aHQucG9zRnJvbVBsYWNlaG9sZGVyKG4pLHI9ZSgpKHRoaXMub3B0aW9ucy5jb250YWluZXIpLm9mZnNldCgpO2kudG9wLT1yLnRvcCxpLmxlZnQtPXIubGVmdCx0aGlzLiRwb3BvdmVyLmNzcyh7ZGlzcGxheTpcImJsb2NrXCIsbGVmdDppLmxlZnQsdG9wOmkudG9wfSl9ZWxzZSB0aGlzLmhpZGUoKX1lbHNlIHRoaXMuaGlkZSgpfX0se2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJHBvcG92ZXIuaGlkZSgpfX1dKSYmdWUobi5wcm90b3R5cGUsbyksaSYmdWUobixpKSx0fSgpO2Z1bmN0aW9uIGhlKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgZmU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4peyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5jb250ZXh0PW4sdGhpcy51aT1lKCkuc3VtbWVybm90ZS51aSx0aGlzLiRib2R5PWUoKShkb2N1bWVudC5ib2R5KSx0aGlzLiRlZGl0b3I9bi5sYXlvdXRJbmZvLmVkaXRvcix0aGlzLm9wdGlvbnM9bi5vcHRpb25zLHRoaXMubGFuZz10aGlzLm9wdGlvbnMubGFuZ0luZm99dmFyIG4sbyxpO3JldHVybiBuPXQsKG89W3trZXk6XCJpbml0aWFsaXplXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD1cIlwiO2lmKHRoaXMub3B0aW9ucy5tYXhpbXVtSW1hZ2VGaWxlU2l6ZSl7dmFyIGU9TWF0aC5mbG9vcihNYXRoLmxvZyh0aGlzLm9wdGlvbnMubWF4aW11bUltYWdlRmlsZVNpemUpL01hdGgubG9nKDEwMjQpKSxuPTEqKHRoaXMub3B0aW9ucy5tYXhpbXVtSW1hZ2VGaWxlU2l6ZS9NYXRoLnBvdygxMDI0LGUpKS50b0ZpeGVkKDIpK1wiIFwiK1wiIEtNR1RQXCJbZV0rXCJCXCI7dD1cIjxzbWFsbD5cIi5jb25jYXQodGhpcy5sYW5nLmltYWdlLm1heGltdW1GaWxlU2l6ZStcIiA6IFwiK24sXCI8L3NtYWxsPlwiKX12YXIgbz10aGlzLm9wdGlvbnMuZGlhbG9nc0luQm9keT90aGlzLiRib2R5OnRoaXMub3B0aW9ucy5jb250YWluZXIsaT1bJzxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIG5vdGUtZm9ybS1ncm91cCBub3RlLWdyb3VwLXNlbGVjdC1mcm9tLWZpbGVzXCI+JywnPGxhYmVsIGZvcj1cIm5vdGUtZGlhbG9nLWltYWdlLWZpbGUtJyt0aGlzLm9wdGlvbnMuaWQrJ1wiIGNsYXNzPVwibm90ZS1mb3JtLWxhYmVsXCI+Jyt0aGlzLmxhbmcuaW1hZ2Uuc2VsZWN0RnJvbUZpbGVzK1wiPC9sYWJlbD5cIiwnPGlucHV0IGlkPVwibm90ZS1kaWFsb2ctaW1hZ2UtZmlsZS0nK3RoaXMub3B0aW9ucy5pZCsnXCIgY2xhc3M9XCJub3RlLWltYWdlLWlucHV0IGZvcm0tY29udHJvbC1maWxlIG5vdGUtZm9ybS1jb250cm9sIG5vdGUtaW5wdXRcIiAnLCcgdHlwZT1cImZpbGVcIiBuYW1lPVwiZmlsZXNcIiBhY2NlcHQ9XCInK3RoaXMub3B0aW9ucy5hY2NlcHRJbWFnZUZpbGVUeXBlcysnXCIgbXVsdGlwbGU9XCJtdWx0aXBsZVwiLz4nLHQsXCI8L2Rpdj5cIiwnPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgbm90ZS1ncm91cC1pbWFnZS11cmxcIj4nLCc8bGFiZWwgZm9yPVwibm90ZS1kaWFsb2ctaW1hZ2UtdXJsLScrdGhpcy5vcHRpb25zLmlkKydcIiBjbGFzcz1cIm5vdGUtZm9ybS1sYWJlbFwiPicrdGhpcy5sYW5nLmltYWdlLnVybCtcIjwvbGFiZWw+XCIsJzxpbnB1dCBpZD1cIm5vdGUtZGlhbG9nLWltYWdlLXVybC0nK3RoaXMub3B0aW9ucy5pZCsnXCIgY2xhc3M9XCJub3RlLWltYWdlLXVybCBmb3JtLWNvbnRyb2wgbm90ZS1mb3JtLWNvbnRyb2wgbm90ZS1pbnB1dFwiIHR5cGU9XCJ0ZXh0XCIvPicsXCI8L2Rpdj5cIl0uam9pbihcIlwiKSxyPSc8aW5wdXQgdHlwZT1cImJ1dHRvblwiIGhyZWY9XCIjXCIgY2xhc3M9XCInLmNvbmNhdChcImJ0biBidG4tcHJpbWFyeSBub3RlLWJ0biBub3RlLWJ0bi1wcmltYXJ5IG5vdGUtaW1hZ2UtYnRuXCIsJ1wiIHZhbHVlPVwiJykuY29uY2F0KHRoaXMubGFuZy5pbWFnZS5pbnNlcnQsJ1wiIGRpc2FibGVkPicpO3RoaXMuJGRpYWxvZz10aGlzLnVpLmRpYWxvZyh7dGl0bGU6dGhpcy5sYW5nLmltYWdlLmluc2VydCxmYWRlOnRoaXMub3B0aW9ucy5kaWFsb2dzRmFkZSxib2R5OmksZm9vdGVyOnJ9KS5yZW5kZXIoKS5hcHBlbmRUbyhvKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnVpLmhpZGVEaWFsb2codGhpcy4kZGlhbG9nKSx0aGlzLiRkaWFsb2cucmVtb3ZlKCl9fSx7a2V5OlwiYmluZEVudGVyS2V5XCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0Lm9uKFwia2V5cHJlc3NcIiwoZnVuY3Rpb24odCl7dC5rZXlDb2RlPT09d3QuY29kZS5FTlRFUiYmKHQucHJldmVudERlZmF1bHQoKSxlLnRyaWdnZXIoXCJjbGlja1wiKSl9KSl9fSx7a2V5Olwic2hvd1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0aGlzLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLnNhdmVSYW5nZVwiKSx0aGlzLnNob3dJbWFnZURpYWxvZygpLnRoZW4oKGZ1bmN0aW9uKGUpe3QudWkuaGlkZURpYWxvZyh0LiRkaWFsb2cpLHQuY29udGV4dC5pbnZva2UoXCJlZGl0b3IucmVzdG9yZVJhbmdlXCIpLFwic3RyaW5nXCI9PXR5cGVvZiBlP3Qub3B0aW9ucy5jYWxsYmFja3Mub25JbWFnZUxpbmtJbnNlcnQ/dC5jb250ZXh0LnRyaWdnZXJFdmVudChcImltYWdlLmxpbmsuaW5zZXJ0XCIsZSk6dC5jb250ZXh0Lmludm9rZShcImVkaXRvci5pbnNlcnRJbWFnZVwiLGUpOnQuY29udGV4dC5pbnZva2UoXCJlZGl0b3IuaW5zZXJ0SW1hZ2VzT3JDYWxsYmFja1wiLGUpfSkpLmZhaWwoKGZ1bmN0aW9uKCl7dC5jb250ZXh0Lmludm9rZShcImVkaXRvci5yZXN0b3JlUmFuZ2VcIil9KSl9fSx7a2V5Olwic2hvd0ltYWdlRGlhbG9nXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiBlKCkuRGVmZXJyZWQoKGZ1bmN0aW9uKGUpe3ZhciBuPXQuJGRpYWxvZy5maW5kKFwiLm5vdGUtaW1hZ2UtaW5wdXRcIiksbz10LiRkaWFsb2cuZmluZChcIi5ub3RlLWltYWdlLXVybFwiKSxpPXQuJGRpYWxvZy5maW5kKFwiLm5vdGUtaW1hZ2UtYnRuXCIpO3QudWkub25EaWFsb2dTaG93bih0LiRkaWFsb2csKGZ1bmN0aW9uKCl7dC5jb250ZXh0LnRyaWdnZXJFdmVudChcImRpYWxvZy5zaG93blwiKSxuLnJlcGxhY2VXaXRoKG4uY2xvbmUoKS5vbihcImNoYW5nZVwiLChmdW5jdGlvbih0KXtlLnJlc29sdmUodC50YXJnZXQuZmlsZXN8fHQudGFyZ2V0LnZhbHVlKX0pKS52YWwoXCJcIikpLG8ub24oXCJpbnB1dCBwYXN0ZSBwcm9wZXJ0eWNoYW5nZVwiLChmdW5jdGlvbigpe3QudWkudG9nZ2xlQnRuKGksby52YWwoKSl9KSkudmFsKFwiXCIpLGYuaXNTdXBwb3J0VG91Y2h8fG8udHJpZ2dlcihcImZvY3VzXCIpLGkuY2xpY2soKGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSxlLnJlc29sdmUoby52YWwoKSl9KSksdC5iaW5kRW50ZXJLZXkobyxpKX0pKSx0LnVpLm9uRGlhbG9nSGlkZGVuKHQuJGRpYWxvZywoZnVuY3Rpb24oKXtuLm9mZigpLG8ub2ZmKCksaS5vZmYoKSxcInBlbmRpbmdcIj09PWUuc3RhdGUoKSYmZS5yZWplY3QoKX0pKSx0LnVpLnNob3dEaWFsb2codC4kZGlhbG9nKX0pKX19XSkmJmhlKG4ucHJvdG90eXBlLG8pLGkmJmhlKG4saSksdH0oKTtmdW5jdGlvbiBwZSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19dmFyIG1lPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChuKXt2YXIgbz10aGlzOyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5jb250ZXh0PW4sdGhpcy51aT1lKCkuc3VtbWVybm90ZS51aSx0aGlzLmVkaXRhYmxlPW4ubGF5b3V0SW5mby5lZGl0YWJsZVswXSx0aGlzLm9wdGlvbnM9bi5vcHRpb25zLHRoaXMuZXZlbnRzPXtcInN1bW1lcm5vdGUuZGlzYWJsZSBzdW1tZXJub3RlLmRpYWxvZy5zaG93blwiOmZ1bmN0aW9uKCl7by5oaWRlKCl9LFwic3VtbWVybm90ZS5ibHVyXCI6ZnVuY3Rpb24odCxlKXtlLm9yaWdpbmFsRXZlbnQmJmUub3JpZ2luYWxFdmVudC5yZWxhdGVkVGFyZ2V0JiZvLiRwb3BvdmVyWzBdLmNvbnRhaW5zKGUub3JpZ2luYWxFdmVudC5yZWxhdGVkVGFyZ2V0KXx8by5oaWRlKCl9fX12YXIgbixvLGk7cmV0dXJuIG49dCxvPVt7a2V5Olwic2hvdWxkSW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIWsuaXNFbXB0eSh0aGlzLm9wdGlvbnMucG9wb3Zlci5pbWFnZSl9fSx7a2V5OlwiaW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kcG9wb3Zlcj10aGlzLnVpLnBvcG92ZXIoe2NsYXNzTmFtZTpcIm5vdGUtaW1hZ2UtcG9wb3ZlclwifSkucmVuZGVyKCkuYXBwZW5kVG8odGhpcy5vcHRpb25zLmNvbnRhaW5lcik7dmFyIHQ9dGhpcy4kcG9wb3Zlci5maW5kKFwiLnBvcG92ZXItY29udGVudCwubm90ZS1wb3BvdmVyLWNvbnRlbnRcIik7dGhpcy5jb250ZXh0Lmludm9rZShcImJ1dHRvbnMuYnVpbGRcIix0LHRoaXMub3B0aW9ucy5wb3BvdmVyLmltYWdlKSx0aGlzLiRwb3BvdmVyLm9uKFwibW91c2Vkb3duXCIsKGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKX0pKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRwb3BvdmVyLnJlbW92ZSgpfX0se2tleTpcInVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKHQsbil7aWYoaHQuaXNJbWcodCkpe3ZhciBvPWUoKSh0KS5vZmZzZXQoKSxpPWUoKSh0aGlzLm9wdGlvbnMuY29udGFpbmVyKS5vZmZzZXQoKSxyPXt9O3RoaXMub3B0aW9ucy5wb3BhdG1vdXNlPyhyLmxlZnQ9bi5wYWdlWC0yMCxyLnRvcD1uLnBhZ2VZKTpyPW8sci50b3AtPWkudG9wLHIubGVmdC09aS5sZWZ0LHRoaXMuJHBvcG92ZXIuY3NzKHtkaXNwbGF5OlwiYmxvY2tcIixsZWZ0OnIubGVmdCx0b3A6ci50b3B9KX1lbHNlIHRoaXMuaGlkZSgpfX0se2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJHBvcG92ZXIuaGlkZSgpfX1dLG8mJnBlKG4ucHJvdG90eXBlLG8pLGkmJnBlKG4saSksdH0oKTtmdW5jdGlvbiB2ZSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19dmFyIGdlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChuKXt2YXIgbz10aGlzOyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5jb250ZXh0PW4sdGhpcy51aT1lKCkuc3VtbWVybm90ZS51aSx0aGlzLm9wdGlvbnM9bi5vcHRpb25zLHRoaXMuZXZlbnRzPXtcInN1bW1lcm5vdGUubW91c2Vkb3duXCI6ZnVuY3Rpb24odCxlKXtvLnVwZGF0ZShlLnRhcmdldCl9LFwic3VtbWVybm90ZS5rZXl1cCBzdW1tZXJub3RlLnNjcm9sbCBzdW1tZXJub3RlLmNoYW5nZVwiOmZ1bmN0aW9uKCl7by51cGRhdGUoKX0sXCJzdW1tZXJub3RlLmRpc2FibGUgc3VtbWVybm90ZS5kaWFsb2cuc2hvd25cIjpmdW5jdGlvbigpe28uaGlkZSgpfSxcInN1bW1lcm5vdGUuYmx1clwiOmZ1bmN0aW9uKHQsZSl7ZS5vcmlnaW5hbEV2ZW50JiZlLm9yaWdpbmFsRXZlbnQucmVsYXRlZFRhcmdldCYmby4kcG9wb3ZlclswXS5jb250YWlucyhlLm9yaWdpbmFsRXZlbnQucmVsYXRlZFRhcmdldCl8fG8uaGlkZSgpfX19dmFyIG4sbyxpO3JldHVybiBuPXQsbz1be2tleTpcInNob3VsZEluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiFrLmlzRW1wdHkodGhpcy5vcHRpb25zLnBvcG92ZXIudGFibGUpfX0se2tleTpcImluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJHBvcG92ZXI9dGhpcy51aS5wb3BvdmVyKHtjbGFzc05hbWU6XCJub3RlLXRhYmxlLXBvcG92ZXJcIn0pLnJlbmRlcigpLmFwcGVuZFRvKHRoaXMub3B0aW9ucy5jb250YWluZXIpO3ZhciB0PXRoaXMuJHBvcG92ZXIuZmluZChcIi5wb3BvdmVyLWNvbnRlbnQsLm5vdGUtcG9wb3Zlci1jb250ZW50XCIpO3RoaXMuY29udGV4dC5pbnZva2UoXCJidXR0b25zLmJ1aWxkXCIsdCx0aGlzLm9wdGlvbnMucG9wb3Zlci50YWJsZSksZi5pc0ZGJiZkb2N1bWVudC5leGVjQ29tbWFuZChcImVuYWJsZUlubGluZVRhYmxlRWRpdGluZ1wiLCExLCExKSx0aGlzLiRwb3BvdmVyLm9uKFwibW91c2Vkb3duXCIsKGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKX0pKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRwb3BvdmVyLnJlbW92ZSgpfX0se2tleTpcInVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe2lmKHRoaXMuY29udGV4dC5pc0Rpc2FibGVkKCkpcmV0dXJuITE7dmFyIG49aHQuaXNDZWxsKHQpfHxodC5pc0NlbGwobnVsbD09dD92b2lkIDA6dC5wYXJlbnRFbGVtZW50KTtpZihuKXt2YXIgbz1odC5wb3NGcm9tUGxhY2Vob2xkZXIodCksaT1lKCkodGhpcy5vcHRpb25zLmNvbnRhaW5lcikub2Zmc2V0KCk7by50b3AtPWkudG9wLG8ubGVmdC09aS5sZWZ0LHRoaXMuJHBvcG92ZXIuY3NzKHtkaXNwbGF5OlwiYmxvY2tcIixsZWZ0Om8ubGVmdCx0b3A6by50b3B9KX1lbHNlIHRoaXMuaGlkZSgpO3JldHVybiBufX0se2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJHBvcG92ZXIuaGlkZSgpfX1dLG8mJnZlKG4ucHJvdG90eXBlLG8pLGkmJnZlKG4saSksdH0oKTtmdW5jdGlvbiBiZSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19dmFyIHllPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChuKXshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpfSh0aGlzLHQpLHRoaXMuY29udGV4dD1uLHRoaXMudWk9ZSgpLnN1bW1lcm5vdGUudWksdGhpcy4kYm9keT1lKCkoZG9jdW1lbnQuYm9keSksdGhpcy4kZWRpdG9yPW4ubGF5b3V0SW5mby5lZGl0b3IsdGhpcy5vcHRpb25zPW4ub3B0aW9ucyx0aGlzLmxhbmc9dGhpcy5vcHRpb25zLmxhbmdJbmZvfXZhciBuLG8saTtyZXR1cm4gbj10LChvPVt7a2V5OlwiaW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLmRpYWxvZ3NJbkJvZHk/dGhpcy4kYm9keTp0aGlzLm9wdGlvbnMuY29udGFpbmVyLGU9Wyc8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCBub3RlLWZvcm0tZ3JvdXAgcm93LWZsdWlkXCI+JywnPGxhYmVsIGZvcj1cIm5vdGUtZGlhbG9nLXZpZGVvLXVybC0nLmNvbmNhdCh0aGlzLm9wdGlvbnMuaWQsJ1wiIGNsYXNzPVwibm90ZS1mb3JtLWxhYmVsXCI+JykuY29uY2F0KHRoaXMubGFuZy52aWRlby51cmwsJyA8c21hbGwgY2xhc3M9XCJ0ZXh0LW11dGVkXCI+JykuY29uY2F0KHRoaXMubGFuZy52aWRlby5wcm92aWRlcnMsXCI8L3NtYWxsPjwvbGFiZWw+XCIpLCc8aW5wdXQgaWQ9XCJub3RlLWRpYWxvZy12aWRlby11cmwtJy5jb25jYXQodGhpcy5vcHRpb25zLmlkLCdcIiBjbGFzcz1cIm5vdGUtdmlkZW8tdXJsIGZvcm0tY29udHJvbCBub3RlLWZvcm0tY29udHJvbCBub3RlLWlucHV0XCIgdHlwZT1cInRleHRcIi8+JyksXCI8L2Rpdj5cIl0uam9pbihcIlwiKSxuPSc8aW5wdXQgdHlwZT1cImJ1dHRvblwiIGhyZWY9XCIjXCIgY2xhc3M9XCInLmNvbmNhdChcImJ0biBidG4tcHJpbWFyeSBub3RlLWJ0biBub3RlLWJ0bi1wcmltYXJ5IG5vdGUtdmlkZW8tYnRuXCIsJ1wiIHZhbHVlPVwiJykuY29uY2F0KHRoaXMubGFuZy52aWRlby5pbnNlcnQsJ1wiIGRpc2FibGVkPicpO3RoaXMuJGRpYWxvZz10aGlzLnVpLmRpYWxvZyh7dGl0bGU6dGhpcy5sYW5nLnZpZGVvLmluc2VydCxmYWRlOnRoaXMub3B0aW9ucy5kaWFsb2dzRmFkZSxib2R5OmUsZm9vdGVyOm59KS5yZW5kZXIoKS5hcHBlbmRUbyh0KX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnVpLmhpZGVEaWFsb2codGhpcy4kZGlhbG9nKSx0aGlzLiRkaWFsb2cucmVtb3ZlKCl9fSx7a2V5OlwiYmluZEVudGVyS2V5XCIsdmFsdWU6ZnVuY3Rpb24odCxlKXt0Lm9uKFwia2V5cHJlc3NcIiwoZnVuY3Rpb24odCl7dC5rZXlDb2RlPT09d3QuY29kZS5FTlRFUiYmKHQucHJldmVudERlZmF1bHQoKSxlLnRyaWdnZXIoXCJjbGlja1wiKSl9KSl9fSx7a2V5OlwiY3JlYXRlVmlkZW9Ob2RlXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIG4sbz10Lm1hdGNoKC9cXC9cXC8oPzooPzp3d3d8bSlcXC4pPyg/OnlvdXR1XFwuYmVcXC98eW91dHViZVxcLmNvbVxcLyg/OmVtYmVkXFwvfHZcXC98d2F0Y2hcXD92PXx3YXRjaFxcPy4rJnY9KSkoW1xcd3wtXXsxMX0pKD86KD86W1xcPyZddD0pKFxcUyspKT8kLyksaT10Lm1hdGNoKC8oPzpcXC58XFwvXFwvKWRyaXZlXFwuZ29vZ2xlXFwuY29tXFwvZmlsZVxcL2RcXC8oLlthLXpBLVowLTlfLV0qKVxcL3ZpZXcvKSxyPXQubWF0Y2goLyg/Ond3d1xcLnxcXC9cXC8paW5zdGFncmFtXFwuY29tXFwvcFxcLyguW2EtekEtWjAtOV8tXSopLyksYT10Lm1hdGNoKC9cXC9cXC92aW5lXFwuY29cXC92XFwvKFthLXpBLVowLTldKykvKSxzPXQubWF0Y2goL1xcL1xcLyhwbGF5ZXJcXC4pP3ZpbWVvXFwuY29tXFwvKFthLXpdKlxcLykqKFxcZCspWz9dPy4qLyksbD10Lm1hdGNoKC8uK2RhaWx5bW90aW9uLmNvbVxcLyh2aWRlb3xodWIpXFwvKFteX10rKVteI10qKCN2aWRlbz0oW15fJl0rKSk/LyksYz10Lm1hdGNoKC9cXC9cXC92XFwueW91a3VcXC5jb21cXC92X3Nob3dcXC9pZF8oXFx3Kyk9KlxcLmh0bWwvKSx1PXQubWF0Y2goL1xcL1xcLyguKilcXC92aWRlb3NcXC93YXRjaFxcLyhbXj9dKikoPzpcXD8oPzpzdGFydD0oXFx3KikpPyg/OiZzdG9wPShcXHcqKSk/KD86Jmxvb3A9KFsxMF0pKT8oPzomYXV0b3BsYXk9KFsxMF0pKT8oPzombXV0ZWQ9KFsxMF0pKT8pPy8pLGQ9dC5tYXRjaCgvXFwvXFwvdlxcLnFxXFwuY29tLio/dmlkPSguKykvKSxoPXQubWF0Y2goL1xcL1xcL3ZcXC5xcVxcLmNvbVxcL3g/XFwvPyhwYWdlfGNvdmVyKS4qP1xcLyhbXlxcL10rKVxcLmh0bWxcXD8/LiovKSxmPXQubWF0Y2goL14uKy4obXA0fG00dikkLykscD10Lm1hdGNoKC9eLisuKG9nZ3xvZ3YpJC8pLG09dC5tYXRjaCgvXi4rLih3ZWJtKSQvKSx2PXQubWF0Y2goLyg/Ond3d1xcLnxcXC9cXC8pZmFjZWJvb2tcXC5jb21cXC8oW15cXC9dKylcXC92aWRlb3NcXC8oWzAtOV0rKS8pO2lmKG8mJjExPT09b1sxXS5sZW5ndGgpe3ZhciBnPW9bMV0sYj0wO2lmKHZvaWQgMCE9PW9bMl0pe3ZhciB5PW9bMl0ubWF0Y2goL14oPzooXFxkKyloKT8oPzooXFxkKyltKT8oPzooXFxkKylzKT8kLyk7aWYoeSlmb3IodmFyIGs9WzM2MDAsNjAsMV0sdz0wLEM9ay5sZW5ndGg7dzxDO3crKyliKz12b2lkIDAhPT15W3crMV0/a1t3XSpwYXJzZUludCh5W3crMV0sMTApOjB9bj1lKCkoXCI8aWZyYW1lPlwiKS5hdHRyKFwiZnJhbWVib3JkZXJcIiwwKS5hdHRyKFwic3JjXCIsXCIvL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9cIitnKyhiPjA/XCI/c3RhcnQ9XCIrYjpcIlwiKSkuYXR0cihcIndpZHRoXCIsXCI2NDBcIikuYXR0cihcImhlaWdodFwiLFwiMzYwXCIpfWVsc2UgaWYoaSYmaVswXS5sZW5ndGgpbj1lKCkoXCI8aWZyYW1lPlwiKS5hdHRyKFwiZnJhbWVib3JkZXJcIiwwKS5hdHRyKFwic3JjXCIsXCJodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZmlsZS9kL1wiK2lbMV0rXCIvcHJldmlld1wiKS5hdHRyKFwid2lkdGhcIixcIjY0MFwiKS5hdHRyKFwiaGVpZ2h0XCIsXCI0ODBcIik7ZWxzZSBpZihyJiZyWzBdLmxlbmd0aCluPWUoKShcIjxpZnJhbWU+XCIpLmF0dHIoXCJmcmFtZWJvcmRlclwiLDApLmF0dHIoXCJzcmNcIixcImh0dHBzOi8vaW5zdGFncmFtLmNvbS9wL1wiK3JbMV0rXCIvZW1iZWQvXCIpLmF0dHIoXCJ3aWR0aFwiLFwiNjEyXCIpLmF0dHIoXCJoZWlnaHRcIixcIjcxMFwiKS5hdHRyKFwic2Nyb2xsaW5nXCIsXCJub1wiKS5hdHRyKFwiYWxsb3d0cmFuc3BhcmVuY3lcIixcInRydWVcIik7ZWxzZSBpZihhJiZhWzBdLmxlbmd0aCluPWUoKShcIjxpZnJhbWU+XCIpLmF0dHIoXCJmcmFtZWJvcmRlclwiLDApLmF0dHIoXCJzcmNcIixhWzBdK1wiL2VtYmVkL3NpbXBsZVwiKS5hdHRyKFwid2lkdGhcIixcIjYwMFwiKS5hdHRyKFwiaGVpZ2h0XCIsXCI2MDBcIikuYXR0cihcImNsYXNzXCIsXCJ2aW5lLWVtYmVkXCIpO2Vsc2UgaWYocyYmc1szXS5sZW5ndGgpbj1lKCkoXCI8aWZyYW1lIHdlYmtpdGFsbG93ZnVsbHNjcmVlbiBtb3phbGxvd2Z1bGxzY3JlZW4gYWxsb3dmdWxsc2NyZWVuPlwiKS5hdHRyKFwiZnJhbWVib3JkZXJcIiwwKS5hdHRyKFwic3JjXCIsXCIvL3BsYXllci52aW1lby5jb20vdmlkZW8vXCIrc1szXSkuYXR0cihcIndpZHRoXCIsXCI2NDBcIikuYXR0cihcImhlaWdodFwiLFwiMzYwXCIpO2Vsc2UgaWYobCYmbFsyXS5sZW5ndGgpbj1lKCkoXCI8aWZyYW1lPlwiKS5hdHRyKFwiZnJhbWVib3JkZXJcIiwwKS5hdHRyKFwic3JjXCIsXCIvL3d3dy5kYWlseW1vdGlvbi5jb20vZW1iZWQvdmlkZW8vXCIrbFsyXSkuYXR0cihcIndpZHRoXCIsXCI2NDBcIikuYXR0cihcImhlaWdodFwiLFwiMzYwXCIpO2Vsc2UgaWYoYyYmY1sxXS5sZW5ndGgpbj1lKCkoXCI8aWZyYW1lIHdlYmtpdGFsbG93ZnVsbHNjcmVlbiBtb3phbGxvd2Z1bGxzY3JlZW4gYWxsb3dmdWxsc2NyZWVuPlwiKS5hdHRyKFwiZnJhbWVib3JkZXJcIiwwKS5hdHRyKFwiaGVpZ2h0XCIsXCI0OThcIikuYXR0cihcIndpZHRoXCIsXCI1MTBcIikuYXR0cihcInNyY1wiLFwiLy9wbGF5ZXIueW91a3UuY29tL2VtYmVkL1wiK2NbMV0pO2Vsc2UgaWYodSYmdVswXS5sZW5ndGgpe3ZhciB4PTA7XCJ1bmRlZmluZWRcIiE9PXVbMl0mJih4PXVbMl0pO3ZhciBTPTA7XCJ1bmRlZmluZWRcIiE9PXVbM10mJihTPXVbM10pO3ZhciBUPTA7XCJ1bmRlZmluZWRcIiE9PXVbNF0mJihUPXVbNF0pO3ZhciBFPTA7XCJ1bmRlZmluZWRcIiE9PXVbNV0mJihFPXVbNV0pO3ZhciBJPTA7XCJ1bmRlZmluZWRcIiE9PXVbNl0mJihJPXVbNl0pLG49ZSgpKCc8aWZyYW1lIGFsbG93ZnVsbHNjcmVlbiBzYW5kYm94PVwiYWxsb3ctc2FtZS1vcmlnaW4gYWxsb3ctc2NyaXB0cyBhbGxvdy1wb3B1cHNcIj4nKS5hdHRyKFwiZnJhbWVib3JkZXJcIiwwKS5hdHRyKFwic3JjXCIsXCIvL1wiK3VbMV0rXCIvdmlkZW9zL2VtYmVkL1wiK3VbMl0rXCI/bG9vcD1cIitUK1wiJmF1dG9wbGF5PVwiK0UrXCImbXV0ZWQ9XCIrSSsoeD4wP1wiJnN0YXJ0PVwiK3g6XCJcIikrKFM+MD9cIiZlbmQ9XCIrYjpcIlwiKSkuYXR0cihcIndpZHRoXCIsXCI1NjBcIikuYXR0cihcImhlaWdodFwiLFwiMzE1XCIpfWVsc2UgaWYoZCYmZFsxXS5sZW5ndGh8fGgmJmhbMl0ubGVuZ3RoKXt2YXIgJD1kJiZkWzFdLmxlbmd0aD9kWzFdOmhbMl07bj1lKCkoXCI8aWZyYW1lIHdlYmtpdGFsbG93ZnVsbHNjcmVlbiBtb3phbGxvd2Z1bGxzY3JlZW4gYWxsb3dmdWxsc2NyZWVuPlwiKS5hdHRyKFwiZnJhbWVib3JkZXJcIiwwKS5hdHRyKFwiaGVpZ2h0XCIsXCIzMTBcIikuYXR0cihcIndpZHRoXCIsXCI1MDBcIikuYXR0cihcInNyY1wiLFwiaHR0cHM6Ly92LnFxLmNvbS90eHAvaWZyYW1lL3BsYXllci5odG1sP3ZpZD1cIiskK1wiJmFtcDthdXRvPTBcIil9ZWxzZSBpZihmfHxwfHxtKW49ZSgpKFwiPHZpZGVvIGNvbnRyb2xzPlwiKS5hdHRyKFwic3JjXCIsdCkuYXR0cihcIndpZHRoXCIsXCI2NDBcIikuYXR0cihcImhlaWdodFwiLFwiMzYwXCIpO2Vsc2V7aWYoIXZ8fCF2WzBdLmxlbmd0aClyZXR1cm4hMTtuPWUoKShcIjxpZnJhbWU+XCIpLmF0dHIoXCJmcmFtZWJvcmRlclwiLDApLmF0dHIoXCJzcmNcIixcImh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9wbHVnaW5zL3ZpZGVvLnBocD9ocmVmPVwiK2VuY29kZVVSSUNvbXBvbmVudCh2WzBdKStcIiZzaG93X3RleHQ9MCZ3aWR0aD01NjBcIikuYXR0cihcIndpZHRoXCIsXCI1NjBcIikuYXR0cihcImhlaWdodFwiLFwiMzAxXCIpLmF0dHIoXCJzY3JvbGxpbmdcIixcIm5vXCIpLmF0dHIoXCJhbGxvd3RyYW5zcGFyZW5jeVwiLFwidHJ1ZVwiKX1yZXR1cm4gbi5hZGRDbGFzcyhcIm5vdGUtdmlkZW8tY2xpcFwiKSxuWzBdfX0se2tleTpcInNob3dcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmdldFNlbGVjdGVkVGV4dFwiKTt0aGlzLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLnNhdmVSYW5nZVwiKSx0aGlzLnNob3dWaWRlb0RpYWxvZyhlKS50aGVuKChmdW5jdGlvbihlKXt0LnVpLmhpZGVEaWFsb2codC4kZGlhbG9nKSx0LmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLnJlc3RvcmVSYW5nZVwiKTt2YXIgbj10LmNyZWF0ZVZpZGVvTm9kZShlKTtuJiZ0LmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmluc2VydE5vZGVcIixuKX0pKS5mYWlsKChmdW5jdGlvbigpe3QuY29udGV4dC5pbnZva2UoXCJlZGl0b3IucmVzdG9yZVJhbmdlXCIpfSkpfX0se2tleTpcInNob3dWaWRlb0RpYWxvZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gZSgpLkRlZmVycmVkKChmdW5jdGlvbihlKXt2YXIgbj10LiRkaWFsb2cuZmluZChcIi5ub3RlLXZpZGVvLXVybFwiKSxvPXQuJGRpYWxvZy5maW5kKFwiLm5vdGUtdmlkZW8tYnRuXCIpO3QudWkub25EaWFsb2dTaG93bih0LiRkaWFsb2csKGZ1bmN0aW9uKCl7dC5jb250ZXh0LnRyaWdnZXJFdmVudChcImRpYWxvZy5zaG93blwiKSxuLm9uKFwiaW5wdXQgcGFzdGUgcHJvcGVydHljaGFuZ2VcIiwoZnVuY3Rpb24oKXt0LnVpLnRvZ2dsZUJ0bihvLG4udmFsKCkpfSkpLGYuaXNTdXBwb3J0VG91Y2h8fG4udHJpZ2dlcihcImZvY3VzXCIpLG8uY2xpY2soKGZ1bmN0aW9uKHQpe3QucHJldmVudERlZmF1bHQoKSxlLnJlc29sdmUobi52YWwoKSl9KSksdC5iaW5kRW50ZXJLZXkobixvKX0pKSx0LnVpLm9uRGlhbG9nSGlkZGVuKHQuJGRpYWxvZywoZnVuY3Rpb24oKXtuLm9mZigpLG8ub2ZmKCksXCJwZW5kaW5nXCI9PT1lLnN0YXRlKCkmJmUucmVqZWN0KCl9KSksdC51aS5zaG93RGlhbG9nKHQuJGRpYWxvZyl9KSl9fV0pJiZiZShuLnByb3RvdHlwZSxvKSxpJiZiZShuLGkpLHR9KCk7ZnVuY3Rpb24ga2UodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fXZhciB3ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQobil7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLmNvbnRleHQ9bix0aGlzLnVpPWUoKS5zdW1tZXJub3RlLnVpLHRoaXMuJGJvZHk9ZSgpKGRvY3VtZW50LmJvZHkpLHRoaXMuJGVkaXRvcj1uLmxheW91dEluZm8uZWRpdG9yLHRoaXMub3B0aW9ucz1uLm9wdGlvbnMsdGhpcy5sYW5nPXRoaXMub3B0aW9ucy5sYW5nSW5mb312YXIgbixvLGk7cmV0dXJuIG49dCxvPVt7a2V5OlwiaW5pdGlhbGl6ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLmRpYWxvZ3NJbkJvZHk/dGhpcy4kYm9keTp0aGlzLm9wdGlvbnMuY29udGFpbmVyLGU9Wyc8cCBjbGFzcz1cInRleHQtY2VudGVyXCI+JywnPGEgaHJlZj1cImh0dHA6Ly9zdW1tZXJub3RlLm9yZy9cIiB0YXJnZXQ9XCJfYmxhbmtcIiByZWw9XCJub29wZW5lciBub3JlZmVycmVyXCI+U3VtbWVybm90ZSAwLjguMjA8L2E+IMK3ICcsJzxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vc3VtbWVybm90ZS9zdW1tZXJub3RlXCIgdGFyZ2V0PVwiX2JsYW5rXCIgcmVsPVwibm9vcGVuZXIgbm9yZWZlcnJlclwiPlByb2plY3Q8L2E+IMK3ICcsJzxhIGhyZWY9XCJodHRwczovL2dpdGh1Yi5jb20vc3VtbWVybm90ZS9zdW1tZXJub3RlL2lzc3Vlc1wiIHRhcmdldD1cIl9ibGFua1wiIHJlbD1cIm5vb3BlbmVyIG5vcmVmZXJyZXJcIj5Jc3N1ZXM8L2E+JyxcIjwvcD5cIl0uam9pbihcIlwiKTt0aGlzLiRkaWFsb2c9dGhpcy51aS5kaWFsb2coe3RpdGxlOnRoaXMubGFuZy5vcHRpb25zLmhlbHAsZmFkZTp0aGlzLm9wdGlvbnMuZGlhbG9nc0ZhZGUsYm9keTp0aGlzLmNyZWF0ZVNob3J0Y3V0TGlzdCgpLGZvb3RlcjplLGNhbGxiYWNrOmZ1bmN0aW9uKHQpe3QuZmluZChcIi5tb2RhbC1ib2R5LC5ub3RlLW1vZGFsLWJvZHlcIikuY3NzKHtcIm1heC1oZWlnaHRcIjozMDAsb3ZlcmZsb3c6XCJzY3JvbGxcIn0pfX0pLnJlbmRlcigpLmFwcGVuZFRvKHQpfX0se2tleTpcImRlc3Ryb3lcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMudWkuaGlkZURpYWxvZyh0aGlzLiRkaWFsb2cpLHRoaXMuJGRpYWxvZy5yZW1vdmUoKX19LHtrZXk6XCJjcmVhdGVTaG9ydGN1dExpc3RcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMsbj10aGlzLm9wdGlvbnMua2V5TWFwW2YuaXNNYWM/XCJtYWNcIjpcInBjXCJdO3JldHVybiBPYmplY3Qua2V5cyhuKS5tYXAoKGZ1bmN0aW9uKG8pe3ZhciBpPW5bb10scj1lKCkoJzxkaXY+PGRpdiBjbGFzcz1cImhlbHAtbGlzdC1pdGVtXCI+PC9kaXY+PC9kaXY+Jyk7cmV0dXJuIHIuYXBwZW5kKGUoKShcIjxsYWJlbD48a2JkPlwiK28rXCI8L2tkYj48L2xhYmVsPlwiKS5jc3Moe3dpZHRoOjE4MCxcIm1hcmdpbi1yaWdodFwiOjEwfSkpLmFwcGVuZChlKCkoXCI8c3Bhbj48L3NwYW4+XCIpLmh0bWwodC5jb250ZXh0Lm1lbW8oXCJoZWxwLlwiK2kpfHxpKSksci5odG1sKCl9KSkuam9pbihcIlwiKX19LHtrZXk6XCJzaG93SGVscERpYWxvZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gZSgpLkRlZmVycmVkKChmdW5jdGlvbihlKXt0LnVpLm9uRGlhbG9nU2hvd24odC4kZGlhbG9nLChmdW5jdGlvbigpe3QuY29udGV4dC50cmlnZ2VyRXZlbnQoXCJkaWFsb2cuc2hvd25cIiksZS5yZXNvbHZlKCl9KSksdC51aS5zaG93RGlhbG9nKHQuJGRpYWxvZyl9KSkucHJvbWlzZSgpfX0se2tleTpcInNob3dcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5zYXZlUmFuZ2VcIiksdGhpcy5zaG93SGVscERpYWxvZygpLnRoZW4oKGZ1bmN0aW9uKCl7dC5jb250ZXh0Lmludm9rZShcImVkaXRvci5yZXN0b3JlUmFuZ2VcIil9KSl9fV0sbyYma2Uobi5wcm90b3R5cGUsbyksaSYma2UobixpKSx0fSgpO2Z1bmN0aW9uIENlKHQsZSl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBvPWVbbl07by5lbnVtZXJhYmxlPW8uZW51bWVyYWJsZXx8ITEsby5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbyYmKG8ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LG8ua2V5LG8pfX12YXIgeGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KG4pe3ZhciBvPXRoaXM7IWZ1bmN0aW9uKHQsZSl7aWYoISh0IGluc3RhbmNlb2YgZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX0odGhpcyx0KSx0aGlzLmNvbnRleHQ9bix0aGlzLnVpPWUoKS5zdW1tZXJub3RlLnVpLHRoaXMub3B0aW9ucz1uLm9wdGlvbnMsdGhpcy5oaWRhYmxlPSEwLHRoaXMub25Db250ZXh0bWVudT0hMSx0aGlzLnBhZ2VYPW51bGwsdGhpcy5wYWdlWT1udWxsLHRoaXMuZXZlbnRzPXtcInN1bW1lcm5vdGUuY29udGV4dG1lbnVcIjpmdW5jdGlvbih0KXtvLm9wdGlvbnMuZWRpdGluZyYmKHQucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpLG8ub25Db250ZXh0bWVudT0hMCxvLnVwZGF0ZSghMCkpfSxcInN1bW1lcm5vdGUubW91c2Vkb3duXCI6ZnVuY3Rpb24odCxlKXtvLnBhZ2VYPWUucGFnZVgsby5wYWdlWT1lLnBhZ2VZfSxcInN1bW1lcm5vdGUua2V5dXAgc3VtbWVybm90ZS5tb3VzZXVwIHN1bW1lcm5vdGUuc2Nyb2xsXCI6ZnVuY3Rpb24odCxlKXtvLm9wdGlvbnMuZWRpdGluZyYmIW8ub25Db250ZXh0bWVudSYmKG8ucGFnZVg9ZS5wYWdlWCxvLnBhZ2VZPWUucGFnZVksby51cGRhdGUoKSksby5vbkNvbnRleHRtZW51PSExfSxcInN1bW1lcm5vdGUuZGlzYWJsZSBzdW1tZXJub3RlLmNoYW5nZSBzdW1tZXJub3RlLmRpYWxvZy5zaG93biBzdW1tZXJub3RlLmJsdXJcIjpmdW5jdGlvbigpe28uaGlkZSgpfSxcInN1bW1lcm5vdGUuZm9jdXNvdXRcIjpmdW5jdGlvbigpe28uJHBvcG92ZXIuaXMoXCI6YWN0aXZlLDpmb2N1c1wiKXx8by5oaWRlKCl9fX12YXIgbixvLGk7cmV0dXJuIG49dCwobz1be2tleTpcInNob3VsZEluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9wdGlvbnMuYWlyTW9kZSYmIWsuaXNFbXB0eSh0aGlzLm9wdGlvbnMucG9wb3Zlci5haXIpfX0se2tleTpcImluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy4kcG9wb3Zlcj10aGlzLnVpLnBvcG92ZXIoe2NsYXNzTmFtZTpcIm5vdGUtYWlyLXBvcG92ZXJcIn0pLnJlbmRlcigpLmFwcGVuZFRvKHRoaXMub3B0aW9ucy5jb250YWluZXIpO3ZhciBlPXRoaXMuJHBvcG92ZXIuZmluZChcIi5wb3BvdmVyLWNvbnRlbnRcIik7dGhpcy5jb250ZXh0Lmludm9rZShcImJ1dHRvbnMuYnVpbGRcIixlLHRoaXMub3B0aW9ucy5wb3BvdmVyLmFpciksdGhpcy4kcG9wb3Zlci5vbihcIm1vdXNlZG93blwiLChmdW5jdGlvbigpe3QuaGlkYWJsZT0hMX0pKSx0aGlzLiRwb3BvdmVyLm9uKFwibW91c2V1cFwiLChmdW5jdGlvbigpe3QuaGlkYWJsZT0hMH0pKX19LHtrZXk6XCJkZXN0cm95XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLiRwb3BvdmVyLnJlbW92ZSgpfX0se2tleTpcInVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMuY29udGV4dC5pbnZva2UoXCJlZGl0b3IuY3VycmVudFN0eWxlXCIpO2lmKCFuLnJhbmdlfHxuLnJhbmdlLmlzQ29sbGFwc2VkKCkmJiF0KXRoaXMuaGlkZSgpO2Vsc2V7dmFyIG89e2xlZnQ6dGhpcy5wYWdlWCx0b3A6dGhpcy5wYWdlWX0saT1lKCkodGhpcy5vcHRpb25zLmNvbnRhaW5lcikub2Zmc2V0KCk7by50b3AtPWkudG9wLG8ubGVmdC09aS5sZWZ0LHRoaXMuJHBvcG92ZXIuY3NzKHtkaXNwbGF5OlwiYmxvY2tcIixsZWZ0Ok1hdGgubWF4KG8ubGVmdCwwKSstNSx0b3A6by50b3ArNX0pLHRoaXMuY29udGV4dC5pbnZva2UoXCJidXR0b25zLnVwZGF0ZUN1cnJlbnRTdHlsZVwiLHRoaXMuJHBvcG92ZXIpfX19LHtrZXk6XCJ1cGRhdGVDb2Rldmlld1wiLHZhbHVlOmZ1bmN0aW9uKHQpe3RoaXMudWkudG9nZ2xlQnRuQWN0aXZlKHRoaXMuJHBvcG92ZXIuZmluZChcIi5idG4tY29kZXZpZXdcIiksdCksdCYmdGhpcy5oaWRlKCl9fSx7a2V5OlwiaGlkZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5oaWRhYmxlJiZ0aGlzLiRwb3BvdmVyLmhpZGUoKX19XSkmJkNlKG4ucHJvdG90eXBlLG8pLGkmJkNlKG4saSksdH0oKTtmdW5jdGlvbiBTZSh0LGUpe2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgbz1lW25dO28uZW51bWVyYWJsZT1vLmVudW1lcmFibGV8fCExLG8uY29uZmlndXJhYmxlPSEwLFwidmFsdWVcImluIG8mJihvLndyaXRhYmxlPSEwKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodCxvLmtleSxvKX19dmFyIFRlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdChuKXt2YXIgbz10aGlzOyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5jb250ZXh0PW4sdGhpcy51aT1lKCkuc3VtbWVybm90ZS51aSx0aGlzLiRlZGl0YWJsZT1uLmxheW91dEluZm8uZWRpdGFibGUsdGhpcy5vcHRpb25zPW4ub3B0aW9ucyx0aGlzLmhpbnQ9dGhpcy5vcHRpb25zLmhpbnR8fFtdLHRoaXMuZGlyZWN0aW9uPXRoaXMub3B0aW9ucy5oaW50RGlyZWN0aW9ufHxcImJvdHRvbVwiLHRoaXMuaGludHM9QXJyYXkuaXNBcnJheSh0aGlzLmhpbnQpP3RoaXMuaGludDpbdGhpcy5oaW50XSx0aGlzLmV2ZW50cz17XCJzdW1tZXJub3RlLmtleXVwXCI6ZnVuY3Rpb24odCxlKXtlLmlzRGVmYXVsdFByZXZlbnRlZCgpfHxvLmhhbmRsZUtleXVwKGUpfSxcInN1bW1lcm5vdGUua2V5ZG93blwiOmZ1bmN0aW9uKHQsZSl7by5oYW5kbGVLZXlkb3duKGUpfSxcInN1bW1lcm5vdGUuZGlzYWJsZSBzdW1tZXJub3RlLmRpYWxvZy5zaG93biBzdW1tZXJub3RlLmJsdXJcIjpmdW5jdGlvbigpe28uaGlkZSgpfX19dmFyIG4sbyxpO3JldHVybiBuPXQsbz1be2tleTpcInNob3VsZEluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmhpbnRzLmxlbmd0aD4wfX0se2tleTpcImluaXRpYWxpemVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5sYXN0V29yZFJhbmdlPW51bGwsdGhpcy5tYXRjaGluZ1dvcmQ9bnVsbCx0aGlzLiRwb3BvdmVyPXRoaXMudWkucG9wb3Zlcih7Y2xhc3NOYW1lOlwibm90ZS1oaW50LXBvcG92ZXJcIixoaWRlQXJyb3c6ITAsZGlyZWN0aW9uOlwiXCJ9KS5yZW5kZXIoKS5hcHBlbmRUbyh0aGlzLm9wdGlvbnMuY29udGFpbmVyKSx0aGlzLiRwb3BvdmVyLmhpZGUoKSx0aGlzLiRjb250ZW50PXRoaXMuJHBvcG92ZXIuZmluZChcIi5wb3BvdmVyLWNvbnRlbnQsLm5vdGUtcG9wb3Zlci1jb250ZW50XCIpLHRoaXMuJGNvbnRlbnQub24oXCJjbGlja1wiLFwiLm5vdGUtaGludC1pdGVtXCIsKGZ1bmN0aW9uKG4pe3QuJGNvbnRlbnQuZmluZChcIi5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIiksZSgpKG4uY3VycmVudFRhcmdldCkuYWRkQ2xhc3MoXCJhY3RpdmVcIiksdC5yZXBsYWNlKCl9KSksdGhpcy4kcG9wb3Zlci5vbihcIm1vdXNlZG93blwiLChmdW5jdGlvbih0KXt0LnByZXZlbnREZWZhdWx0KCl9KSl9fSx7a2V5OlwiZGVzdHJveVwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy4kcG9wb3Zlci5yZW1vdmUoKX19LHtrZXk6XCJzZWxlY3RJdGVtXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy4kY29udGVudC5maW5kKFwiLmFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKSx0LmFkZENsYXNzKFwiYWN0aXZlXCIpLHRoaXMuJGNvbnRlbnRbMF0uc2Nyb2xsVG9wPXRbMF0ub2Zmc2V0VG9wLXRoaXMuJGNvbnRlbnQuaW5uZXJIZWlnaHQoKS8yfX0se2tleTpcIm1vdmVEb3duXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLiRjb250ZW50LmZpbmQoXCIubm90ZS1oaW50LWl0ZW0uYWN0aXZlXCIpLGU9dC5uZXh0KCk7aWYoZS5sZW5ndGgpdGhpcy5zZWxlY3RJdGVtKGUpO2Vsc2V7dmFyIG49dC5wYXJlbnQoKS5uZXh0KCk7bi5sZW5ndGh8fChuPXRoaXMuJGNvbnRlbnQuZmluZChcIi5ub3RlLWhpbnQtZ3JvdXBcIikuZmlyc3QoKSksdGhpcy5zZWxlY3RJdGVtKG4uZmluZChcIi5ub3RlLWhpbnQtaXRlbVwiKS5maXJzdCgpKX19fSx7a2V5OlwibW92ZVVwXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLiRjb250ZW50LmZpbmQoXCIubm90ZS1oaW50LWl0ZW0uYWN0aXZlXCIpLGU9dC5wcmV2KCk7aWYoZS5sZW5ndGgpdGhpcy5zZWxlY3RJdGVtKGUpO2Vsc2V7dmFyIG49dC5wYXJlbnQoKS5wcmV2KCk7bi5sZW5ndGh8fChuPXRoaXMuJGNvbnRlbnQuZmluZChcIi5ub3RlLWhpbnQtZ3JvdXBcIikubGFzdCgpKSx0aGlzLnNlbGVjdEl0ZW0obi5maW5kKFwiLm5vdGUtaGludC1pdGVtXCIpLmxhc3QoKSl9fX0se2tleTpcInJlcGxhY2VcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMuJGNvbnRlbnQuZmluZChcIi5ub3RlLWhpbnQtaXRlbS5hY3RpdmVcIik7aWYodC5sZW5ndGgpe3ZhciBuPXRoaXMubm9kZUZyb21JdGVtKHQpO2lmKG51bGwhPT10aGlzLm1hdGNoaW5nV29yZCYmMD09PXRoaXMubWF0Y2hpbmdXb3JkLmxlbmd0aCl0aGlzLmxhc3RXb3JkUmFuZ2Uuc289dGhpcy5sYXN0V29yZFJhbmdlLmVvO2Vsc2UgaWYobnVsbCE9PXRoaXMubWF0Y2hpbmdXb3JkJiZ0aGlzLm1hdGNoaW5nV29yZC5sZW5ndGg+MCYmIXRoaXMubGFzdFdvcmRSYW5nZS5pc0NvbGxhcHNlZCgpKXt2YXIgbz10aGlzLmxhc3RXb3JkUmFuZ2UuZW8tdGhpcy5sYXN0V29yZFJhbmdlLnNvLXRoaXMubWF0Y2hpbmdXb3JkLmxlbmd0aDtvPjAmJih0aGlzLmxhc3RXb3JkUmFuZ2Uuc28rPW8pfWlmKHRoaXMubGFzdFdvcmRSYW5nZS5pbnNlcnROb2RlKG4pLFwibmV4dFwiPT09dGhpcy5vcHRpb25zLmhpbnRTZWxlY3Qpe3ZhciBpPWRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpO2UoKShuKS5hZnRlcihpKSx5dC5jcmVhdGVGcm9tTm9kZUJlZm9yZShpKS5zZWxlY3QoKX1lbHNlIHl0LmNyZWF0ZUZyb21Ob2RlQWZ0ZXIobikuc2VsZWN0KCk7dGhpcy5sYXN0V29yZFJhbmdlPW51bGwsdGhpcy5oaWRlKCksdGhpcy5jb250ZXh0Lmludm9rZShcImVkaXRvci5mb2N1c1wiKSx0aGlzLmNvbnRleHQudHJpZ2dlckV2ZW50KFwiY2hhbmdlXCIsdGhpcy4kZWRpdGFibGUuaHRtbCgpLHRoaXMuJGVkaXRhYmxlKX19fSx7a2V5Olwibm9kZUZyb21JdGVtXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5oaW50c1t0LmRhdGEoXCJpbmRleFwiKV0sbj10LmRhdGEoXCJpdGVtXCIpLG89ZS5jb250ZW50P2UuY29udGVudChuKTpuO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBvJiYobz1odC5jcmVhdGVUZXh0KG8pKSxvfX0se2tleTpcImNyZWF0ZUl0ZW1UZW1wbGF0ZXNcIix2YWx1ZTpmdW5jdGlvbih0LG4pe3ZhciBvPXRoaXMuaGludHNbdF07cmV0dXJuIG4ubWFwKChmdW5jdGlvbihuKXt2YXIgaT1lKCkoJzxkaXYgY2xhc3M9XCJub3RlLWhpbnQtaXRlbVwiPjwvZGl2PicpO3JldHVybiBpLmFwcGVuZChvLnRlbXBsYXRlP28udGVtcGxhdGUobik6bitcIlwiKSxpLmRhdGEoe2luZGV4OnQsaXRlbTpufSksaX0pKX19LHtrZXk6XCJoYW5kbGVLZXlkb3duXCIsdmFsdWU6ZnVuY3Rpb24odCl7dGhpcy4kcG9wb3Zlci5pcyhcIjp2aXNpYmxlXCIpJiYodC5rZXlDb2RlPT09d3QuY29kZS5FTlRFUj8odC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMucmVwbGFjZSgpKTp0LmtleUNvZGU9PT13dC5jb2RlLlVQPyh0LnByZXZlbnREZWZhdWx0KCksdGhpcy5tb3ZlVXAoKSk6dC5rZXlDb2RlPT09d3QuY29kZS5ET1dOJiYodC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMubW92ZURvd24oKSkpfX0se2tleTpcInNlYXJjaEtleXdvcmRcIix2YWx1ZTpmdW5jdGlvbih0LGUsbil7dmFyIG89dGhpcy5oaW50c1t0XTtpZihvJiZvLm1hdGNoLnRlc3QoZSkmJm8uc2VhcmNoKXt2YXIgaT1vLm1hdGNoLmV4ZWMoZSk7dGhpcy5tYXRjaGluZ1dvcmQ9aVswXSxvLnNlYXJjaChpWzFdLG4pfWVsc2UgbigpfX0se2tleTpcImNyZWF0ZUdyb3VwXCIsdmFsdWU6ZnVuY3Rpb24odCxuKXt2YXIgbz10aGlzLGk9ZSgpKCc8ZGl2IGNsYXNzPVwibm90ZS1oaW50LWdyb3VwIG5vdGUtaGludC1ncm91cC0nK3QrJ1wiPjwvZGl2PicpO3JldHVybiB0aGlzLnNlYXJjaEtleXdvcmQodCxuLChmdW5jdGlvbihlKXsoZT1lfHxbXSkubGVuZ3RoJiYoaS5odG1sKG8uY3JlYXRlSXRlbVRlbXBsYXRlcyh0LGUpKSxvLnNob3coKSl9KSksaX19LHtrZXk6XCJoYW5kbGVLZXl1cFwiLHZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXM7aWYoIWsuY29udGFpbnMoW3d0LmNvZGUuRU5URVIsd3QuY29kZS5VUCx3dC5jb2RlLkRPV05dLHQua2V5Q29kZSkpe3ZhciBvLGkscj10aGlzLmNvbnRleHQuaW52b2tlKFwiZWRpdG9yLmdldExhc3RSYW5nZVwiKTtpZihcIndvcmRzXCI9PT10aGlzLm9wdGlvbnMuaGludE1vZGUpe2lmKG89ci5nZXRXb3Jkc1JhbmdlKHIpLGk9by50b1N0cmluZygpLHRoaXMuaGludHMuZm9yRWFjaCgoZnVuY3Rpb24odCl7aWYodC5tYXRjaC50ZXN0KGkpKXJldHVybiBvPXIuZ2V0V29yZHNNYXRjaFJhbmdlKHQubWF0Y2gpLCExfSkpLCFvKXJldHVybiB2b2lkIHRoaXMuaGlkZSgpO2k9by50b1N0cmluZygpfWVsc2Ugbz1yLmdldFdvcmRSYW5nZSgpLGk9by50b1N0cmluZygpO2lmKHRoaXMuaGludHMubGVuZ3RoJiZpKXt0aGlzLiRjb250ZW50LmVtcHR5KCk7dmFyIGE9bS5yZWN0MmJuZChrLmxhc3Qoby5nZXRDbGllbnRSZWN0cygpKSkscz1lKCkodGhpcy5vcHRpb25zLmNvbnRhaW5lcikub2Zmc2V0KCk7YSYmKGEudG9wLT1zLnRvcCxhLmxlZnQtPXMubGVmdCx0aGlzLiRwb3BvdmVyLmhpZGUoKSx0aGlzLmxhc3RXb3JkUmFuZ2U9byx0aGlzLmhpbnRzLmZvckVhY2goKGZ1bmN0aW9uKHQsZSl7dC5tYXRjaC50ZXN0KGkpJiZuLmNyZWF0ZUdyb3VwKGUsaSkuYXBwZW5kVG8obi4kY29udGVudCl9KSksdGhpcy4kY29udGVudC5maW5kKFwiLm5vdGUtaGludC1pdGVtOmZpcnN0XCIpLmFkZENsYXNzKFwiYWN0aXZlXCIpLFwidG9wXCI9PT10aGlzLmRpcmVjdGlvbj90aGlzLiRwb3BvdmVyLmNzcyh7bGVmdDphLmxlZnQsdG9wOmEudG9wLXRoaXMuJHBvcG92ZXIub3V0ZXJIZWlnaHQoKS01fSk6dGhpcy4kcG9wb3Zlci5jc3Moe2xlZnQ6YS5sZWZ0LHRvcDphLnRvcCthLmhlaWdodCs1fSkpfWVsc2UgdGhpcy5oaWRlKCl9fX0se2tleTpcInNob3dcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJHBvcG92ZXIuc2hvdygpfX0se2tleTpcImhpZGVcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuJHBvcG92ZXIuaGlkZSgpfX1dLG8mJlNlKG4ucHJvdG90eXBlLG8pLGkmJlNlKG4saSksdH0oKTtmdW5jdGlvbiBFZSh0KXtyZXR1cm4gRWU9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiZcInN5bWJvbFwiPT10eXBlb2YgU3ltYm9sLml0ZXJhdG9yP2Z1bmN0aW9uKHQpe3JldHVybiB0eXBlb2YgdH06ZnVuY3Rpb24odCl7cmV0dXJuIHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmdC5jb25zdHJ1Y3Rvcj09PVN5bWJvbCYmdCE9PVN5bWJvbC5wcm90b3R5cGU/XCJzeW1ib2xcIjp0eXBlb2YgdH0sRWUodCl9ZnVuY3Rpb24gSWUodCxlKXtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyl7dmFyIG89ZVtuXTtvLmVudW1lcmFibGU9by5lbnVtZXJhYmxlfHwhMSxvLmNvbmZpZ3VyYWJsZT0hMCxcInZhbHVlXCJpbiBvJiYoby53cml0YWJsZT0hMCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsby5rZXksbyl9fWUoKS5zdW1tZXJub3RlPWUoKS5leHRlbmQoZSgpLnN1bW1lcm5vdGUse3ZlcnNpb246XCIwLjguMjBcIixwbHVnaW5zOnt9LGRvbTpodCxyYW5nZTp5dCxsaXN0czprLG9wdGlvbnM6e2xhbmdJbmZvOmUoKS5zdW1tZXJub3RlLmxhbmdbXCJlbi1VU1wiXSxlZGl0aW5nOiEwLG1vZHVsZXM6e2VkaXRvcjpGdCxjbGlwYm9hcmQ6SHQsZHJvcHpvbmU6QnQsY29kZXZpZXc6anQsc3RhdHVzYmFyOkt0LGZ1bGxzY3JlZW46cXQsaGFuZGxlOkd0LGhpbnRQb3BvdmVyOlRlLGF1dG9MaW5rOlF0LGF1dG9TeW5jOkp0LGF1dG9SZXBsYWNlOmVlLHBsYWNlaG9sZGVyOm9lLGJ1dHRvbnM6cmUsdG9vbGJhcjpzZSxsaW5rRGlhbG9nOmNlLGxpbmtQb3BvdmVyOmRlLGltYWdlRGlhbG9nOmZlLGltYWdlUG9wb3ZlcjptZSx0YWJsZVBvcG92ZXI6Z2UsdmlkZW9EaWFsb2c6eWUsaGVscERpYWxvZzp3ZSxhaXJQb3BvdmVyOnhlfSxidXR0b25zOnt9LGxhbmc6XCJlbi1VU1wiLGZvbGxvd2luZ1Rvb2xiYXI6ITEsdG9vbGJhclBvc2l0aW9uOlwidG9wXCIsb3RoZXJTdGF0aWNCYXI6XCJcIixjb2Rldmlld0tlZXBCdXR0b246ITEsdG9vbGJhcjpbW1wic3R5bGVcIixbXCJzdHlsZVwiXV0sW1wiZm9udFwiLFtcImJvbGRcIixcInVuZGVybGluZVwiLFwiY2xlYXJcIl1dLFtcImZvbnRuYW1lXCIsW1wiZm9udG5hbWVcIl1dLFtcImNvbG9yXCIsW1wiY29sb3JcIl1dLFtcInBhcmFcIixbXCJ1bFwiLFwib2xcIixcInBhcmFncmFwaFwiXV0sW1widGFibGVcIixbXCJ0YWJsZVwiXV0sW1wiaW5zZXJ0XCIsW1wibGlua1wiLFwicGljdHVyZVwiLFwidmlkZW9cIl1dLFtcInZpZXdcIixbXCJmdWxsc2NyZWVuXCIsXCJjb2Rldmlld1wiLFwiaGVscFwiXV1dLHBvcGF0bW91c2U6ITAscG9wb3Zlcjp7aW1hZ2U6W1tcInJlc2l6ZVwiLFtcInJlc2l6ZUZ1bGxcIixcInJlc2l6ZUhhbGZcIixcInJlc2l6ZVF1YXJ0ZXJcIixcInJlc2l6ZU5vbmVcIl1dLFtcImZsb2F0XCIsW1wiZmxvYXRMZWZ0XCIsXCJmbG9hdFJpZ2h0XCIsXCJmbG9hdE5vbmVcIl1dLFtcInJlbW92ZVwiLFtcInJlbW92ZU1lZGlhXCJdXV0sbGluazpbW1wibGlua1wiLFtcImxpbmtEaWFsb2dTaG93XCIsXCJ1bmxpbmtcIl1dXSx0YWJsZTpbW1wiYWRkXCIsW1wiYWRkUm93RG93blwiLFwiYWRkUm93VXBcIixcImFkZENvbExlZnRcIixcImFkZENvbFJpZ2h0XCJdXSxbXCJkZWxldGVcIixbXCJkZWxldGVSb3dcIixcImRlbGV0ZUNvbFwiLFwiZGVsZXRlVGFibGVcIl1dXSxhaXI6W1tcImNvbG9yXCIsW1wiY29sb3JcIl1dLFtcImZvbnRcIixbXCJib2xkXCIsXCJ1bmRlcmxpbmVcIixcImNsZWFyXCJdXSxbXCJwYXJhXCIsW1widWxcIixcInBhcmFncmFwaFwiXV0sW1widGFibGVcIixbXCJ0YWJsZVwiXV0sW1wiaW5zZXJ0XCIsW1wibGlua1wiLFwicGljdHVyZVwiXV0sW1widmlld1wiLFtcImZ1bGxzY3JlZW5cIixcImNvZGV2aWV3XCJdXV19LGFpck1vZGU6ITEsb3ZlcnJpZGVDb250ZXh0TWVudTohMSx3aWR0aDpudWxsLGhlaWdodDpudWxsLGxpbmtUYXJnZXRCbGFuazohMCx1c2VQcm90b2NvbDohMCxkZWZhdWx0UHJvdG9jb2w6XCJodHRwOi8vXCIsZm9jdXM6ITEsdGFiRGlzYWJsZWQ6ITEsdGFiU2l6ZTo0LHN0eWxlV2l0aENTUzohMSxzaG9ydGN1dHM6ITAsdGV4dGFyZWFBdXRvU3luYzohMCx0b29sdGlwOlwiYXV0b1wiLGNvbnRhaW5lcjpudWxsLG1heFRleHRMZW5ndGg6MCxibG9ja3F1b3RlQnJlYWtpbmdMZXZlbDoyLHNwZWxsQ2hlY2s6ITAsZGlzYWJsZUdyYW1tYXI6ITEscGxhY2Vob2xkZXI6bnVsbCxpbmhlcml0UGxhY2Vob2xkZXI6ITEscmVjb3JkRXZlcnlLZXlzdHJva2U6ITEsaGlzdG9yeUxpbWl0OjIwMCxzaG93RG9tYWluT25seUZvckF1dG9saW5rOiExLGhpbnRNb2RlOlwid29yZFwiLGhpbnRTZWxlY3Q6XCJhZnRlclwiLGhpbnREaXJlY3Rpb246XCJib3R0b21cIixzdHlsZVRhZ3M6W1wicFwiLFwiYmxvY2txdW90ZVwiLFwicHJlXCIsXCJoMVwiLFwiaDJcIixcImgzXCIsXCJoNFwiLFwiaDVcIixcImg2XCJdLGZvbnROYW1lczpbXCJBcmlhbFwiLFwiQXJpYWwgQmxhY2tcIixcIkNvbWljIFNhbnMgTVNcIixcIkNvdXJpZXIgTmV3XCIsXCJIZWx2ZXRpY2EgTmV1ZVwiLFwiSGVsdmV0aWNhXCIsXCJJbXBhY3RcIixcIkx1Y2lkYSBHcmFuZGVcIixcIlRhaG9tYVwiLFwiVGltZXMgTmV3IFJvbWFuXCIsXCJWZXJkYW5hXCJdLGZvbnROYW1lc0lnbm9yZUNoZWNrOltdLGFkZERlZmF1bHRGb250czohMCxmb250U2l6ZXM6W1wiOFwiLFwiOVwiLFwiMTBcIixcIjExXCIsXCIxMlwiLFwiMTRcIixcIjE4XCIsXCIyNFwiLFwiMzZcIl0sZm9udFNpemVVbml0czpbXCJweFwiLFwicHRcIl0sY29sb3JzOltbXCIjMDAwMDAwXCIsXCIjNDI0MjQyXCIsXCIjNjM2MzYzXCIsXCIjOUM5Qzk0XCIsXCIjQ0VDNkNFXCIsXCIjRUZFRkVGXCIsXCIjRjdGN0Y3XCIsXCIjRkZGRkZGXCJdLFtcIiNGRjAwMDBcIixcIiNGRjlDMDBcIixcIiNGRkZGMDBcIixcIiMwMEZGMDBcIixcIiMwMEZGRkZcIixcIiMwMDAwRkZcIixcIiM5QzAwRkZcIixcIiNGRjAwRkZcIl0sW1wiI0Y3QzZDRVwiLFwiI0ZGRTdDRVwiLFwiI0ZGRUZDNlwiLFwiI0Q2RUZENlwiLFwiI0NFREVFN1wiLFwiI0NFRTdGN1wiLFwiI0Q2RDZFN1wiLFwiI0U3RDZERVwiXSxbXCIjRTc5QzlDXCIsXCIjRkZDNjlDXCIsXCIjRkZFNzlDXCIsXCIjQjVENkE1XCIsXCIjQTVDNkNFXCIsXCIjOUNDNkVGXCIsXCIjQjVBNUQ2XCIsXCIjRDZBNUJEXCJdLFtcIiNFNzYzNjNcIixcIiNGN0FENkJcIixcIiNGRkQ2NjNcIixcIiM5NEJEN0JcIixcIiM3M0E1QURcIixcIiM2QkFEREVcIixcIiM4QzdCQzZcIixcIiNDNjdCQTVcIl0sW1wiI0NFMDAwMFwiLFwiI0U3OTQzOVwiLFwiI0VGQzYzMVwiLFwiIzZCQTU0QVwiLFwiIzRBN0I4Q1wiLFwiIzM5ODRDNlwiLFwiIzYzNEFBNVwiLFwiI0E1NEE3QlwiXSxbXCIjOUMwMDAwXCIsXCIjQjU2MzA4XCIsXCIjQkQ5NDAwXCIsXCIjMzk3QjIxXCIsXCIjMTA0QTVBXCIsXCIjMDg1Mjk0XCIsXCIjMzExODczXCIsXCIjNzMxODQyXCJdLFtcIiM2MzAwMDBcIixcIiM3QjM5MDBcIixcIiM4NDYzMDBcIixcIiMyOTUyMThcIixcIiMwODMxMzlcIixcIiMwMDMxNjNcIixcIiMyMTEwNEFcIixcIiM0QTEwMzFcIl1dLGNvbG9yc05hbWU6W1tcIkJsYWNrXCIsXCJUdW5kb3JhXCIsXCJEb3ZlIEdyYXlcIixcIlN0YXIgRHVzdFwiLFwiUGFsZSBTbGF0ZVwiLFwiR2FsbGVyeVwiLFwiQWxhYmFzdGVyXCIsXCJXaGl0ZVwiXSxbXCJSZWRcIixcIk9yYW5nZSBQZWVsXCIsXCJZZWxsb3dcIixcIkdyZWVuXCIsXCJDeWFuXCIsXCJCbHVlXCIsXCJFbGVjdHJpYyBWaW9sZXRcIixcIk1hZ2VudGFcIl0sW1wiQXphbGVhXCIsXCJLYXJyeVwiLFwiRWdnIFdoaXRlXCIsXCJaYW5haFwiLFwiQm90dGljZWxsaVwiLFwiVHJvcGljYWwgQmx1ZVwiLFwiTWlzY2hrYVwiLFwiVHdpbGlnaHRcIl0sW1wiVG9ueXMgUGlua1wiLFwiUGVhY2ggT3JhbmdlXCIsXCJDcmVhbSBCcnVsZWVcIixcIlNwcm91dFwiLFwiQ2FzcGVyXCIsXCJQZXJhbm9cIixcIkNvbGQgUHVycGxlXCIsXCJDYXJleXMgUGlua1wiXSxbXCJNYW5keVwiLFwiUmFqYWhcIixcIkRhbmRlbGlvblwiLFwiT2xpdmluZVwiLFwiR3VsZiBTdHJlYW1cIixcIlZpa2luZ1wiLFwiQmx1ZSBNYXJndWVyaXRlXCIsXCJQdWNlXCJdLFtcIkd1YXJkc21hbiBSZWRcIixcIkZpcmUgQnVzaFwiLFwiR29sZGVuIERyZWFtXCIsXCJDaGVsc2VhIEN1Y3VtYmVyXCIsXCJTbWFsdCBCbHVlXCIsXCJCb3N0b24gQmx1ZVwiLFwiQnV0dGVyZmx5IEJ1c2hcIixcIkNhZGlsbGFjXCJdLFtcIlNhbmdyaWFcIixcIk1haSBUYWlcIixcIkJ1ZGRoYSBHb2xkXCIsXCJGb3Jlc3QgR3JlZW5cIixcIkVkZW5cIixcIlZlbmljZSBCbHVlXCIsXCJNZXRlb3JpdGVcIixcIkNsYXJldFwiXSxbXCJSb3Nld29vZFwiLFwiQ2lubmFtb25cIixcIk9saXZlXCIsXCJQYXJzbGV5XCIsXCJUaWJlclwiLFwiTWlkbmlnaHQgQmx1ZVwiLFwiVmFsZW50aW5vXCIsXCJMb3Vsb3VcIl1dLGNvbG9yQnV0dG9uOntmb3JlQ29sb3I6XCIjMDAwMDAwXCIsYmFja0NvbG9yOlwiI0ZGRkYwMFwifSxsaW5lSGVpZ2h0czpbXCIxLjBcIixcIjEuMlwiLFwiMS40XCIsXCIxLjVcIixcIjEuNlwiLFwiMS44XCIsXCIyLjBcIixcIjMuMFwiXSx0YWJsZUNsYXNzTmFtZTpcInRhYmxlIHRhYmxlLWJvcmRlcmVkXCIsaW5zZXJ0VGFibGVNYXhTaXplOntjb2w6MTAscm93OjEwfSxkaWFsb2dzSW5Cb2R5OiExLGRpYWxvZ3NGYWRlOiExLG1heGltdW1JbWFnZUZpbGVTaXplOm51bGwsYWNjZXB0SW1hZ2VGaWxlVHlwZXM6XCJpbWFnZS8qXCIsY2FsbGJhY2tzOntvbkJlZm9yZUNvbW1hbmQ6bnVsbCxvbkJsdXI6bnVsbCxvbkJsdXJDb2RldmlldzpudWxsLG9uQ2hhbmdlOm51bGwsb25DaGFuZ2VDb2RldmlldzpudWxsLG9uRGlhbG9nU2hvd246bnVsbCxvbkVudGVyOm51bGwsb25Gb2N1czpudWxsLG9uSW1hZ2VMaW5rSW5zZXJ0Om51bGwsb25JbWFnZVVwbG9hZDpudWxsLG9uSW1hZ2VVcGxvYWRFcnJvcjpudWxsLG9uSW5pdDpudWxsLG9uS2V5ZG93bjpudWxsLG9uS2V5dXA6bnVsbCxvbk1vdXNlZG93bjpudWxsLG9uTW91c2V1cDpudWxsLG9uUGFzdGU6bnVsbCxvblNjcm9sbDpudWxsfSxjb2RlbWlycm9yOnttb2RlOlwidGV4dC9odG1sXCIsaHRtbE1vZGU6ITAsbGluZU51bWJlcnM6ITB9LGNvZGV2aWV3RmlsdGVyOiEwLGNvZGV2aWV3RmlsdGVyUmVnZXg6LzxcXC8qKD86YXBwbGV0fGIoPzphc2V8Z3NvdW5kfGxpbmspfGVtYmVkfGZyYW1lKD86c2V0KT98aWxheWVyfGwoPzpheWVyfGluayl8bWV0YXxvYmplY3R8cyg/OmNyaXB0fHR5bGUpfHQoPzppdGxlfGV4dGFyZWEpfHhtbClbXj5dKj8+L2dpLGNvZGV2aWV3SWZyYW1lRmlsdGVyOiEwLGNvZGV2aWV3SWZyYW1lV2hpdGVsaXN0U3JjOltdLGNvZGV2aWV3SWZyYW1lV2hpdGVsaXN0U3JjQmFzZTpbXCJ3d3cueW91dHViZS5jb21cIixcInd3dy55b3V0dWJlLW5vY29va2llLmNvbVwiLFwid3d3LmZhY2Vib29rLmNvbVwiLFwidmluZS5jb1wiLFwiaW5zdGFncmFtLmNvbVwiLFwicGxheWVyLnZpbWVvLmNvbVwiLFwid3d3LmRhaWx5bW90aW9uLmNvbVwiLFwicGxheWVyLnlvdWt1LmNvbVwiLFwianVtcGluZ2JlYW4udHZcIixcInYucXEuY29tXCJdLGtleU1hcDp7cGM6e0VTQzpcImVzY2FwZVwiLEVOVEVSOlwiaW5zZXJ0UGFyYWdyYXBoXCIsXCJDVFJMK1pcIjpcInVuZG9cIixcIkNUUkwrWVwiOlwicmVkb1wiLFRBQjpcInRhYlwiLFwiU0hJRlQrVEFCXCI6XCJ1bnRhYlwiLFwiQ1RSTCtCXCI6XCJib2xkXCIsXCJDVFJMK0lcIjpcIml0YWxpY1wiLFwiQ1RSTCtVXCI6XCJ1bmRlcmxpbmVcIixcIkNUUkwrU0hJRlQrU1wiOlwic3RyaWtldGhyb3VnaFwiLFwiQ1RSTCtCQUNLU0xBU0hcIjpcInJlbW92ZUZvcm1hdFwiLFwiQ1RSTCtTSElGVCtMXCI6XCJqdXN0aWZ5TGVmdFwiLFwiQ1RSTCtTSElGVCtFXCI6XCJqdXN0aWZ5Q2VudGVyXCIsXCJDVFJMK1NISUZUK1JcIjpcImp1c3RpZnlSaWdodFwiLFwiQ1RSTCtTSElGVCtKXCI6XCJqdXN0aWZ5RnVsbFwiLFwiQ1RSTCtTSElGVCtOVU03XCI6XCJpbnNlcnRVbm9yZGVyZWRMaXN0XCIsXCJDVFJMK1NISUZUK05VTThcIjpcImluc2VydE9yZGVyZWRMaXN0XCIsXCJDVFJMK0xFRlRCUkFDS0VUXCI6XCJvdXRkZW50XCIsXCJDVFJMK1JJR0hUQlJBQ0tFVFwiOlwiaW5kZW50XCIsXCJDVFJMK05VTTBcIjpcImZvcm1hdFBhcmFcIixcIkNUUkwrTlVNMVwiOlwiZm9ybWF0SDFcIixcIkNUUkwrTlVNMlwiOlwiZm9ybWF0SDJcIixcIkNUUkwrTlVNM1wiOlwiZm9ybWF0SDNcIixcIkNUUkwrTlVNNFwiOlwiZm9ybWF0SDRcIixcIkNUUkwrTlVNNVwiOlwiZm9ybWF0SDVcIixcIkNUUkwrTlVNNlwiOlwiZm9ybWF0SDZcIixcIkNUUkwrRU5URVJcIjpcImluc2VydEhvcml6b250YWxSdWxlXCIsXCJDVFJMK0tcIjpcImxpbmtEaWFsb2cuc2hvd1wifSxtYWM6e0VTQzpcImVzY2FwZVwiLEVOVEVSOlwiaW5zZXJ0UGFyYWdyYXBoXCIsXCJDTUQrWlwiOlwidW5kb1wiLFwiQ01EK1NISUZUK1pcIjpcInJlZG9cIixUQUI6XCJ0YWJcIixcIlNISUZUK1RBQlwiOlwidW50YWJcIixcIkNNRCtCXCI6XCJib2xkXCIsXCJDTUQrSVwiOlwiaXRhbGljXCIsXCJDTUQrVVwiOlwidW5kZXJsaW5lXCIsXCJDTUQrU0hJRlQrU1wiOlwic3RyaWtldGhyb3VnaFwiLFwiQ01EK0JBQ0tTTEFTSFwiOlwicmVtb3ZlRm9ybWF0XCIsXCJDTUQrU0hJRlQrTFwiOlwianVzdGlmeUxlZnRcIixcIkNNRCtTSElGVCtFXCI6XCJqdXN0aWZ5Q2VudGVyXCIsXCJDTUQrU0hJRlQrUlwiOlwianVzdGlmeVJpZ2h0XCIsXCJDTUQrU0hJRlQrSlwiOlwianVzdGlmeUZ1bGxcIixcIkNNRCtTSElGVCtOVU03XCI6XCJpbnNlcnRVbm9yZGVyZWRMaXN0XCIsXCJDTUQrU0hJRlQrTlVNOFwiOlwiaW5zZXJ0T3JkZXJlZExpc3RcIixcIkNNRCtMRUZUQlJBQ0tFVFwiOlwib3V0ZGVudFwiLFwiQ01EK1JJR0hUQlJBQ0tFVFwiOlwiaW5kZW50XCIsXCJDTUQrTlVNMFwiOlwiZm9ybWF0UGFyYVwiLFwiQ01EK05VTTFcIjpcImZvcm1hdEgxXCIsXCJDTUQrTlVNMlwiOlwiZm9ybWF0SDJcIixcIkNNRCtOVU0zXCI6XCJmb3JtYXRIM1wiLFwiQ01EK05VTTRcIjpcImZvcm1hdEg0XCIsXCJDTUQrTlVNNVwiOlwiZm9ybWF0SDVcIixcIkNNRCtOVU02XCI6XCJmb3JtYXRINlwiLFwiQ01EK0VOVEVSXCI6XCJpbnNlcnRIb3Jpem9udGFsUnVsZVwiLFwiQ01EK0tcIjpcImxpbmtEaWFsb2cuc2hvd1wifX0saWNvbnM6e2FsaWduOlwibm90ZS1pY29uLWFsaWduXCIsYWxpZ25DZW50ZXI6XCJub3RlLWljb24tYWxpZ24tY2VudGVyXCIsYWxpZ25KdXN0aWZ5Olwibm90ZS1pY29uLWFsaWduLWp1c3RpZnlcIixhbGlnbkxlZnQ6XCJub3RlLWljb24tYWxpZ24tbGVmdFwiLGFsaWduUmlnaHQ6XCJub3RlLWljb24tYWxpZ24tcmlnaHRcIixyb3dCZWxvdzpcIm5vdGUtaWNvbi1yb3ctYmVsb3dcIixjb2xCZWZvcmU6XCJub3RlLWljb24tY29sLWJlZm9yZVwiLGNvbEFmdGVyOlwibm90ZS1pY29uLWNvbC1hZnRlclwiLHJvd0Fib3ZlOlwibm90ZS1pY29uLXJvdy1hYm92ZVwiLHJvd1JlbW92ZTpcIm5vdGUtaWNvbi1yb3ctcmVtb3ZlXCIsY29sUmVtb3ZlOlwibm90ZS1pY29uLWNvbC1yZW1vdmVcIixpbmRlbnQ6XCJub3RlLWljb24tYWxpZ24taW5kZW50XCIsb3V0ZGVudDpcIm5vdGUtaWNvbi1hbGlnbi1vdXRkZW50XCIsYXJyb3dzQWx0Olwibm90ZS1pY29uLWFycm93cy1hbHRcIixib2xkOlwibm90ZS1pY29uLWJvbGRcIixjYXJldDpcIm5vdGUtaWNvbi1jYXJldFwiLGNpcmNsZTpcIm5vdGUtaWNvbi1jaXJjbGVcIixjbG9zZTpcIm5vdGUtaWNvbi1jbG9zZVwiLGNvZGU6XCJub3RlLWljb24tY29kZVwiLGVyYXNlcjpcIm5vdGUtaWNvbi1lcmFzZXJcIixmbG9hdExlZnQ6XCJub3RlLWljb24tZmxvYXQtbGVmdFwiLGZsb2F0UmlnaHQ6XCJub3RlLWljb24tZmxvYXQtcmlnaHRcIixmb250Olwibm90ZS1pY29uLWZvbnRcIixmcmFtZTpcIm5vdGUtaWNvbi1mcmFtZVwiLGl0YWxpYzpcIm5vdGUtaWNvbi1pdGFsaWNcIixsaW5rOlwibm90ZS1pY29uLWxpbmtcIix1bmxpbms6XCJub3RlLWljb24tY2hhaW4tYnJva2VuXCIsbWFnaWM6XCJub3RlLWljb24tbWFnaWNcIixtZW51Q2hlY2s6XCJub3RlLWljb24tbWVudS1jaGVja1wiLG1pbnVzOlwibm90ZS1pY29uLW1pbnVzXCIsb3JkZXJlZGxpc3Q6XCJub3RlLWljb24tb3JkZXJlZGxpc3RcIixwZW5jaWw6XCJub3RlLWljb24tcGVuY2lsXCIscGljdHVyZTpcIm5vdGUtaWNvbi1waWN0dXJlXCIscXVlc3Rpb246XCJub3RlLWljb24tcXVlc3Rpb25cIixyZWRvOlwibm90ZS1pY29uLXJlZG9cIixyb2xsYmFjazpcIm5vdGUtaWNvbi1yb2xsYmFja1wiLHNxdWFyZTpcIm5vdGUtaWNvbi1zcXVhcmVcIixzdHJpa2V0aHJvdWdoOlwibm90ZS1pY29uLXN0cmlrZXRocm91Z2hcIixzdWJzY3JpcHQ6XCJub3RlLWljb24tc3Vic2NyaXB0XCIsc3VwZXJzY3JpcHQ6XCJub3RlLWljb24tc3VwZXJzY3JpcHRcIix0YWJsZTpcIm5vdGUtaWNvbi10YWJsZVwiLHRleHRIZWlnaHQ6XCJub3RlLWljb24tdGV4dC1oZWlnaHRcIix0cmFzaDpcIm5vdGUtaWNvbi10cmFzaFwiLHVuZGVybGluZTpcIm5vdGUtaWNvbi11bmRlcmxpbmVcIix1bmRvOlwibm90ZS1pY29uLXVuZG9cIix1bm9yZGVyZWRsaXN0Olwibm90ZS1pY29uLXVub3JkZXJlZGxpc3RcIix2aWRlbzpcIm5vdGUtaWNvbi12aWRlb1wifX19KTt2YXIgJGU9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KGUsbixvLGkpeyFmdW5jdGlvbih0LGUpe2lmKCEodCBpbnN0YW5jZW9mIGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIil9KHRoaXMsdCksdGhpcy5tYXJrdXA9ZSx0aGlzLmNoaWxkcmVuPW4sdGhpcy5vcHRpb25zPW8sdGhpcy5jYWxsYmFjaz1pfXZhciBuLG8saTtyZXR1cm4gbj10LChvPVt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24odCl7dmFyIG49ZSgpKHRoaXMubWFya3VwKTtpZih0aGlzLm9wdGlvbnMmJnRoaXMub3B0aW9ucy5jb250ZW50cyYmbi5odG1sKHRoaXMub3B0aW9ucy5jb250ZW50cyksdGhpcy5vcHRpb25zJiZ0aGlzLm9wdGlvbnMuY2xhc3NOYW1lJiZuLmFkZENsYXNzKHRoaXMub3B0aW9ucy5jbGFzc05hbWUpLHRoaXMub3B0aW9ucyYmdGhpcy5vcHRpb25zLmRhdGEmJmUoKS5lYWNoKHRoaXMub3B0aW9ucy5kYXRhLChmdW5jdGlvbih0LGUpe24uYXR0cihcImRhdGEtXCIrdCxlKX0pKSx0aGlzLm9wdGlvbnMmJnRoaXMub3B0aW9ucy5jbGljayYmbi5vbihcImNsaWNrXCIsdGhpcy5vcHRpb25zLmNsaWNrKSx0aGlzLmNoaWxkcmVuKXt2YXIgbz1uLmZpbmQoXCIubm90ZS1jaGlsZHJlbi1jb250YWluZXJcIik7dGhpcy5jaGlsZHJlbi5mb3JFYWNoKChmdW5jdGlvbih0KXt0LnJlbmRlcihvLmxlbmd0aD9vOm4pfSkpfXJldHVybiB0aGlzLmNhbGxiYWNrJiZ0aGlzLmNhbGxiYWNrKG4sdGhpcy5vcHRpb25zKSx0aGlzLm9wdGlvbnMmJnRoaXMub3B0aW9ucy5jYWxsYmFjayYmdGhpcy5vcHRpb25zLmNhbGxiYWNrKG4pLHQmJnQuYXBwZW5kKG4pLG59fV0pJiZJZShuLnByb3RvdHlwZSxvKSxpJiZJZShuLGkpLHR9KCk7Y29uc3QgTmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbj1cIm9iamVjdFwiPT09RWUoYXJndW1lbnRzWzFdKT9hcmd1bWVudHNbMV06YXJndW1lbnRzWzBdLG89QXJyYXkuaXNBcnJheShhcmd1bWVudHNbMF0pP2FyZ3VtZW50c1swXTpbXTtyZXR1cm4gbiYmbi5jaGlsZHJlbiYmKG89bi5jaGlsZHJlbiksbmV3ICRlKHQsbyxuLGUpfX07ZnVuY3Rpb24gUGUodCl7cmV0dXJuIFBlPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbih0KXtyZXR1cm4gdHlwZW9mIHR9OmZ1bmN0aW9uKHQpe3JldHVybiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJnQuY29uc3RydWN0b3I9PT1TeW1ib2wmJnQhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIHR9LFBlKHQpfXZhciBSZT1OZSgnPGRpdiBjbGFzcz1cIm5vdGUtZWRpdG9yIG5vdGUtZnJhbWUgY2FyZFwiLz4nKSxMZT1OZSgnPGRpdiBjbGFzcz1cIm5vdGUtdG9vbGJhciBjYXJkLWhlYWRlclwiIHJvbGU9XCJ0b29sYmFyXCIvPicpLEFlPU5lKCc8ZGl2IGNsYXNzPVwibm90ZS1lZGl0aW5nLWFyZWFcIi8+JyksRmU9TmUoJzx0ZXh0YXJlYSBjbGFzcz1cIm5vdGUtY29kYWJsZVwiIGFyaWEtbXVsdGlsaW5lPVwidHJ1ZVwiLz4nKSxEZT1OZSgnPGRpdiBjbGFzcz1cIm5vdGUtZWRpdGFibGUgY2FyZC1ibG9ja1wiIGNvbnRlbnRFZGl0YWJsZT1cInRydWVcIiByb2xlPVwidGV4dGJveFwiIGFyaWEtbXVsdGlsaW5lPVwidHJ1ZVwiLz4nKSxIZT1OZShbJzxvdXRwdXQgY2xhc3M9XCJub3RlLXN0YXR1cy1vdXRwdXRcIiByb2xlPVwic3RhdHVzXCIgYXJpYS1saXZlPVwicG9saXRlXCI+PC9vdXRwdXQ+JywnPGRpdiBjbGFzcz1cIm5vdGUtc3RhdHVzYmFyXCIgcm9sZT1cInN0YXR1c1wiPicsJzxkaXYgY2xhc3M9XCJub3RlLXJlc2l6ZWJhclwiIGFyaWEtbGFiZWw9XCJSZXNpemVcIj4nLCc8ZGl2IGNsYXNzPVwibm90ZS1pY29uLWJhclwiPjwvZGl2PicsJzxkaXYgY2xhc3M9XCJub3RlLWljb24tYmFyXCI+PC9kaXY+JywnPGRpdiBjbGFzcz1cIm5vdGUtaWNvbi1iYXJcIj48L2Rpdj4nLFwiPC9kaXY+XCIsXCI8L2Rpdj5cIl0uam9pbihcIlwiKSksemU9TmUoJzxkaXYgY2xhc3M9XCJub3RlLWVkaXRvciBub3RlLWFpcmZyYW1lXCIvPicpLEJlPU5lKFsnPGRpdiBjbGFzcz1cIm5vdGUtZWRpdGFibGVcIiBjb250ZW50RWRpdGFibGU9XCJ0cnVlXCIgcm9sZT1cInRleHRib3hcIiBhcmlhLW11bHRpbGluZT1cInRydWVcIj48L2Rpdj4nLCc8b3V0cHV0IGNsYXNzPVwibm90ZS1zdGF0dXMtb3V0cHV0XCIgcm9sZT1cInN0YXR1c1wiIGFyaWEtbGl2ZT1cInBvbGl0ZVwiPjwvb3V0cHV0PiddLmpvaW4oXCJcIikpLE1lPU5lKCc8ZGl2IGNsYXNzPVwibm90ZS1idG4tZ3JvdXAgYnRuLWdyb3VwXCI+JyksT2U9TmUoJzxkaXYgY2xhc3M9XCJub3RlLWRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudVwiIHJvbGU9XCJsaXN0XCI+JywoZnVuY3Rpb24odCxlKXt2YXIgbj1BcnJheS5pc0FycmF5KGUuaXRlbXMpP2UuaXRlbXMubWFwKChmdW5jdGlvbih0KXt2YXIgbj1cInN0cmluZ1wiPT10eXBlb2YgdD90OnQudmFsdWV8fFwiXCIsbz1lLnRlbXBsYXRlP2UudGVtcGxhdGUodCk6dCxpPVwib2JqZWN0XCI9PT1QZSh0KT90Lm9wdGlvbjp2b2lkIDA7cmV0dXJuJzxhIGNsYXNzPVwiZHJvcGRvd24taXRlbVwiIGhyZWY9XCIjXCIgJysoJ2RhdGEtdmFsdWU9XCInK24rJ1wiJysodm9pZCAwIT09aT8nIGRhdGEtb3B0aW9uPVwiJytpKydcIic6XCJcIikpKycgcm9sZT1cImxpc3RpdGVtXCIgYXJpYS1sYWJlbD1cIicrbisnXCI+JytvK1wiPC9hPlwifSkpLmpvaW4oXCJcIik6ZS5pdGVtczt0Lmh0bWwobikuYXR0cih7XCJhcmlhLWxhYmVsXCI6ZS50aXRsZX0pLGUmJmUuY29kZXZpZXdLZWVwQnV0dG9uJiZ0LmFkZENsYXNzKFwibm90ZS1jb2Rldmlldy1rZWVwXCIpfSkpLFVlPWZ1bmN0aW9uKHQpe3JldHVybiB0fSxqZT1OZSgnPGRpdiBjbGFzcz1cIm5vdGUtZHJvcGRvd24tbWVudSBkcm9wZG93bi1tZW51IG5vdGUtY2hlY2tcIiByb2xlPVwibGlzdFwiPicsKGZ1bmN0aW9uKHQsZSl7dmFyIG49QXJyYXkuaXNBcnJheShlLml0ZW1zKT9lLml0ZW1zLm1hcCgoZnVuY3Rpb24odCl7dmFyIG49XCJzdHJpbmdcIj09dHlwZW9mIHQ/dDp0LnZhbHVlfHxcIlwiLG89ZS50ZW1wbGF0ZT9lLnRlbXBsYXRlKHQpOnQ7cmV0dXJuJzxhIGNsYXNzPVwiZHJvcGRvd24taXRlbVwiIGhyZWY9XCIjXCIgZGF0YS12YWx1ZT1cIicrbisnXCIgcm9sZT1cImxpc3RpdGVtXCIgYXJpYS1sYWJlbD1cIicrdCsnXCI+JytxZShlLmNoZWNrQ2xhc3NOYW1lKStcIiBcIitvK1wiPC9hPlwifSkpLmpvaW4oXCJcIik6ZS5pdGVtczt0Lmh0bWwobikuYXR0cih7XCJhcmlhLWxhYmVsXCI6ZS50aXRsZX0pLGUmJmUuY29kZXZpZXdLZWVwQnV0dG9uJiZ0LmFkZENsYXNzKFwibm90ZS1jb2Rldmlldy1rZWVwXCIpfSkpLFdlPU5lKCc8ZGl2IGNsYXNzPVwibW9kYWwgbm90ZS1tb2RhbFwiIGFyaWEtaGlkZGVuPVwiZmFsc2VcIiB0YWJpbmRleD1cIi0xXCIgcm9sZT1cImRpYWxvZ1wiLz4nLChmdW5jdGlvbih0LGUpe2UuZmFkZSYmdC5hZGRDbGFzcyhcImZhZGVcIiksdC5hdHRyKHtcImFyaWEtbGFiZWxcIjplLnRpdGxlfSksdC5odG1sKFsnPGRpdiBjbGFzcz1cIm1vZGFsLWRpYWxvZ1wiPicsJzxkaXYgY2xhc3M9XCJtb2RhbC1jb250ZW50XCI+JyxlLnRpdGxlPyc8ZGl2IGNsYXNzPVwibW9kYWwtaGVhZGVyXCI+PGg0IGNsYXNzPVwibW9kYWwtdGl0bGVcIj4nK2UudGl0bGUrJzwvaDQ+PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4tY2xvc2VcIiBkYXRhLWJzLWRpc21pc3M9XCJtb2RhbFwiIGFyaWEtbGFiZWw9XCJDbG9zZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvYnV0dG9uPjwvZGl2Pic6XCJcIiwnPGRpdiBjbGFzcz1cIm1vZGFsLWJvZHlcIj4nK2UuYm9keStcIjwvZGl2PlwiLGUuZm9vdGVyPyc8ZGl2IGNsYXNzPVwibW9kYWwtZm9vdGVyXCI+JytlLmZvb3RlcitcIjwvZGl2PlwiOlwiXCIsXCI8L2Rpdj5cIixcIjwvZGl2PlwiXS5qb2luKFwiXCIpKX0pKSxLZT1OZShbJzxkaXYgY2xhc3M9XCJub3RlLXBvcG92ZXIgcG9wb3ZlciBzaG93XCI+JywnPGRpdiBjbGFzcz1cInBvcG92ZXItYXJyb3dcIj48L2Rpdj4nLCc8ZGl2IGNsYXNzPVwicG9wb3Zlci1ib2R5IG5vdGUtY2hpbGRyZW4tY29udGFpbmVyXCI+PC9kaXY+JyxcIjwvZGl2PlwiXS5qb2luKFwiXCIpLChmdW5jdGlvbih0LGUpe3ZhciBuPXZvaWQgMCE9PWUuZGlyZWN0aW9uP2UuZGlyZWN0aW9uOlwiYm90dG9tXCI7dC5hdHRyKFwiZGF0YS1icy1wbGFjZW1lbnRcIixuKSxlLmhpZGVBcnJvdyYmdC5maW5kKFwiLnBvcG92ZXItYXJyb3dcIikuaGlkZSgpfSkpLFZlPU5lKCc8ZGl2IGNsYXNzPVwiZm9ybS1jaGVja1wiPjwvZGl2PicsKGZ1bmN0aW9uKHQsZSl7dC5odG1sKFsnPGxhYmVsIGNsYXNzPVwiZm9ybS1jaGVjay1sYWJlbFwiJysoZS5pZD8nIGZvcj1cIm5vdGUtJytlLmlkKydcIic6XCJcIikrXCI+XCIsJzxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBjbGFzcz1cImZvcm0tY2hlY2staW5wdXRcIicrKGUuaWQ/JyBpZD1cIm5vdGUtJytlLmlkKydcIic6XCJcIiksZS5jaGVja2VkP1wiIGNoZWNrZWRcIjpcIlwiLCcgYXJpYS1sYWJlbD1cIicrKGUudGV4dD9lLnRleHQ6XCJcIikrJ1wiJywnIGFyaWEtY2hlY2tlZD1cIicrKGUuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCIpKydcIi8+JyxcIiBcIisoZS50ZXh0P2UudGV4dDpcIlwiKStcIjwvbGFiZWw+XCJdLmpvaW4oXCJcIikpfSkpLHFlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQubWF0Y2goL148Lyk/dDpcIjxcIisoZT1lfHxcImlcIikrJyBjbGFzcz1cIicrdCsnXCI+PC8nK2UrXCI+XCJ9O2UoKS5zdW1tZXJub3RlPWUoKS5leHRlbmQoZSgpLnN1bW1lcm5vdGUse3VpX3RlbXBsYXRlOmZ1bmN0aW9uKHQpe3JldHVybntlZGl0b3I6UmUsdG9vbGJhcjpMZSxlZGl0aW5nQXJlYTpBZSxjb2RhYmxlOkZlLGVkaXRhYmxlOkRlLHN0YXR1c2JhcjpIZSxhaXJFZGl0b3I6emUsYWlyRWRpdGFibGU6QmUsYnV0dG9uR3JvdXA6TWUsZHJvcGRvd246T2UsZHJvcGRvd25CdXR0b25Db250ZW50czpVZSxkcm9wZG93bkNoZWNrOmplLGRpYWxvZzpXZSxwb3BvdmVyOktlLGljb246cWUsY2hlY2tib3g6VmUsb3B0aW9uczp0LHBhbGV0dGU6ZnVuY3Rpb24oZSxuKXtyZXR1cm4gTmUoJzxkaXYgY2xhc3M9XCJub3RlLWNvbG9yLXBhbGV0dGVcIi8+JywoZnVuY3Rpb24oZSxuKXtmb3IodmFyIG89W10saT0wLHI9bi5jb2xvcnMubGVuZ3RoO2k8cjtpKyspe2Zvcih2YXIgYT1uLmV2ZW50TmFtZSxzPW4uY29sb3JzW2ldLGw9bi5jb2xvcnNOYW1lW2ldLGM9W10sdT0wLGQ9cy5sZW5ndGg7dTxkO3UrKyl7dmFyIGg9c1t1XSxmPWxbdV07Yy5wdXNoKFsnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJub3RlLWNvbG9yLWJ0blwiJywnc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOicsaCwnXCIgJywnZGF0YS1ldmVudD1cIicsYSwnXCIgJywnZGF0YS12YWx1ZT1cIicsaCwnXCIgJywndGl0bGU9XCInLGYsJ1wiICcsJ2FyaWEtbGFiZWw9XCInLGYsJ1wiICcsJ2RhdGEtdG9nZ2xlPVwiYnV0dG9uXCIgdGFiaW5kZXg9XCItMVwiPjwvYnV0dG9uPiddLmpvaW4oXCJcIikpfW8ucHVzaCgnPGRpdiBjbGFzcz1cIm5vdGUtY29sb3Itcm93XCI+JytjLmpvaW4oXCJcIikrXCI8L2Rpdj5cIil9ZS5odG1sKG8uam9pbihcIlwiKSksbi50b29sdGlwJiZlLmZpbmQoXCIubm90ZS1jb2xvci1idG5cIikudG9vbHRpcCh7Y29udGFpbmVyOm4uY29udGFpbmVyfHx0LmNvbnRhaW5lcix0cmlnZ2VyOlwiaG92ZXJcIixwbGFjZW1lbnQ6XCJib3R0b21cIn0pfSkpKGUsbil9LGJ1dHRvbjpmdW5jdGlvbihuLG8pe3JldHVybiBOZSgnPGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJub3RlLWJ0biBidG4gYnRuLWxpZ2h0IGJ0bi1zbVwiIHRhYmluZGV4PVwiLTFcIj4nLChmdW5jdGlvbihuLG8pe28mJm8udG9vbHRpcCYmbi5hdHRyKHt0aXRsZTpvLnRvb2x0aXAsXCJhcmlhLWxhYmVsXCI6by50b29sdGlwfSkudG9vbHRpcCh7Y29udGFpbmVyOm8uY29udGFpbmVyfHx0LmNvbnRhaW5lcix0cmlnZ2VyOlwiaG92ZXJcIixwbGFjZW1lbnQ6XCJib3R0b21cIn0pLm9uKFwiY2xpY2tcIiwoZnVuY3Rpb24odCl7ZSgpKHQuY3VycmVudFRhcmdldCkudG9vbHRpcChcImhpZGVcIil9KSksbyYmby5jb2Rldmlld0J1dHRvbiYmbi5hZGRDbGFzcyhcIm5vdGUtY29kZXZpZXcta2VlcFwiKX0pKShuLG8pfSx0b2dnbGVCdG46ZnVuY3Rpb24odCxlKXt0LnRvZ2dsZUNsYXNzKFwiZGlzYWJsZWRcIiwhZSksdC5hdHRyKFwiZGlzYWJsZWRcIiwhZSl9LHRvZ2dsZUJ0bkFjdGl2ZTpmdW5jdGlvbih0LGUpe3QudG9nZ2xlQ2xhc3MoXCJhY3RpdmVcIixlKX0sb25EaWFsb2dTaG93bjpmdW5jdGlvbih0LGUpe3Qub25lKFwic2hvd24uYnMubW9kYWxcIixlKX0sb25EaWFsb2dIaWRkZW46ZnVuY3Rpb24odCxlKXt0Lm9uZShcImhpZGRlbi5icy5tb2RhbFwiLGUpfSxzaG93RGlhbG9nOmZ1bmN0aW9uKHQpe3QubW9kYWwoXCJzaG93XCIpfSxoaWRlRGlhbG9nOmZ1bmN0aW9uKHQpe3QubW9kYWwoXCJoaWRlXCIpfSxjcmVhdGVMYXlvdXQ6ZnVuY3Rpb24oZSl7dmFyIG49KHQuYWlyTW9kZT96ZShbQWUoW0ZlKCksQmUoKV0pXSk6XCJib3R0b21cIj09PXQudG9vbGJhclBvc2l0aW9uP1JlKFtBZShbRmUoKSxEZSgpXSksTGUoKSxIZSgpXSk6UmUoW0xlKCksQWUoW0ZlKCksRGUoKV0pLEhlKCldKSkucmVuZGVyKCk7cmV0dXJuIG4uaW5zZXJ0QWZ0ZXIoZSkse25vdGU6ZSxlZGl0b3I6bix0b29sYmFyOm4uZmluZChcIi5ub3RlLXRvb2xiYXJcIiksZWRpdGluZ0FyZWE6bi5maW5kKFwiLm5vdGUtZWRpdGluZy1hcmVhXCIpLGVkaXRhYmxlOm4uZmluZChcIi5ub3RlLWVkaXRhYmxlXCIpLGNvZGFibGU6bi5maW5kKFwiLm5vdGUtY29kYWJsZVwiKSxzdGF0dXNiYXI6bi5maW5kKFwiLm5vdGUtc3RhdHVzYmFyXCIpfX0scmVtb3ZlTGF5b3V0OmZ1bmN0aW9uKHQsZSl7dC5odG1sKGUuZWRpdGFibGUuaHRtbCgpKSxlLmVkaXRvci5yZW1vdmUoKSx0LnNob3coKX19fSxpbnRlcmZhY2U6XCJiczVcIn0pLGUoKS5zdW1tZXJub3RlLm9wdGlvbnMuc3R5bGVUYWdzPVtcInBcIix7dGl0bGU6XCJCbG9ja3F1b3RlXCIsdGFnOlwiYmxvY2txdW90ZVwiLGNsYXNzTmFtZTpcImJsb2NrcXVvdGVcIix2YWx1ZTpcImJsb2NrcXVvdGVcIn0sXCJwcmVcIixcImgxXCIsXCJoMlwiLFwiaDNcIixcImg0XCIsXCJoNVwiLFwiaDZcIl19KSgpLGl9KSgpfSkpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/summernote/dist/summernote-bs5.min.js\n");

/***/ }),

/***/ "./node_modules/summernote/dist/summernote.min.js":
/*!********************************************************!*\
  !*** ./node_modules/summernote/dist/summernote.min.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*! Summernote v0.8.20 | (c) 2013- Alan Hong and contributors | MIT license */\n!function(t,e){if(true)module.exports=e(__webpack_require__(/*! jQuery */ \"./node_modules/jQuery/dist/jquery.js\"));else { var o, n; }}(self,(function(t){return(()=>{\"use strict\";var e={9770:(t,e,n)=>{var o=n(1145),i=n.n(o);i().summernote=i().summernote||{lang:{}},i().extend(i().summernote.lang,{\"en-US\":{font:{bold:\"Bold\",italic:\"Italic\",underline:\"Underline\",clear:\"Remove Font Style\",height:\"Line Height\",name:\"Font Family\",strikethrough:\"Strikethrough\",subscript:\"Subscript\",superscript:\"Superscript\",size:\"Font Size\",sizeunit:\"Font Size Unit\"},image:{image:\"Picture\",insert:\"Insert Image\",resizeFull:\"Resize full\",resizeHalf:\"Resize half\",resizeQuarter:\"Resize quarter\",resizeNone:\"Original size\",floatLeft:\"Float Left\",floatRight:\"Float Right\",floatNone:\"Remove float\",shapeRounded:\"Shape: Rounded\",shapeCircle:\"Shape: Circle\",shapeThumbnail:\"Shape: Thumbnail\",shapeNone:\"Shape: None\",dragImageHere:\"Drag image or text here\",dropImage:\"Drop image or Text\",selectFromFiles:\"Select from files\",maximumFileSize:\"Maximum file size\",maximumFileSizeError:\"Maximum file size exceeded.\",url:\"Image URL\",remove:\"Remove Image\",original:\"Original\"},video:{video:\"Video\",videoLink:\"Video Link\",insert:\"Insert Video\",url:\"Video URL\",providers:\"(YouTube, Google Drive, Vimeo, Vine, Instagram, DailyMotion, Youku, Peertube)\"},link:{link:\"Link\",insert:\"Insert Link\",unlink:\"Unlink\",edit:\"Edit\",textToDisplay:\"Text to display\",url:\"To what URL should this link go?\",openInNewWindow:\"Open in new window\",useProtocol:\"Use default protocol\"},table:{table:\"Table\",addRowAbove:\"Add row above\",addRowBelow:\"Add row below\",addColLeft:\"Add column left\",addColRight:\"Add column right\",delRow:\"Delete row\",delCol:\"Delete column\",delTable:\"Delete table\"},hr:{insert:\"Insert Horizontal Rule\"},style:{style:\"Style\",p:\"Normal\",blockquote:\"Quote\",pre:\"Code\",h1:\"Header 1\",h2:\"Header 2\",h3:\"Header 3\",h4:\"Header 4\",h5:\"Header 5\",h6:\"Header 6\"},lists:{unordered:\"Unordered list\",ordered:\"Ordered list\"},options:{help:\"Help\",fullscreen:\"Full Screen\",codeview:\"Code View\"},paragraph:{paragraph:\"Paragraph\",outdent:\"Outdent\",indent:\"Indent\",left:\"Align left\",center:\"Align center\",right:\"Align right\",justify:\"Justify full\"},color:{recent:\"Recent Color\",more:\"More Color\",background:\"Background Color\",foreground:\"Text Color\",transparent:\"Transparent\",setTransparent:\"Set transparent\",reset:\"Reset\",resetToDefault:\"Reset to default\",cpSelect:\"Select\"},shortcut:{shortcuts:\"Keyboard shortcuts\",close:\"Close\",textFormatting:\"Text formatting\",action:\"Action\",paragraphFormatting:\"Paragraph formatting\",documentStyle:\"Document Style\",extraKeys:\"Extra keys\"},help:{escape:\"Escape\",insertParagraph:\"Insert Paragraph\",undo:\"Undo the last command\",redo:\"Redo the last command\",tab:\"Tab\",untab:\"Untab\",bold:\"Set a bold style\",italic:\"Set a italic style\",underline:\"Set a underline style\",strikethrough:\"Set a strikethrough style\",removeFormat:\"Clean a style\",justifyLeft:\"Set left align\",justifyCenter:\"Set center align\",justifyRight:\"Set right align\",justifyFull:\"Set full align\",insertUnorderedList:\"Toggle unordered list\",insertOrderedList:\"Toggle ordered list\",outdent:\"Outdent on current paragraph\",indent:\"Indent on current paragraph\",formatPara:\"Change current block's format as a paragraph(P tag)\",formatH1:\"Change current block's format as H1\",formatH2:\"Change current block's format as H2\",formatH3:\"Change current block's format as H3\",formatH4:\"Change current block's format as H4\",formatH5:\"Change current block's format as H5\",formatH6:\"Change current block's format as H6\",insertHorizontalRule:\"Insert horizontal rule\",\"linkDialog.show\":\"Show Link Dialog\"},history:{undo:\"Undo\",redo:\"Redo\"},specialChar:{specialChar:\"SPECIAL CHARACTERS\",select:\"Select Special characters\"},output:{noSelection:\"No Selection Made!\"}}})},1145:e=>{e.exports=t}},n={};function o(t){var i=n[t];if(void 0!==i)return i.exports;var r=n[t]={exports:{}};return e[t](r,r.exports,o),r.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),o.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var i={};return(()=>{o.r(i);var t=o(1145),e=o.n(t),n=(o(9770),[\"sans-serif\",\"serif\",\"monospace\",\"cursive\",\"fantasy\"]);function r(t){return-1===e().inArray(t.toLowerCase(),n)?\"'\".concat(t,\"'\"):t}var a,s=navigator.userAgent,l=/MSIE|Trident/i.test(s);if(l){var c=/MSIE (\\d+[.]\\d+)/.exec(s);c&&(a=parseFloat(c[1])),(c=/Trident\\/.*rv:([0-9]{1,}[.0-9]{0,})/.exec(s))&&(a=parseFloat(c[1]))}var u=/Edge\\/\\d+/.test(s),d=\"ontouchstart\"in window||navigator.MaxTouchPoints>0||navigator.msMaxTouchPoints>0,h=l?\"DOMCharacterDataModified DOMSubtreeModified DOMNodeInserted\":\"input\";const f={isMac:navigator.appVersion.indexOf(\"Mac\")>-1,isMSIE:l,isEdge:u,isFF:!u&&/firefox/i.test(s),isPhantom:/PhantomJS/i.test(s),isWebkit:!u&&/webkit/i.test(s),isChrome:!u&&/chrome/i.test(s),isSafari:!u&&/safari/i.test(s)&&!/chrome/i.test(s),browserVersion:a,isSupportTouch:d,isFontInstalled:function(t){var e=\"Comic Sans MS\"===t?\"Courier New\":\"Comic Sans MS\",n=\"mmmmmmmmmmwwwww\",o=document.createElement(\"canvas\").getContext(\"2d\");o.font=\"200px '\"+e+\"'\";var i=o.measureText(n).width;return o.font=\"200px \"+r(t)+', \"'+e+'\"',i!==o.measureText(n).width},isW3CRangeSupport:!!document.createRange,inputEventName:h,genericFontFamilies:n,validFontName:r};var p=0;const v={eq:function(t){return function(e){return t===e}},eq2:function(t,e){return t===e},peq2:function(t){return function(e,n){return e[t]===n[t]}},ok:function(){return!0},fail:function(){return!1},self:function(t){return t},not:function(t){return function(){return!t.apply(t,arguments)}},and:function(t,e){return function(n){return t(n)&&e(n)}},invoke:function(t,e){return function(){return t[e].apply(t,arguments)}},resetUniqueId:function(){p=0},uniqueId:function(t){var e=++p+\"\";return t?t+e:e},rect2bnd:function(t){var n=e()(document);return{top:t.top+n.scrollTop(),left:t.left+n.scrollLeft(),width:t.right-t.left,height:t.bottom-t.top}},invertObject:function(t){var e={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[t[n]]=n);return e},namespaceToCamel:function(t,e){return(e=e||\"\")+t.split(\".\").map((function(t){return t.substring(0,1).toUpperCase()+t.substring(1)})).join(\"\")},debounce:function(t,e,n){var o;return function(){var i=this,r=arguments,a=function(){o=null,n||t.apply(i,r)},s=n&&!o;clearTimeout(o),o=setTimeout(a,e),s&&t.apply(i,r)}},isValidUrl:function(t){return/[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi.test(t)}};function m(t){return t[0]}function g(t){return t[t.length-1]}function b(t){return t.slice(1)}function y(t,e){if(t&&t.length&&e){if(t.indexOf)return-1!==t.indexOf(e);if(t.contains)return t.contains(e)}return!1}const k={head:m,last:g,initial:function(t){return t.slice(0,t.length-1)},tail:b,prev:function(t,e){if(t&&t.length&&e){var n=t.indexOf(e);return-1===n?null:t[n-1]}return null},next:function(t,e){if(t&&t.length&&e){var n=t.indexOf(e);return-1===n?null:t[n+1]}return null},find:function(t,e){for(var n=0,o=t.length;n<o;n++){var i=t[n];if(e(i))return i}},contains:y,all:function(t,e){for(var n=0,o=t.length;n<o;n++)if(!e(t[n]))return!1;return!0},sum:function(t,e){return e=e||v.self,t.reduce((function(t,n){return t+e(n)}),0)},from:function(t){for(var e=[],n=t.length,o=-1;++o<n;)e[o]=t[o];return e},isEmpty:function(t){return!t||!t.length},clusterBy:function(t,e){return t.length?b(t).reduce((function(t,n){var o=g(t);return e(g(o),n)?o[o.length]=n:t[t.length]=[n],t}),[[m(t)]]):[]},compact:function(t){for(var e=[],n=0,o=t.length;n<o;n++)t[n]&&e.push(t[n]);return e},unique:function(t){for(var e=[],n=0,o=t.length;n<o;n++)y(e,t[n])||e.push(t[n]);return e}};var w=String.fromCharCode(160);function C(t){return t&&e()(t).hasClass(\"note-editable\")}function x(t){return t=t.toUpperCase(),function(e){return e&&e.nodeName.toUpperCase()===t}}function S(t){return t&&3===t.nodeType}function T(t){return t&&/^BR|^IMG|^HR|^IFRAME|^BUTTON|^INPUT|^AUDIO|^VIDEO|^EMBED/.test(t.nodeName.toUpperCase())}function E(t){return!C(t)&&(t&&/^DIV|^P|^LI|^H[1-7]/.test(t.nodeName.toUpperCase()))}var I=x(\"PRE\"),$=x(\"LI\");var N=x(\"TABLE\"),P=x(\"DATA\");function R(t){return!(H(t)||L(t)||A(t)||E(t)||N(t)||D(t)||P(t))}function L(t){return t&&/^UL|^OL/.test(t.nodeName.toUpperCase())}var A=x(\"HR\");function F(t){return t&&/^TD|^TH/.test(t.nodeName.toUpperCase())}var D=x(\"BLOCKQUOTE\");function H(t){return F(t)||D(t)||C(t)}var z=x(\"A\");var B=x(\"BODY\");var M=f.isMSIE&&f.browserVersion<11?\"&nbsp;\":\"<br>\";function O(t){return S(t)?t.nodeValue.length:t?t.childNodes.length:0}function U(t){var e=O(t);return 0===e||(!S(t)&&1===e&&t.innerHTML===M||!(!k.all(t.childNodes,S)||\"\"!==t.innerHTML))}function j(t){T(t)||O(t)||(t.innerHTML=M)}function W(t,e){for(;t;){if(e(t))return t;if(C(t))break;t=t.parentNode}return null}function K(t,e){e=e||v.fail;var n=[];return W(t,(function(t){return C(t)||n.push(t),e(t)})),n}function V(t,e){e=e||v.fail;for(var n=[];t&&!e(t);)n.push(t),t=t.nextSibling;return n}function q(t,e){var n=e.nextSibling,o=e.parentNode;return n?o.insertBefore(t,n):o.appendChild(t),t}function _(t,n){return e().each(n,(function(e,n){t.appendChild(n)})),t}function G(t){return 0===t.offset}function Y(t){return t.offset===O(t.node)}function Z(t){return G(t)||Y(t)}function Q(t,e){for(;t&&t!==e;){if(0!==J(t))return!1;t=t.parentNode}return!0}function X(t,e){if(!e)return!1;for(;t&&t!==e;){if(J(t)!==O(t.parentNode)-1)return!1;t=t.parentNode}return!0}function J(t){for(var e=0;t=t.previousSibling;)e+=1;return e}function tt(t){return!!(t&&t.childNodes&&t.childNodes.length)}function et(t,e){var n,o;if(0===t.offset){if(C(t.node))return null;n=t.node.parentNode,o=J(t.node)}else tt(t.node)?o=O(n=t.node.childNodes[t.offset-1]):(n=t.node,o=e?0:t.offset-1);return{node:n,offset:o}}function nt(t,e){var n,o;if(O(t.node)===t.offset){if(C(t.node))return null;var i=it(t.node);i?(n=i,o=0):(n=t.node.parentNode,o=J(t.node)+1)}else tt(t.node)?(n=t.node.childNodes[t.offset],o=0):(n=t.node,o=e?O(t.node):t.offset+1);return{node:n,offset:o}}function ot(t,e){var n,o=0;if(U(t.node))return null===t.node?null:{node:n=t.node.nextSibling,offset:o=0};if(O(t.node)===t.offset){if(C(t.node))return null;n=t.node.parentNode,o=J(t.node)+1,C(n)&&(n=t.node.nextSibling,o=0)}else if(tt(t.node)){if(o=0,U(n=t.node.childNodes[t.offset]))return U(t.node.nextSibling)?null:{node:t.node.nextSibling,offset:o}}else if(n=t.node,o=e?O(t.node):t.offset+1,U(n))return null;return{node:n,offset:o}}function it(t){if(t.nextSibling&&t.parent===t.nextSibling.parent)return S(t.nextSibling)?t.nextSibling:it(t.nextSibling)}function rt(t,e){return t.node===e.node&&t.offset===e.offset}function at(t,e){var n=e&&e.isSkipPaddingBlankHTML,o=e&&e.isNotSplitEdgePoint,i=e&&e.isDiscardEmptySplits;if(i&&(n=!0),Z(t)&&(S(t.node)||o)){if(G(t))return t.node;if(Y(t))return t.node.nextSibling}if(S(t.node))return t.node.splitText(t.offset);var r=t.node.childNodes[t.offset],a=q(t.node.cloneNode(!1),t.node);return _(a,V(r)),n||(j(t.node),j(a)),i&&(U(t.node)&&ct(t.node),U(a))?(ct(a),t.node.nextSibling):a}function st(t,e,n){var o=K(e.node,v.eq(t));return o.length?1===o.length?at(e,n):o.reduce((function(t,o){return t===e.node&&(t=at(e,n)),at({node:o,offset:t?J(t):O(o)},n)})):null}function lt(t){return document.createElement(t)}function ct(t,e){if(t&&t.parentNode){if(t.removeNode)return t.removeNode(e);var n=t.parentNode;if(!e){for(var o=[],i=0,r=t.childNodes.length;i<r;i++)o.push(t.childNodes[i]);for(var a=0,s=o.length;a<s;a++)n.insertBefore(o[a],t)}n.removeChild(t)}}var ut=x(\"TEXTAREA\");function dt(t,e){var n=ut(t[0])?t.val():t.html();return e?n.replace(/[\\n\\r]/g,\"\"):n}const ht={NBSP_CHAR:w,ZERO_WIDTH_NBSP_CHAR:\"\\ufeff\",blank:M,emptyPara:\"<p>\".concat(M,\"</p>\"),makePredByNodeName:x,isEditable:C,isControlSizing:function(t){return t&&e()(t).hasClass(\"note-control-sizing\")},isText:S,isElement:function(t){return t&&1===t.nodeType},isVoid:T,isPara:E,isPurePara:function(t){return E(t)&&!$(t)},isHeading:function(t){return t&&/^H[1-7]/.test(t.nodeName.toUpperCase())},isInline:R,isBlock:v.not(R),isBodyInline:function(t){return R(t)&&!W(t,E)},isBody:B,isParaInline:function(t){return R(t)&&!!W(t,E)},isPre:I,isList:L,isTable:N,isData:P,isCell:F,isBlockquote:D,isBodyContainer:H,isAnchor:z,isDiv:x(\"DIV\"),isLi:$,isBR:x(\"BR\"),isSpan:x(\"SPAN\"),isB:x(\"B\"),isU:x(\"U\"),isS:x(\"S\"),isI:x(\"I\"),isImg:x(\"IMG\"),isTextarea:ut,deepestChildIsEmpty:function(t){do{if(null===t.firstElementChild||\"\"===t.firstElementChild.innerHTML)break}while(t=t.firstElementChild);return U(t)},isEmpty:U,isEmptyAnchor:v.and(z,U),isClosestSibling:function(t,e){return t.nextSibling===e||t.previousSibling===e},withClosestSiblings:function(t,e){e=e||v.ok;var n=[];return t.previousSibling&&e(t.previousSibling)&&n.push(t.previousSibling),n.push(t),t.nextSibling&&e(t.nextSibling)&&n.push(t.nextSibling),n},nodeLength:O,isLeftEdgePoint:G,isRightEdgePoint:Y,isEdgePoint:Z,isLeftEdgeOf:Q,isRightEdgeOf:X,isLeftEdgePointOf:function(t,e){return G(t)&&Q(t.node,e)},isRightEdgePointOf:function(t,e){return Y(t)&&X(t.node,e)},prevPoint:et,nextPoint:nt,nextPointWithEmptyNode:ot,isSamePoint:rt,isVisiblePoint:function(t){if(S(t.node)||!tt(t.node)||U(t.node))return!0;var e=t.node.childNodes[t.offset-1],n=t.node.childNodes[t.offset];return!((e&&!T(e)||n&&!T(n))&&!N(n))},prevPointUntil:function(t,e){for(;t;){if(e(t))return t;t=et(t)}return null},nextPointUntil:function(t,e){for(;t;){if(e(t))return t;t=nt(t)}return null},isCharPoint:function(t){if(!S(t.node))return!1;var e=t.node.nodeValue.charAt(t.offset-1);return e&&\" \"!==e&&e!==w},isSpacePoint:function(t){if(!S(t.node))return!1;var e=t.node.nodeValue.charAt(t.offset-1);return\" \"===e||e===w},walkPoint:function(t,e,n,o){for(var i=t;i&&(n(i),!rt(i,e));){i=ot(i,o&&t.node!==i.node&&e.node!==i.node)}},ancestor:W,singleChildAncestor:function(t,e){for(t=t.parentNode;t&&1===O(t);){if(e(t))return t;if(C(t))break;t=t.parentNode}return null},listAncestor:K,lastAncestor:function(t,e){var n=K(t);return k.last(n.filter(e))},listNext:V,listPrev:function(t,e){e=e||v.fail;for(var n=[];t&&!e(t);)n.push(t),t=t.previousSibling;return n},listDescendant:function(t,e){var n=[];return e=e||v.ok,function o(i){t!==i&&e(i)&&n.push(i);for(var r=0,a=i.childNodes.length;r<a;r++)o(i.childNodes[r])}(t),n},commonAncestor:function(t,e){for(var n=K(t),o=e;o;o=o.parentNode)if(n.indexOf(o)>-1)return o;return null},wrap:function(t,n){var o=t.parentNode,i=e()(\"<\"+n+\">\")[0];return o.insertBefore(i,t),i.appendChild(t),i},insertAfter:q,appendChildNodes:_,position:J,hasChildren:tt,makeOffsetPath:function(t,e){return K(e,v.eq(t)).map(J).reverse()},fromOffsetPath:function(t,e){for(var n=t,o=0,i=e.length;o<i;o++)n=n.childNodes.length<=e[o]?n.childNodes[n.childNodes.length-1]:n.childNodes[e[o]];return n},splitTree:st,splitPoint:function(t,e){var n,o,i=e?E:H,r=K(t.node,i),a=k.last(r)||t.node;i(a)?(n=r[r.length-2],o=a):o=(n=a).parentNode;var s=n&&st(n,t,{isSkipPaddingBlankHTML:e,isNotSplitEdgePoint:e});return s||o!==t.node||(s=t.node.childNodes[t.offset]),{rightNode:s,container:o}},create:lt,createText:function(t){return document.createTextNode(t)},remove:ct,removeWhile:function(t,e){for(;t&&!C(t)&&e(t);){var n=t.parentNode;ct(t),t=n}},replace:function(t,e){if(t.nodeName.toUpperCase()===e.toUpperCase())return t;var n=lt(e);return t.style.cssText&&(n.style.cssText=t.style.cssText),_(n,k.from(t.childNodes)),q(n,t),ct(t),n},html:function(t,e){var n=dt(t);if(e){n=(n=n.replace(/<(\\/?)(\\b(?!!)[^>\\s]*)(.*?)(\\s*\\/?>)/g,(function(t,e,n){n=n.toUpperCase();var o=/^DIV|^TD|^TH|^P|^LI|^H[1-7]/.test(n)&&!!e,i=/^BLOCKQUOTE|^TABLE|^TBODY|^TR|^HR|^UL|^OL/.test(n);return t+(o||i?\"\\n\":\"\")}))).trim()}return n},value:dt,posFromPlaceholder:function(t){var n=e()(t),o=n.offset(),i=n.outerHeight(!0);return{left:o.left,top:o.top+i}},attachEvents:function(t,e){Object.keys(e).forEach((function(n){t.on(n,e[n])}))},detachEvents:function(t,e){Object.keys(e).forEach((function(n){t.off(n,e[n])}))},isCustomStyleTag:function(t){return t&&!S(t)&&k.contains(t.classList,\"note-styletag\")}};function ft(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var pt=function(){function t(n,o){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.$note=n,this.memos={},this.modules={},this.layoutInfo={},this.options=e().extend(!0,{},o),e().summernote.ui=e().summernote.ui_template(this.options),this.ui=e().summernote.ui,this.initialize()}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){return this.layoutInfo=this.ui.createLayout(this.$note),this._initialize(),this.$note.hide(),this}},{key:\"destroy\",value:function(){this._destroy(),this.$note.removeData(\"summernote\"),this.ui.removeLayout(this.$note,this.layoutInfo)}},{key:\"reset\",value:function(){var t=this.isDisabled();this.code(ht.emptyPara),this._destroy(),this._initialize(),t&&this.disable()}},{key:\"_initialize\",value:function(){var t=this;this.options.id=v.uniqueId(e().now()),this.options.container=this.options.container||this.layoutInfo.editor;var n=e().extend({},this.options.buttons);Object.keys(n).forEach((function(e){t.memo(\"button.\"+e,n[e])}));var o=e().extend({},this.options.modules,e().summernote.plugins||{});Object.keys(o).forEach((function(e){t.module(e,o[e],!0)})),Object.keys(this.modules).forEach((function(e){t.initializeModule(e)}))}},{key:\"_destroy\",value:function(){var t=this;Object.keys(this.modules).reverse().forEach((function(e){t.removeModule(e)})),Object.keys(this.memos).forEach((function(e){t.removeMemo(e)})),this.triggerEvent(\"destroy\",this)}},{key:\"code\",value:function(t){var e=this.invoke(\"codeview.isActivated\");if(void 0===t)return this.invoke(\"codeview.sync\"),e?this.layoutInfo.codable.val():this.layoutInfo.editable.html();e?this.invoke(\"codeview.sync\",t):this.layoutInfo.editable.html(t),this.$note.val(t),this.triggerEvent(\"change\",t,this.layoutInfo.editable)}},{key:\"isDisabled\",value:function(){return\"false\"===this.layoutInfo.editable.attr(\"contenteditable\")}},{key:\"enable\",value:function(){this.layoutInfo.editable.attr(\"contenteditable\",!0),this.invoke(\"toolbar.activate\",!0),this.triggerEvent(\"disable\",!1),this.options.editing=!0}},{key:\"disable\",value:function(){this.invoke(\"codeview.isActivated\")&&this.invoke(\"codeview.deactivate\"),this.layoutInfo.editable.attr(\"contenteditable\",!1),this.options.editing=!1,this.invoke(\"toolbar.deactivate\",!0),this.triggerEvent(\"disable\",!0)}},{key:\"triggerEvent\",value:function(){var t=k.head(arguments),e=k.tail(k.from(arguments)),n=this.options.callbacks[v.namespaceToCamel(t,\"on\")];n&&n.apply(this.$note[0],e),this.$note.trigger(\"summernote.\"+t,e)}},{key:\"initializeModule\",value:function(t){var e=this.modules[t];e.shouldInitialize=e.shouldInitialize||v.ok,e.shouldInitialize()&&(e.initialize&&e.initialize(),e.events&&ht.attachEvents(this.$note,e.events))}},{key:\"module\",value:function(t,e,n){if(1===arguments.length)return this.modules[t];this.modules[t]=new e(this),n||this.initializeModule(t)}},{key:\"removeModule\",value:function(t){var e=this.modules[t];e.shouldInitialize()&&(e.events&&ht.detachEvents(this.$note,e.events),e.destroy&&e.destroy()),delete this.modules[t]}},{key:\"memo\",value:function(t,e){if(1===arguments.length)return this.memos[t];this.memos[t]=e}},{key:\"removeMemo\",value:function(t){this.memos[t]&&this.memos[t].destroy&&this.memos[t].destroy(),delete this.memos[t]}},{key:\"createInvokeHandlerAndUpdateState\",value:function(t,e){var n=this;return function(o){n.createInvokeHandler(t,e)(o),n.invoke(\"buttons.updateCurrentStyle\")}}},{key:\"createInvokeHandler\",value:function(t,n){var o=this;return function(i){i.preventDefault();var r=e()(i.target);o.invoke(t,n||r.closest(\"[data-value]\").data(\"value\"),r)}}},{key:\"invoke\",value:function(){var t=k.head(arguments),e=k.tail(k.from(arguments)),n=t.split(\".\"),o=n.length>1,i=o&&k.head(n),r=o?k.last(n):k.head(n),a=this.modules[i||\"editor\"];return!i&&this[r]?this[r].apply(this,e):a&&a[r]&&a.shouldInitialize()?a[r].apply(a,e):void 0}}],o&&ft(n.prototype,o),i&&ft(n,i),t}();function vt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}function mt(t,e){var n,o,i=t.parentElement(),r=document.body.createTextRange(),a=k.from(i.childNodes);for(n=0;n<a.length;n++)if(!ht.isText(a[n])){if(r.moveToElementText(a[n]),r.compareEndPoints(\"StartToStart\",t)>=0)break;o=a[n]}if(0!==n&&ht.isText(a[n-1])){var s=document.body.createTextRange(),l=null;s.moveToElementText(o||i),s.collapse(!o),l=o?o.nextSibling:i.firstChild;var c=t.duplicate();c.setEndPoint(\"StartToStart\",s);for(var u=c.text.replace(/[\\r\\n]/g,\"\").length;u>l.nodeValue.length&&l.nextSibling;)u-=l.nodeValue.length,l=l.nextSibling;l.nodeValue;e&&l.nextSibling&&ht.isText(l.nextSibling)&&u===l.nodeValue.length&&(u-=l.nodeValue.length,l=l.nextSibling),i=l,n=u}return{cont:i,offset:n}}function gt(t){var e=document.body.createTextRange(),n=function t(e,n){var o,i;if(ht.isText(e)){var r=ht.listPrev(e,v.not(ht.isText)),a=k.last(r).previousSibling;o=a||e.parentNode,n+=k.sum(k.tail(r),ht.nodeLength),i=!a}else{if(o=e.childNodes[n]||e,ht.isText(o))return t(o,0);n=0,i=!1}return{node:o,collapseToStart:i,offset:n}}(t.node,t.offset);return e.moveToElementText(n.node),e.collapse(n.collapseToStart),e.moveStart(\"character\",n.offset),e}e().fn.extend({summernote:function(){var t=e().type(k.head(arguments)),n=\"string\"===t,o=\"object\"===t,i=e().extend({},e().summernote.options,o?k.head(arguments):{});i.langInfo=e().extend(!0,{},e().summernote.lang[\"en-US\"],e().summernote.lang[i.lang]),i.icons=e().extend(!0,{},e().summernote.options.icons,i.icons),i.tooltip=\"auto\"===i.tooltip?!f.isSupportTouch:i.tooltip,this.each((function(t,n){var o=e()(n);if(!o.data(\"summernote\")){var r=new pt(o,i);o.data(\"summernote\",r),o.data(\"summernote\").triggerEvent(\"init\",r.layoutInfo)}}));var r=this.first();if(r.length){var a=r.data(\"summernote\");if(n)return a.invoke.apply(a,k.from(arguments));i.focus&&a.invoke(\"editor.focus\")}return this}});var bt=function(){function t(e,n,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.sc=e,this.so=n,this.ec=o,this.eo=i,this.isOnEditable=this.makeIsOn(ht.isEditable),this.isOnList=this.makeIsOn(ht.isList),this.isOnAnchor=this.makeIsOn(ht.isAnchor),this.isOnCell=this.makeIsOn(ht.isCell),this.isOnData=this.makeIsOn(ht.isData)}var n,o,i;return n=t,o=[{key:\"nativeRange\",value:function(){if(f.isW3CRangeSupport){var t=document.createRange();return t.setStart(this.sc,this.so),t.setEnd(this.ec,this.eo),t}var e=gt({node:this.sc,offset:this.so});return e.setEndPoint(\"EndToEnd\",gt({node:this.ec,offset:this.eo})),e}},{key:\"getPoints\",value:function(){return{sc:this.sc,so:this.so,ec:this.ec,eo:this.eo}}},{key:\"getStartPoint\",value:function(){return{node:this.sc,offset:this.so}}},{key:\"getEndPoint\",value:function(){return{node:this.ec,offset:this.eo}}},{key:\"select\",value:function(){var t=this.nativeRange();if(f.isW3CRangeSupport){var e=document.getSelection();e.rangeCount>0&&e.removeAllRanges(),e.addRange(t)}else t.select();return this}},{key:\"scrollIntoView\",value:function(t){var n=e()(t).height();return t.scrollTop+n<this.sc.offsetTop&&(t.scrollTop+=Math.abs(t.scrollTop+n-this.sc.offsetTop)),this}},{key:\"normalize\",value:function(){var e=function(t,e){if(!t)return t;if(ht.isVisiblePoint(t)&&(!ht.isEdgePoint(t)||ht.isRightEdgePoint(t)&&!e||ht.isLeftEdgePoint(t)&&e||ht.isRightEdgePoint(t)&&e&&ht.isVoid(t.node.nextSibling)||ht.isLeftEdgePoint(t)&&!e&&ht.isVoid(t.node.previousSibling)||ht.isBlock(t.node)&&ht.isEmpty(t.node)))return t;var n=ht.ancestor(t.node,ht.isBlock),o=!1;if(!o){var i=ht.prevPoint(t)||{node:null};o=(ht.isLeftEdgePointOf(t,n)||ht.isVoid(i.node))&&!e}var r=!1;if(!r){var a=ht.nextPoint(t)||{node:null};r=(ht.isRightEdgePointOf(t,n)||ht.isVoid(a.node))&&e}if(o||r){if(ht.isVisiblePoint(t))return t;e=!e}return(e?ht.nextPointUntil(ht.nextPoint(t),ht.isVisiblePoint):ht.prevPointUntil(ht.prevPoint(t),ht.isVisiblePoint))||t},n=e(this.getEndPoint(),!1),o=this.isCollapsed()?n:e(this.getStartPoint(),!0);return new t(o.node,o.offset,n.node,n.offset)}},{key:\"nodes\",value:function(t,e){t=t||v.ok;var n=e&&e.includeAncestor,o=e&&e.fullyContains,i=this.getStartPoint(),r=this.getEndPoint(),a=[],s=[];return ht.walkPoint(i,r,(function(e){var i;ht.isEditable(e.node)||(o?(ht.isLeftEdgePoint(e)&&s.push(e.node),ht.isRightEdgePoint(e)&&k.contains(s,e.node)&&(i=e.node)):i=n?ht.ancestor(e.node,t):e.node,i&&t(i)&&a.push(i))}),!0),k.unique(a)}},{key:\"commonAncestor\",value:function(){return ht.commonAncestor(this.sc,this.ec)}},{key:\"expand\",value:function(e){var n=ht.ancestor(this.sc,e),o=ht.ancestor(this.ec,e);if(!n&&!o)return new t(this.sc,this.so,this.ec,this.eo);var i=this.getPoints();return n&&(i.sc=n,i.so=0),o&&(i.ec=o,i.eo=ht.nodeLength(o)),new t(i.sc,i.so,i.ec,i.eo)}},{key:\"collapse\",value:function(e){return e?new t(this.sc,this.so,this.sc,this.so):new t(this.ec,this.eo,this.ec,this.eo)}},{key:\"splitText\",value:function(){var e=this.sc===this.ec,n=this.getPoints();return ht.isText(this.ec)&&!ht.isEdgePoint(this.getEndPoint())&&this.ec.splitText(this.eo),ht.isText(this.sc)&&!ht.isEdgePoint(this.getStartPoint())&&(n.sc=this.sc.splitText(this.so),n.so=0,e&&(n.ec=n.sc,n.eo=this.eo-this.so)),new t(n.sc,n.so,n.ec,n.eo)}},{key:\"deleteContents\",value:function(){if(this.isCollapsed())return this;var n=this.splitText(),o=n.nodes(null,{fullyContains:!0}),i=ht.prevPointUntil(n.getStartPoint(),(function(t){return!k.contains(o,t.node)})),r=[];return e().each(o,(function(t,e){var n=e.parentNode;i.node!==n&&1===ht.nodeLength(n)&&r.push(n),ht.remove(e,!1)})),e().each(r,(function(t,e){ht.remove(e,!1)})),new t(i.node,i.offset,i.node,i.offset).normalize()}},{key:\"makeIsOn\",value:function(t){return function(){var e=ht.ancestor(this.sc,t);return!!e&&e===ht.ancestor(this.ec,t)}}},{key:\"isLeftEdgeOf\",value:function(t){if(!ht.isLeftEdgePoint(this.getStartPoint()))return!1;var e=ht.ancestor(this.sc,t);return e&&ht.isLeftEdgeOf(this.sc,e)}},{key:\"isCollapsed\",value:function(){return this.sc===this.ec&&this.so===this.eo}},{key:\"wrapBodyInlineWithPara\",value:function(){if(ht.isBodyContainer(this.sc)&&ht.isEmpty(this.sc))return this.sc.innerHTML=ht.emptyPara,new t(this.sc.firstChild,0,this.sc.firstChild,0);var e,n=this.normalize();if(ht.isParaInline(this.sc)||ht.isPara(this.sc))return n;if(ht.isInline(n.sc)){var o=ht.listAncestor(n.sc,v.not(ht.isInline));e=k.last(o),ht.isInline(e)||(e=o[o.length-2]||n.sc.childNodes[n.so])}else e=n.sc.childNodes[n.so>0?n.so-1:0];if(e){var i=ht.listPrev(e,ht.isParaInline).reverse();if((i=i.concat(ht.listNext(e.nextSibling,ht.isParaInline))).length){var r=ht.wrap(k.head(i),\"p\");ht.appendChildNodes(r,k.tail(i))}}return this.normalize()}},{key:\"insertNode\",value:function(t){var e=this;(ht.isText(t)||ht.isInline(t))&&(e=this.wrapBodyInlineWithPara().deleteContents());var n=ht.splitPoint(e.getStartPoint(),ht.isInline(t));return n.rightNode?(n.rightNode.parentNode.insertBefore(t,n.rightNode),ht.isEmpty(n.rightNode)&&ht.isPara(t)&&n.rightNode.parentNode.removeChild(n.rightNode)):n.container.appendChild(t),t}},{key:\"pasteHTML\",value:function(t){t=e().trim(t);var n=e()(\"<div></div>\").html(t)[0],o=k.from(n.childNodes),i=this,r=!1;return i.so>=0&&(o=o.reverse(),r=!0),o=o.map((function(t){return i.insertNode(t)})),r&&(o=o.reverse()),o}},{key:\"toString\",value:function(){var t=this.nativeRange();return f.isW3CRangeSupport?t.toString():t.text}},{key:\"getWordRange\",value:function(e){var n=this.getEndPoint();if(!ht.isCharPoint(n))return this;var o=ht.prevPointUntil(n,(function(t){return!ht.isCharPoint(t)}));return e&&(n=ht.nextPointUntil(n,(function(t){return!ht.isCharPoint(t)}))),new t(o.node,o.offset,n.node,n.offset)}},{key:\"getWordsRange\",value:function(e){var n=this.getEndPoint(),o=function(t){return!ht.isCharPoint(t)&&!ht.isSpacePoint(t)};if(o(n))return this;var i=ht.prevPointUntil(n,o);return e&&(n=ht.nextPointUntil(n,o)),new t(i.node,i.offset,n.node,n.offset)}},{key:\"getWordsMatchRange\",value:function(e){var n=this.getEndPoint(),o=ht.prevPointUntil(n,(function(o){if(!ht.isCharPoint(o)&&!ht.isSpacePoint(o))return!0;var i=new t(o.node,o.offset,n.node,n.offset),r=e.exec(i.toString());return r&&0===r.index})),i=new t(o.node,o.offset,n.node,n.offset),r=i.toString(),a=e.exec(r);return a&&a[0].length===r.length?i:null}},{key:\"bookmark\",value:function(t){return{s:{path:ht.makeOffsetPath(t,this.sc),offset:this.so},e:{path:ht.makeOffsetPath(t,this.ec),offset:this.eo}}}},{key:\"paraBookmark\",value:function(t){return{s:{path:k.tail(ht.makeOffsetPath(k.head(t),this.sc)),offset:this.so},e:{path:k.tail(ht.makeOffsetPath(k.last(t),this.ec)),offset:this.eo}}}},{key:\"getClientRects\",value:function(){return this.nativeRange().getClientRects()}}],o&&vt(n.prototype,o),i&&vt(n,i),t}();const yt={create:function(t,e,n,o){if(4===arguments.length)return new bt(t,e,n,o);if(2===arguments.length)return new bt(t,e,n=t,o=e);var i=this.createFromSelection();if(!i&&1===arguments.length){var r=arguments[0];return ht.isEditable(r)&&(r=r.lastChild),this.createFromBodyElement(r,ht.emptyPara===arguments[0].innerHTML)}return i},createFromBodyElement:function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=this.createFromNode(t);return n.collapse(e)},createFromSelection:function(){var t,e,n,o;if(f.isW3CRangeSupport){var i=document.getSelection();if(!i||0===i.rangeCount)return null;if(ht.isBody(i.anchorNode))return null;var r=i.getRangeAt(0);t=r.startContainer,e=r.startOffset,n=r.endContainer,o=r.endOffset}else{var a=document.selection.createRange(),s=a.duplicate();s.collapse(!1);var l=a;l.collapse(!0);var c=mt(l,!0),u=mt(s,!1);ht.isText(c.node)&&ht.isLeftEdgePoint(c)&&ht.isTextNode(u.node)&&ht.isRightEdgePoint(u)&&u.node.nextSibling===c.node&&(c=u),t=c.cont,e=c.offset,n=u.cont,o=u.offset}return new bt(t,e,n,o)},createFromNode:function(t){var e=t,n=0,o=t,i=ht.nodeLength(o);return ht.isVoid(e)&&(n=ht.listPrev(e).length-1,e=e.parentNode),ht.isBR(o)?(i=ht.listPrev(o).length-1,o=o.parentNode):ht.isVoid(o)&&(i=ht.listPrev(o).length,o=o.parentNode),this.create(e,n,o,i)},createFromNodeBefore:function(t){return this.createFromNode(t).collapse(!0)},createFromNodeAfter:function(t){return this.createFromNode(t).collapse()},createFromBookmark:function(t,e){var n=ht.fromOffsetPath(t,e.s.path),o=e.s.offset,i=ht.fromOffsetPath(t,e.e.path),r=e.e.offset;return new bt(n,o,i,r)},createFromParaBookmark:function(t,e){var n=t.s.offset,o=t.e.offset,i=ht.fromOffsetPath(k.head(e),t.s.path),r=ht.fromOffsetPath(k.last(e),t.e.path);return new bt(i,n,r,o)}};var kt={BACKSPACE:8,TAB:9,ENTER:13,ESCAPE:27,SPACE:32,DELETE:46,LEFT:37,UP:38,RIGHT:39,DOWN:40,NUM0:48,NUM1:49,NUM2:50,NUM3:51,NUM4:52,NUM5:53,NUM6:54,NUM7:55,NUM8:56,B:66,E:69,I:73,J:74,K:75,L:76,R:82,S:83,U:85,V:86,Y:89,Z:90,SLASH:191,LEFTBRACKET:219,BACKSLASH:220,RIGHTBRACKET:221,HOME:36,END:35,PAGEUP:33,PAGEDOWN:34};const wt={isEdit:function(t){return k.contains([kt.BACKSPACE,kt.TAB,kt.ENTER,kt.SPACE,kt.DELETE],t)},isMove:function(t){return k.contains([kt.LEFT,kt.UP,kt.RIGHT,kt.DOWN],t)},isNavigation:function(t){return k.contains([kt.HOME,kt.END,kt.PAGEUP,kt.PAGEDOWN],t)},nameFromCode:v.invertObject(kt),code:kt};function Ct(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var xt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.stack=[],this.stackOffset=-1,this.context=e,this.$editable=e.layoutInfo.editable,this.editable=this.$editable[0]}var e,n,o;return e=t,(n=[{key:\"makeSnapshot\",value:function(){var t=yt.create(this.editable);return{contents:this.$editable.html(),bookmark:t&&t.isOnEditable()?t.bookmark(this.editable):{s:{path:[],offset:0},e:{path:[],offset:0}}}}},{key:\"applySnapshot\",value:function(t){null!==t.contents&&this.$editable.html(t.contents),null!==t.bookmark&&yt.createFromBookmark(this.editable,t.bookmark).select()}},{key:\"rewind\",value:function(){this.$editable.html()!==this.stack[this.stackOffset].contents&&this.recordUndo(),this.stackOffset=0,this.applySnapshot(this.stack[this.stackOffset])}},{key:\"commit\",value:function(){this.stack=[],this.stackOffset=-1,this.recordUndo()}},{key:\"reset\",value:function(){this.stack=[],this.stackOffset=-1,this.$editable.html(\"\"),this.recordUndo()}},{key:\"undo\",value:function(){this.$editable.html()!==this.stack[this.stackOffset].contents&&this.recordUndo(),this.stackOffset>0&&(this.stackOffset--,this.applySnapshot(this.stack[this.stackOffset]))}},{key:\"redo\",value:function(){this.stack.length-1>this.stackOffset&&(this.stackOffset++,this.applySnapshot(this.stack[this.stackOffset]))}},{key:\"recordUndo\",value:function(){this.stackOffset++,this.stack.length>this.stackOffset&&(this.stack=this.stack.slice(0,this.stackOffset)),this.stack.push(this.makeSnapshot()),this.stack.length>this.context.options.historyLimit&&(this.stack.shift(),this.stackOffset-=1)}}])&&Ct(e.prototype,n),o&&Ct(e,o),t}();function St(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Tt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}var n,o,i;return n=t,o=[{key:\"jQueryCSS\",value:function(t,n){var o={};return e().each(n,(function(e,n){o[n]=t.css(n)})),o}},{key:\"fromNode\",value:function(t){var e=this.jQueryCSS(t,[\"font-family\",\"font-size\",\"text-align\",\"list-style-type\",\"line-height\"])||{},n=t[0].style.fontSize||e[\"font-size\"];return e[\"font-size\"]=parseInt(n,10),e[\"font-size-unit\"]=n.match(/[a-z%]+$/),e}},{key:\"stylePara\",value:function(t,n){e().each(t.nodes(ht.isPara,{includeAncestor:!0}),(function(t,o){e()(o).css(n)}))}},{key:\"styleNodes\",value:function(t,n){t=t.splitText();var o=n&&n.nodeName||\"SPAN\",i=!(!n||!n.expandClosestSibling),r=!(!n||!n.onlyPartialContains);if(t.isCollapsed())return[t.insertNode(ht.create(o))];var a=ht.makePredByNodeName(o),s=t.nodes(ht.isText,{fullyContains:!0}).map((function(t){return ht.singleChildAncestor(t,a)||ht.wrap(t,o)}));if(i){if(r){var l=t.nodes();a=v.and(a,(function(t){return k.contains(l,t)}))}return s.map((function(t){var n=ht.withClosestSiblings(t,a),o=k.head(n),i=k.tail(n);return e().each(i,(function(t,e){ht.appendChildNodes(o,e.childNodes),ht.remove(e)})),k.head(n)}))}return s}},{key:\"current\",value:function(t){var n=e()(ht.isElement(t.sc)?t.sc:t.sc.parentNode),o=this.fromNode(n);try{o=e().extend(o,{\"font-bold\":document.queryCommandState(\"bold\")?\"bold\":\"normal\",\"font-italic\":document.queryCommandState(\"italic\")?\"italic\":\"normal\",\"font-underline\":document.queryCommandState(\"underline\")?\"underline\":\"normal\",\"font-subscript\":document.queryCommandState(\"subscript\")?\"subscript\":\"normal\",\"font-superscript\":document.queryCommandState(\"superscript\")?\"superscript\":\"normal\",\"font-strikethrough\":document.queryCommandState(\"strikethrough\")?\"strikethrough\":\"normal\",\"font-family\":document.queryCommandValue(\"fontname\")||o[\"font-family\"]})}catch(t){}if(t.isOnList()){var i=[\"circle\",\"disc\",\"disc-leading-zero\",\"square\"].indexOf(o[\"list-style-type\"])>-1;o[\"list-style\"]=i?\"unordered\":\"ordered\"}else o[\"list-style\"]=\"none\";var r=ht.ancestor(t.sc,ht.isPara);if(r&&r.style[\"line-height\"])o[\"line-height\"]=r.style.lineHeight;else{var a=parseInt(o[\"line-height\"],10)/parseInt(o[\"font-size\"],10);o[\"line-height\"]=a.toFixed(1)}return o.anchor=t.isOnAnchor()&&ht.ancestor(t.sc,ht.isAnchor),o.ancestors=ht.listAncestor(t.sc,ht.isEditable),o.range=t,o}}],o&&St(n.prototype,o),i&&St(n,i),t}();function Et(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var It=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}var n,o,i;return n=t,o=[{key:\"insertOrderedList\",value:function(t){this.toggleList(\"OL\",t)}},{key:\"insertUnorderedList\",value:function(t){this.toggleList(\"UL\",t)}},{key:\"indent\",value:function(t){var n=this,o=yt.create(t).wrapBodyInlineWithPara(),i=o.nodes(ht.isPara,{includeAncestor:!0}),r=k.clusterBy(i,v.peq2(\"parentNode\"));e().each(r,(function(t,o){var i=k.head(o);if(ht.isLi(i)){var r=n.findList(i.previousSibling);r?o.map((function(t){return r.appendChild(t)})):(n.wrapList(o,i.parentNode.nodeName),o.map((function(t){return t.parentNode})).map((function(t){return n.appendToPrevious(t)})))}else e().each(o,(function(t,n){e()(n).css(\"marginLeft\",(function(t,e){return(parseInt(e,10)||0)+25}))}))})),o.select()}},{key:\"outdent\",value:function(t){var n=this,o=yt.create(t).wrapBodyInlineWithPara(),i=o.nodes(ht.isPara,{includeAncestor:!0}),r=k.clusterBy(i,v.peq2(\"parentNode\"));e().each(r,(function(t,o){var i=k.head(o);ht.isLi(i)?n.releaseList([o]):e().each(o,(function(t,n){e()(n).css(\"marginLeft\",(function(t,e){return(e=parseInt(e,10)||0)>25?e-25:\"\"}))}))})),o.select()}},{key:\"toggleList\",value:function(t,n){var o=this,i=yt.create(n).wrapBodyInlineWithPara(),r=i.nodes(ht.isPara,{includeAncestor:!0}),a=i.paraBookmark(r),s=k.clusterBy(r,v.peq2(\"parentNode\"));if(k.find(r,ht.isPurePara)){var l=[];e().each(s,(function(e,n){l=l.concat(o.wrapList(n,t))})),r=l}else{var c=i.nodes(ht.isList,{includeAncestor:!0}).filter((function(n){return!e().nodeName(n,t)}));c.length?e().each(c,(function(e,n){ht.replace(n,t)})):r=this.releaseList(s,!0)}yt.createFromParaBookmark(a,r).select()}},{key:\"wrapList\",value:function(t,e){var n=k.head(t),o=k.last(t),i=ht.isList(n.previousSibling)&&n.previousSibling,r=ht.isList(o.nextSibling)&&o.nextSibling,a=i||ht.insertAfter(ht.create(e||\"UL\"),o);return t=t.map((function(t){return ht.isPurePara(t)?ht.replace(t,\"LI\"):t})),ht.appendChildNodes(a,t),r&&(ht.appendChildNodes(a,k.from(r.childNodes)),ht.remove(r)),t}},{key:\"releaseList\",value:function(t,n){var o=this,i=[];return e().each(t,(function(t,r){var a=k.head(r),s=k.last(r),l=n?ht.lastAncestor(a,ht.isList):a.parentNode,c=l.parentNode;if(\"LI\"===l.parentNode.nodeName)r.map((function(t){var e=o.findNextSiblings(t);c.nextSibling?c.parentNode.insertBefore(t,c.nextSibling):c.parentNode.appendChild(t),e.length&&(o.wrapList(e,l.nodeName),t.appendChild(e[0].parentNode))})),0===l.children.length&&c.removeChild(l),0===c.childNodes.length&&c.parentNode.removeChild(c);else{var u=l.childNodes.length>1?ht.splitTree(l,{node:s.parentNode,offset:ht.position(s)+1},{isSkipPaddingBlankHTML:!0}):null,d=ht.splitTree(l,{node:a.parentNode,offset:ht.position(a)},{isSkipPaddingBlankHTML:!0});r=n?ht.listDescendant(d,ht.isLi):k.from(d.childNodes).filter(ht.isLi),!n&&ht.isList(l.parentNode)||(r=r.map((function(t){return ht.replace(t,\"P\")}))),e().each(k.from(r).reverse(),(function(t,e){ht.insertAfter(e,l)}));var h=k.compact([l,d,u]);e().each(h,(function(t,n){var o=[n].concat(ht.listDescendant(n,ht.isList));e().each(o.reverse(),(function(t,e){ht.nodeLength(e)||ht.remove(e,!0)}))}))}i=i.concat(r)})),i}},{key:\"appendToPrevious\",value:function(t){return t.previousSibling?ht.appendChildNodes(t.previousSibling,[t]):this.wrapList([t],\"LI\")}},{key:\"findList\",value:function(t){return t?k.find(t.children,(function(t){return[\"OL\",\"UL\"].indexOf(t.nodeName)>-1})):null}},{key:\"findNextSiblings\",value:function(t){for(var e=[];t.nextSibling;)e.push(t.nextSibling),t=t.nextSibling;return e}}],o&&Et(n.prototype,o),i&&Et(n,i),t}();function $t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Nt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.bullet=new It,this.options=e.options}var n,o,i;return n=t,o=[{key:\"insertTab\",value:function(t,e){var n=ht.createText(new Array(e+1).join(ht.NBSP_CHAR));(t=t.deleteContents()).insertNode(n,!0),(t=yt.create(n,e)).select()}},{key:\"insertParagraph\",value:function(t,n){n=(n=(n=n||yt.create(t)).deleteContents()).wrapBodyInlineWithPara();var o,i=ht.ancestor(n.sc,ht.isPara);if(i){if(ht.isLi(i)&&(ht.isEmpty(i)||ht.deepestChildIsEmpty(i)))return void this.bullet.toggleList(i.parentNode.nodeName);var r=null;if(1===this.options.blockquoteBreakingLevel?r=ht.ancestor(i,ht.isBlockquote):2===this.options.blockquoteBreakingLevel&&(r=ht.lastAncestor(i,ht.isBlockquote)),r){o=e()(ht.emptyPara)[0],ht.isRightEdgePoint(n.getStartPoint())&&ht.isBR(n.sc.nextSibling)&&e()(n.sc.nextSibling).remove();var a=ht.splitTree(r,n.getStartPoint(),{isDiscardEmptySplits:!0});a?a.parentNode.insertBefore(o,a):ht.insertAfter(o,r)}else{o=ht.splitTree(i,n.getStartPoint());var s=ht.listDescendant(i,ht.isEmptyAnchor);s=s.concat(ht.listDescendant(o,ht.isEmptyAnchor)),e().each(s,(function(t,e){ht.remove(e)})),(ht.isHeading(o)||ht.isPre(o)||ht.isCustomStyleTag(o))&&ht.isEmpty(o)&&(o=ht.replace(o,\"p\"))}}else{var l=n.sc.childNodes[n.so];o=e()(ht.emptyPara)[0],l?n.sc.insertBefore(o,l):n.sc.appendChild(o)}yt.create(o,0).normalize().select().scrollIntoView(t)}}],o&&$t(n.prototype,o),i&&$t(n,i),t}();function Pt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Rt=function t(e,n,o,i){var r={colPos:0,rowPos:0},a=[],s=[];function l(t,e,n,o,i,r,s){var l={baseRow:n,baseCell:o,isRowSpan:i,isColSpan:r,isVirtual:s};a[t]||(a[t]=[]),a[t][e]=l}function c(t,e,n,o){return{baseCell:t.baseCell,action:e,virtualTable:{rowIndex:n,cellIndex:o}}}function u(t,e){if(!a[t])return e;if(!a[t][e])return e;for(var n=e;a[t][n];)if(n++,!a[t][n])return n}function d(t,e){var n=u(t.rowIndex,e.cellIndex),o=e.colSpan>1,i=e.rowSpan>1,a=t.rowIndex===r.rowPos&&e.cellIndex===r.colPos;l(t.rowIndex,n,t,e,i,o,!1);var s=e.attributes.rowSpan?parseInt(e.attributes.rowSpan.value,10):0;if(s>1)for(var c=1;c<s;c++){var d=t.rowIndex+c;h(d,n,e,a),l(d,n,t,e,!0,o,!0)}var f=e.attributes.colSpan?parseInt(e.attributes.colSpan.value,10):0;if(f>1)for(var p=1;p<f;p++){var v=u(t.rowIndex,n+p);h(t.rowIndex,v,e,a),l(t.rowIndex,v,t,e,i,!0,!0)}}function h(t,e,n,o){t===r.rowPos&&r.colPos>=n.cellIndex&&n.cellIndex<=e&&!o&&r.colPos++}function f(e){switch(n){case t.where.Column:if(e.isColSpan)return t.resultAction.SubtractSpanCount;break;case t.where.Row:if(!e.isVirtual&&e.isRowSpan)return t.resultAction.AddCell;if(e.isRowSpan)return t.resultAction.SubtractSpanCount}return t.resultAction.RemoveCell}function p(e){switch(n){case t.where.Column:if(e.isColSpan)return t.resultAction.SumSpanCount;if(e.isRowSpan&&e.isVirtual)return t.resultAction.Ignore;break;case t.where.Row:if(e.isRowSpan)return t.resultAction.SumSpanCount;if(e.isColSpan&&e.isVirtual)return t.resultAction.Ignore}return t.resultAction.AddCell}this.getActionList=function(){for(var e=n===t.where.Row?r.rowPos:-1,i=n===t.where.Column?r.colPos:-1,l=0,u=!0;u;){var d=e>=0?e:l,h=i>=0?i:l,v=a[d];if(!v)return u=!1,s;var m=v[h];if(!m)return u=!1,s;var g=t.resultAction.Ignore;switch(o){case t.requestAction.Add:g=p(m);break;case t.requestAction.Delete:g=f(m)}s.push(c(m,g,d,h)),l++}return s},e&&e.tagName&&(\"td\"===e.tagName.toLowerCase()||\"th\"===e.tagName.toLowerCase())&&(r.colPos=e.cellIndex,e.parentElement&&e.parentElement.tagName&&\"tr\"===e.parentElement.tagName.toLowerCase()&&(r.rowPos=e.parentElement.rowIndex)),function(){for(var t=i.rows,e=0;e<t.length;e++)for(var n=t[e].cells,o=0;o<n.length;o++)d(t[e],n[o])}()};Rt.where={Row:0,Column:1},Rt.requestAction={Add:0,Delete:1},Rt.resultAction={Ignore:0,SubtractSpanCount:1,RemoveCell:2,AddCell:3,SumSpanCount:4};var Lt=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t)}var n,o,i;return n=t,o=[{key:\"tab\",value:function(t,e){var n=ht.ancestor(t.commonAncestor(),ht.isCell),o=ht.ancestor(n,ht.isTable),i=ht.listDescendant(o,ht.isCell),r=k[e?\"prev\":\"next\"](i,n);r&&yt.create(r,0).select()}},{key:\"addRow\",value:function(t,n){for(var o=ht.ancestor(t.commonAncestor(),ht.isCell),i=e()(o).closest(\"tr\"),r=this.recoverAttributes(i),a=e()(\"<tr\"+r+\"></tr>\"),s=new Rt(o,Rt.where.Row,Rt.requestAction.Add,e()(i).closest(\"table\")[0]).getActionList(),l=0;l<s.length;l++){var c=s[l],u=this.recoverAttributes(c.baseCell);switch(c.action){case Rt.resultAction.AddCell:a.append(\"<td\"+u+\">\"+ht.blank+\"</td>\");break;case Rt.resultAction.SumSpanCount:if(\"top\"===n&&(c.baseCell.parent?c.baseCell.closest(\"tr\").rowIndex:0)<=i[0].rowIndex){var d=e()(\"<div></div>\").append(e()(\"<td\"+u+\">\"+ht.blank+\"</td>\").removeAttr(\"rowspan\")).html();a.append(d);break}var h=parseInt(c.baseCell.rowSpan,10);h++,c.baseCell.setAttribute(\"rowSpan\",h)}}if(\"top\"===n)i.before(a);else{if(o.rowSpan>1){var f=i[0].rowIndex+(o.rowSpan-2);return void e()(e()(i).parent().find(\"tr\")[f]).after(e()(a))}i.after(a)}}},{key:\"addCol\",value:function(t,n){var o=ht.ancestor(t.commonAncestor(),ht.isCell),i=e()(o).closest(\"tr\");e()(i).siblings().push(i);for(var r=new Rt(o,Rt.where.Column,Rt.requestAction.Add,e()(i).closest(\"table\")[0]).getActionList(),a=0;a<r.length;a++){var s=r[a],l=this.recoverAttributes(s.baseCell);switch(s.action){case Rt.resultAction.AddCell:\"right\"===n?e()(s.baseCell).after(\"<td\"+l+\">\"+ht.blank+\"</td>\"):e()(s.baseCell).before(\"<td\"+l+\">\"+ht.blank+\"</td>\");break;case Rt.resultAction.SumSpanCount:if(\"right\"===n){var c=parseInt(s.baseCell.colSpan,10);c++,s.baseCell.setAttribute(\"colSpan\",c)}else e()(s.baseCell).before(\"<td\"+l+\">\"+ht.blank+\"</td>\")}}}},{key:\"recoverAttributes\",value:function(t){var e=\"\";if(!t)return e;for(var n=t.attributes||[],o=0;o<n.length;o++)\"id\"!==n[o].name.toLowerCase()&&n[o].specified&&(e+=\" \"+n[o].name+\"='\"+n[o].value+\"'\");return e}},{key:\"deleteRow\",value:function(t){for(var n=ht.ancestor(t.commonAncestor(),ht.isCell),o=e()(n).closest(\"tr\"),i=o.children(\"td, th\").index(e()(n)),r=o[0].rowIndex,a=new Rt(n,Rt.where.Row,Rt.requestAction.Delete,e()(o).closest(\"table\")[0]).getActionList(),s=0;s<a.length;s++)if(a[s]){var l=a[s].baseCell,c=a[s].virtualTable,u=l.rowSpan&&l.rowSpan>1,d=u?parseInt(l.rowSpan,10):0;switch(a[s].action){case Rt.resultAction.Ignore:continue;case Rt.resultAction.AddCell:var h=o.next(\"tr\")[0];if(!h)continue;var f=o[0].cells[i];u&&(d>2?(d--,h.insertBefore(f,h.cells[i]),h.cells[i].setAttribute(\"rowSpan\",d),h.cells[i].innerHTML=\"\"):2===d&&(h.insertBefore(f,h.cells[i]),h.cells[i].removeAttribute(\"rowSpan\"),h.cells[i].innerHTML=\"\"));continue;case Rt.resultAction.SubtractSpanCount:u&&(d>2?(d--,l.setAttribute(\"rowSpan\",d),c.rowIndex!==r&&l.cellIndex===i&&(l.innerHTML=\"\")):2===d&&(l.removeAttribute(\"rowSpan\"),c.rowIndex!==r&&l.cellIndex===i&&(l.innerHTML=\"\")));continue;case Rt.resultAction.RemoveCell:continue}}o.remove()}},{key:\"deleteCol\",value:function(t){for(var n=ht.ancestor(t.commonAncestor(),ht.isCell),o=e()(n).closest(\"tr\"),i=o.children(\"td, th\").index(e()(n)),r=new Rt(n,Rt.where.Column,Rt.requestAction.Delete,e()(o).closest(\"table\")[0]).getActionList(),a=0;a<r.length;a++)if(r[a])switch(r[a].action){case Rt.resultAction.Ignore:continue;case Rt.resultAction.SubtractSpanCount:var s=r[a].baseCell;if(s.colSpan&&s.colSpan>1){var l=s.colSpan?parseInt(s.colSpan,10):0;l>2?(l--,s.setAttribute(\"colSpan\",l),s.cellIndex===i&&(s.innerHTML=\"\")):2===l&&(s.removeAttribute(\"colSpan\"),s.cellIndex===i&&(s.innerHTML=\"\"))}continue;case Rt.resultAction.RemoveCell:ht.remove(r[a].baseCell,!0);continue}}},{key:\"createTable\",value:function(t,n,o){for(var i,r=[],a=0;a<t;a++)r.push(\"<td>\"+ht.blank+\"</td>\");i=r.join(\"\");for(var s,l=[],c=0;c<n;c++)l.push(\"<tr>\"+i+\"</tr>\");s=l.join(\"\");var u=e()(\"<table>\"+s+\"</table>\");return o&&o.tableClassName&&u.addClass(o.tableClassName),u[0]}},{key:\"deleteTable\",value:function(t){var n=ht.ancestor(t.commonAncestor(),ht.isCell);e()(n).closest(\"table\").remove()}}],o&&Pt(n.prototype,o),i&&Pt(n,i),t}();function At(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ft=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$note=n.layoutInfo.note,this.$editor=n.layoutInfo.editor,this.$editable=n.layoutInfo.editable,this.options=n.options,this.lang=this.options.langInfo,this.editable=this.$editable[0],this.lastRange=null,this.snapshot=null,this.style=new Tt,this.table=new Lt,this.typing=new Nt(n),this.bullet=new It,this.history=new xt(n),this.context.memo(\"help.escape\",this.lang.help.escape),this.context.memo(\"help.undo\",this.lang.help.undo),this.context.memo(\"help.redo\",this.lang.help.redo),this.context.memo(\"help.tab\",this.lang.help.tab),this.context.memo(\"help.untab\",this.lang.help.untab),this.context.memo(\"help.insertParagraph\",this.lang.help.insertParagraph),this.context.memo(\"help.insertOrderedList\",this.lang.help.insertOrderedList),this.context.memo(\"help.insertUnorderedList\",this.lang.help.insertUnorderedList),this.context.memo(\"help.indent\",this.lang.help.indent),this.context.memo(\"help.outdent\",this.lang.help.outdent),this.context.memo(\"help.formatPara\",this.lang.help.formatPara),this.context.memo(\"help.insertHorizontalRule\",this.lang.help.insertHorizontalRule),this.context.memo(\"help.fontName\",this.lang.help.fontName);for(var i=[\"bold\",\"italic\",\"underline\",\"strikethrough\",\"superscript\",\"subscript\",\"justifyLeft\",\"justifyCenter\",\"justifyRight\",\"justifyFull\",\"formatBlock\",\"removeFormat\",\"backColor\"],r=0,a=i.length;r<a;r++)this[i[r]]=function(t){return function(e){o.beforeCommand(),document.execCommand(t,!1,e),o.afterCommand(!0)}}(i[r]),this.context.memo(\"help.\"+i[r],this.lang.help[i[r]]);this.fontName=this.wrapCommand((function(t){return o.fontStyling(\"font-family\",f.validFontName(t))})),this.fontSize=this.wrapCommand((function(t){var e=o.currentStyle()[\"font-size-unit\"];return o.fontStyling(\"font-size\",t+e)})),this.fontSizeUnit=this.wrapCommand((function(t){var e=o.currentStyle()[\"font-size\"];return o.fontStyling(\"font-size\",e+t)}));for(var s=1;s<=6;s++)this[\"formatH\"+s]=function(t){return function(){o.formatBlock(\"H\"+t)}}(s),this.context.memo(\"help.formatH\"+s,this.lang.help[\"formatH\"+s]);this.insertParagraph=this.wrapCommand((function(){o.typing.insertParagraph(o.editable)})),this.insertOrderedList=this.wrapCommand((function(){o.bullet.insertOrderedList(o.editable)})),this.insertUnorderedList=this.wrapCommand((function(){o.bullet.insertUnorderedList(o.editable)})),this.indent=this.wrapCommand((function(){o.bullet.indent(o.editable)})),this.outdent=this.wrapCommand((function(){o.bullet.outdent(o.editable)})),this.insertNode=this.wrapCommand((function(t){o.isLimited(e()(t).text().length)||(o.getLastRange().insertNode(t),o.setLastRange(yt.createFromNodeAfter(t).select()))})),this.insertText=this.wrapCommand((function(t){if(!o.isLimited(t.length)){var e=o.getLastRange().insertNode(ht.createText(t));o.setLastRange(yt.create(e,ht.nodeLength(e)).select())}})),this.pasteHTML=this.wrapCommand((function(t){if(!o.isLimited(t.length)){t=o.context.invoke(\"codeview.purify\",t);var e=o.getLastRange().pasteHTML(t);o.setLastRange(yt.createFromNodeAfter(k.last(e)).select())}})),this.formatBlock=this.wrapCommand((function(t,e){var n=o.options.callbacks.onApplyCustomStyle;n?n.call(o,e,o.context,o.onFormatBlock):o.onFormatBlock(t,e)})),this.insertHorizontalRule=this.wrapCommand((function(){var t=o.getLastRange().insertNode(ht.create(\"HR\"));t.nextSibling&&o.setLastRange(yt.create(t.nextSibling,0).normalize().select())})),this.lineHeight=this.wrapCommand((function(t){o.style.stylePara(o.getLastRange(),{lineHeight:t})})),this.createLink=this.wrapCommand((function(t){var n=t.url,i=t.text,r=t.isNewWindow,a=t.checkProtocol,s=t.range||o.getLastRange(),l=i.length-s.toString().length;if(!(l>0&&o.isLimited(l))){var c=s.toString()!==i;\"string\"==typeof n&&(n=n.trim()),o.options.onCreateLink?n=o.options.onCreateLink(n):a&&(n=/^([A-Za-z][A-Za-z0-9+-.]*\\:|#|\\/)/.test(n)?n:o.options.defaultProtocol+n);var u=[];if(c){var d=(s=s.deleteContents()).insertNode(e()(\"<A>\"+i+\"</A>\")[0]);u.push(d)}else u=o.style.styleNodes(s,{nodeName:\"A\",expandClosestSibling:!0,onlyPartialContains:!0});e().each(u,(function(t,o){e()(o).attr(\"href\",n),r?e()(o).attr(\"target\",\"_blank\"):e()(o).removeAttr(\"target\")})),o.setLastRange(o.createRangeFromList(u).select())}})),this.color=this.wrapCommand((function(t){var e=t.foreColor,n=t.backColor;e&&document.execCommand(\"foreColor\",!1,e),n&&document.execCommand(\"backColor\",!1,n)})),this.foreColor=this.wrapCommand((function(t){document.execCommand(\"foreColor\",!1,t)})),this.insertTable=this.wrapCommand((function(t){var e=t.split(\"x\");o.getLastRange().deleteContents().insertNode(o.table.createTable(e[0],e[1],o.options))})),this.removeMedia=this.wrapCommand((function(){var t=e()(o.restoreTarget()).parent();t.closest(\"figure\").length?t.closest(\"figure\").remove():t=e()(o.restoreTarget()).detach(),o.context.triggerEvent(\"media.delete\",t,o.$editable)})),this.floatMe=this.wrapCommand((function(t){var n=e()(o.restoreTarget());n.toggleClass(\"note-float-left\",\"left\"===t),n.toggleClass(\"note-float-right\",\"right\"===t),n.css(\"float\",\"none\"===t?\"\":t)})),this.resize=this.wrapCommand((function(t){var n=e()(o.restoreTarget());0===(t=parseFloat(t))?n.css(\"width\",\"\"):n.css({width:100*t+\"%\",height:\"\"})}))}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){var t=this;this.$editable.on(\"keydown\",(function(e){if(e.keyCode===wt.code.ENTER&&t.context.triggerEvent(\"enter\",e),t.context.triggerEvent(\"keydown\",e),t.snapshot=t.history.makeSnapshot(),t.hasKeyShortCut=!1,e.isDefaultPrevented()||(t.options.shortcuts?t.hasKeyShortCut=t.handleKeyMap(e):t.preventDefaultEditableShortCuts(e)),t.isLimited(1,e)){var n=t.getLastRange();if(n.eo-n.so==0)return!1}t.setLastRange(),t.options.recordEveryKeystroke&&!1===t.hasKeyShortCut&&t.history.recordUndo()})).on(\"keyup\",(function(e){t.setLastRange(),t.context.triggerEvent(\"keyup\",e)})).on(\"focus\",(function(e){t.setLastRange(),t.context.triggerEvent(\"focus\",e)})).on(\"blur\",(function(e){t.context.triggerEvent(\"blur\",e)})).on(\"mousedown\",(function(e){t.context.triggerEvent(\"mousedown\",e)})).on(\"mouseup\",(function(e){t.setLastRange(),t.history.recordUndo(),t.context.triggerEvent(\"mouseup\",e)})).on(\"scroll\",(function(e){t.context.triggerEvent(\"scroll\",e)})).on(\"paste\",(function(e){t.setLastRange(),t.context.triggerEvent(\"paste\",e)})).on(\"input\",(function(){t.isLimited(0)&&t.snapshot&&t.history.applySnapshot(t.snapshot)})),this.$editable.attr(\"spellcheck\",this.options.spellCheck),this.$editable.attr(\"autocorrect\",this.options.spellCheck),this.options.disableGrammar&&this.$editable.attr(\"data-gramm\",!1),this.$editable.html(ht.html(this.$note)||ht.emptyPara),this.$editable.on(f.inputEventName,v.debounce((function(){t.context.triggerEvent(\"change\",t.$editable.html(),t.$editable)}),10)),this.$editable.on(\"focusin\",(function(e){t.context.triggerEvent(\"focusin\",e)})).on(\"focusout\",(function(e){t.context.triggerEvent(\"focusout\",e)})),this.options.airMode?this.options.overrideContextMenu&&this.$editor.on(\"contextmenu\",(function(e){return t.context.triggerEvent(\"contextmenu\",e),!1})):(this.options.width&&this.$editor.outerWidth(this.options.width),this.options.height&&this.$editable.outerHeight(this.options.height),this.options.maxHeight&&this.$editable.css(\"max-height\",this.options.maxHeight),this.options.minHeight&&this.$editable.css(\"min-height\",this.options.minHeight)),this.history.recordUndo(),this.setLastRange()}},{key:\"destroy\",value:function(){this.$editable.off()}},{key:\"handleKeyMap\",value:function(t){var e=this.options.keyMap[f.isMac?\"mac\":\"pc\"],n=[];t.metaKey&&n.push(\"CMD\"),t.ctrlKey&&!t.altKey&&n.push(\"CTRL\"),t.shiftKey&&n.push(\"SHIFT\");var o=wt.nameFromCode[t.keyCode];o&&n.push(o);var i=e[n.join(\"+\")];if(\"TAB\"!==o||this.options.tabDisable)if(i){if(!1!==this.context.invoke(i))return t.preventDefault(),!0}else wt.isEdit(t.keyCode)&&this.afterCommand();else this.afterCommand();return!1}},{key:\"preventDefaultEditableShortCuts\",value:function(t){(t.ctrlKey||t.metaKey)&&k.contains([66,73,85],t.keyCode)&&t.preventDefault()}},{key:\"isLimited\",value:function(t,e){return t=t||0,(void 0===e||!(wt.isMove(e.keyCode)||wt.isNavigation(e.keyCode)||e.ctrlKey||e.metaKey||k.contains([wt.code.BACKSPACE,wt.code.DELETE],e.keyCode)))&&this.options.maxTextLength>0&&this.$editable.text().length+t>this.options.maxTextLength}},{key:\"createRange\",value:function(){return this.focus(),this.setLastRange(),this.getLastRange()}},{key:\"createRangeFromList\",value:function(t){var e=yt.createFromNodeBefore(k.head(t)).getStartPoint(),n=yt.createFromNodeAfter(k.last(t)).getEndPoint();return yt.create(e.node,e.offset,n.node,n.offset)}},{key:\"setLastRange\",value:function(t){t?this.lastRange=t:(this.lastRange=yt.create(this.editable),0===e()(this.lastRange.sc).closest(\".note-editable\").length&&(this.lastRange=yt.createFromBodyElement(this.editable)))}},{key:\"getLastRange\",value:function(){return this.lastRange||this.setLastRange(),this.lastRange}},{key:\"saveRange\",value:function(t){t&&this.getLastRange().collapse().select()}},{key:\"restoreRange\",value:function(){this.lastRange&&(this.lastRange.select(),this.focus())}},{key:\"saveTarget\",value:function(t){this.$editable.data(\"target\",t)}},{key:\"clearTarget\",value:function(){this.$editable.removeData(\"target\")}},{key:\"restoreTarget\",value:function(){return this.$editable.data(\"target\")}},{key:\"currentStyle\",value:function(){var t=yt.create();return t&&(t=t.normalize()),t?this.style.current(t):this.style.fromNode(this.$editable)}},{key:\"styleFromNode\",value:function(t){return this.style.fromNode(t)}},{key:\"undo\",value:function(){this.context.triggerEvent(\"before.command\",this.$editable.html()),this.history.undo(),this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}},{key:\"commit\",value:function(){this.context.triggerEvent(\"before.command\",this.$editable.html()),this.history.commit(),this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}},{key:\"redo\",value:function(){this.context.triggerEvent(\"before.command\",this.$editable.html()),this.history.redo(),this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}},{key:\"beforeCommand\",value:function(){this.context.triggerEvent(\"before.command\",this.$editable.html()),document.execCommand(\"styleWithCSS\",!1,this.options.styleWithCSS),this.focus()}},{key:\"afterCommand\",value:function(t){this.normalizeContent(),this.history.recordUndo(),t||this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}},{key:\"tab\",value:function(){var t=this.getLastRange();if(t.isCollapsed()&&t.isOnCell())this.table.tab(t);else{if(0===this.options.tabSize)return!1;this.isLimited(this.options.tabSize)||(this.beforeCommand(),this.typing.insertTab(t,this.options.tabSize),this.afterCommand())}}},{key:\"untab\",value:function(){var t=this.getLastRange();if(t.isCollapsed()&&t.isOnCell())this.table.tab(t,!0);else if(0===this.options.tabSize)return!1}},{key:\"wrapCommand\",value:function(t){return function(){this.beforeCommand(),t.apply(this,arguments),this.afterCommand()}}},{key:\"insertImage\",value:function(t,n){var o,i=this;return(o=t,e().Deferred((function(t){var n=e()(\"<img>\");n.one(\"load\",(function(){n.off(\"error abort\"),t.resolve(n)})).one(\"error abort\",(function(){n.off(\"load\").detach(),t.reject(n)})).css({display:\"none\"}).appendTo(document.body).attr(\"src\",o)})).promise()).then((function(t){i.beforeCommand(),\"function\"==typeof n?n(t):(\"string\"==typeof n&&t.attr(\"data-filename\",n),t.css(\"width\",Math.min(i.$editable.width(),t.width()))),t.show(),i.getLastRange().insertNode(t[0]),i.setLastRange(yt.createFromNodeAfter(t[0]).select()),i.afterCommand()})).fail((function(t){i.context.triggerEvent(\"image.upload.error\",t)}))}},{key:\"insertImagesAsDataURL\",value:function(t){var n=this;e().each(t,(function(t,o){var i=o.name;n.options.maximumImageFileSize&&n.options.maximumImageFileSize<o.size?n.context.triggerEvent(\"image.upload.error\",n.lang.image.maximumFileSizeError):function(t){return e().Deferred((function(n){e().extend(new FileReader,{onload:function(t){var e=t.target.result;n.resolve(e)},onerror:function(t){n.reject(t)}}).readAsDataURL(t)})).promise()}(o).then((function(t){return n.insertImage(t,i)})).fail((function(){n.context.triggerEvent(\"image.upload.error\")}))}))}},{key:\"insertImagesOrCallback\",value:function(t){this.options.callbacks.onImageUpload?this.context.triggerEvent(\"image.upload\",t):this.insertImagesAsDataURL(t)}},{key:\"getSelectedText\",value:function(){var t=this.getLastRange();return t.isOnAnchor()&&(t=yt.createFromNode(ht.ancestor(t.sc,ht.isAnchor))),t.toString()}},{key:\"onFormatBlock\",value:function(t,n){if(document.execCommand(\"FormatBlock\",!1,f.isMSIE?\"<\"+t+\">\":t),n&&n.length&&(n[0].tagName.toUpperCase()!==t.toUpperCase()&&(n=n.find(t)),n&&n.length)){var o=this.createRange(),i=e()([o.sc,o.ec]).closest(t);i.removeClass();var r=n[0].className||\"\";r&&i.addClass(r)}}},{key:\"formatPara\",value:function(){this.formatBlock(\"P\")}},{key:\"fontStyling\",value:function(t,n){var o=this.getLastRange();if(\"\"!==o){var i=this.style.styleNodes(o);if(this.$editor.find(\".note-status-output\").html(\"\"),e()(i).css(t,n),o.isCollapsed()){var r=k.head(i);r&&!ht.nodeLength(r)&&(r.innerHTML=ht.ZERO_WIDTH_NBSP_CHAR,yt.createFromNode(r.firstChild).select(),this.setLastRange(),this.$editable.data(\"bogus\",r))}else this.setLastRange(this.createRangeFromList(i).select())}else{var a=e().now();this.$editor.find(\".note-status-output\").html('<div id=\"note-status-output-'+a+'\" class=\"alert alert-info\">'+this.lang.output.noSelection+\"</div>\"),setTimeout((function(){e()(\"#note-status-output-\"+a).remove()}),5e3)}}},{key:\"unlink\",value:function(){var t=this.getLastRange();if(t.isOnAnchor()){var e=ht.ancestor(t.sc,ht.isAnchor);(t=yt.createFromNode(e)).select(),this.setLastRange(),this.beforeCommand(),document.execCommand(\"unlink\"),this.afterCommand()}}},{key:\"getLinkInfo\",value:function(){var t=this.getLastRange().expand(ht.isAnchor),n=e()(k.head(t.nodes(ht.isAnchor))),o={range:t,text:t.toString(),url:n.length?n.attr(\"href\"):\"\"};return n.length&&(o.isNewWindow=\"_blank\"===n.attr(\"target\")),o}},{key:\"addRow\",value:function(t){var e=this.getLastRange(this.$editable);e.isCollapsed()&&e.isOnCell()&&(this.beforeCommand(),this.table.addRow(e,t),this.afterCommand())}},{key:\"addCol\",value:function(t){var e=this.getLastRange(this.$editable);e.isCollapsed()&&e.isOnCell()&&(this.beforeCommand(),this.table.addCol(e,t),this.afterCommand())}},{key:\"deleteRow\",value:function(){var t=this.getLastRange(this.$editable);t.isCollapsed()&&t.isOnCell()&&(this.beforeCommand(),this.table.deleteRow(t),this.afterCommand())}},{key:\"deleteCol\",value:function(){var t=this.getLastRange(this.$editable);t.isCollapsed()&&t.isOnCell()&&(this.beforeCommand(),this.table.deleteCol(t),this.afterCommand())}},{key:\"deleteTable\",value:function(){var t=this.getLastRange(this.$editable);t.isCollapsed()&&t.isOnCell()&&(this.beforeCommand(),this.table.deleteTable(t),this.afterCommand())}},{key:\"resizeTo\",value:function(t,e,n){var o;if(n){var i=t.y/t.x,r=e.data(\"ratio\");o={width:r>i?t.x:t.y/r,height:r>i?t.x*r:t.y}}else o={width:t.x,height:t.y};e.css(o)}},{key:\"hasFocus\",value:function(){return this.$editable.is(\":focus\")}},{key:\"focus\",value:function(){this.hasFocus()||this.$editable.focus()}},{key:\"isEmpty\",value:function(){return ht.isEmpty(this.$editable[0])||ht.emptyPara===this.$editable.html()}},{key:\"empty\",value:function(){this.context.invoke(\"code\",ht.emptyPara)}},{key:\"normalizeContent\",value:function(){this.$editable[0].normalize()}}],o&&At(n.prototype,o),i&&At(n,i),t}();function Dt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Ht=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.$editable=e.layoutInfo.editable}var e,n,o;return e=t,(n=[{key:\"initialize\",value:function(){this.$editable.on(\"paste\",this.pasteByEvent.bind(this))}},{key:\"pasteByEvent\",value:function(t){var e=this,n=t.originalEvent.clipboardData;if(n&&n.items&&n.items.length){var o=n.items.length>1?n.items[1]:k.head(n.items);\"file\"===o.kind&&-1!==o.type.indexOf(\"image/\")?(this.context.invoke(\"editor.insertImagesOrCallback\",[o.getAsFile()]),t.preventDefault()):\"string\"===o.kind&&this.context.invoke(\"editor.isLimited\",n.getData(\"Text\").length)&&t.preventDefault()}else if(window.clipboardData){var i=window.clipboardData.getData(\"text\");this.context.invoke(\"editor.isLimited\",i.length)&&t.preventDefault()}setTimeout((function(){e.context.invoke(\"editor.afterCommand\")}),10)}}])&&Dt(e.prototype,n),o&&Dt(e,o),t}();function zt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Bt=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$eventListener=e()(document),this.$editor=n.layoutInfo.editor,this.$editable=n.layoutInfo.editable,this.options=n.options,this.lang=this.options.langInfo,this.documentEventHandlers={},this.$dropzone=e()(['<div class=\"note-dropzone\">','<div class=\"note-dropzone-message\"></div>',\"</div>\"].join(\"\")).prependTo(this.$editor)}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){this.options.disableDragAndDrop?(this.documentEventHandlers.onDrop=function(t){t.preventDefault()},this.$eventListener=this.$dropzone,this.$eventListener.on(\"drop\",this.documentEventHandlers.onDrop)):this.attachDragAndDropEvent()}},{key:\"attachDragAndDropEvent\",value:function(){var t=this,n=e()(),o=this.$dropzone.find(\".note-dropzone-message\");this.documentEventHandlers.onDragenter=function(e){var i=t.context.invoke(\"codeview.isActivated\"),r=t.$editor.width()>0&&t.$editor.height()>0;i||n.length||!r||(t.$editor.addClass(\"dragover\"),t.$dropzone.width(t.$editor.width()),t.$dropzone.height(t.$editor.height()),o.text(t.lang.image.dragImageHere)),n=n.add(e.target)},this.documentEventHandlers.onDragleave=function(o){(n=n.not(o.target)).length&&\"BODY\"!==o.target.nodeName||(n=e()(),t.$editor.removeClass(\"dragover\"))},this.documentEventHandlers.onDrop=function(){n=e()(),t.$editor.removeClass(\"dragover\")},this.$eventListener.on(\"dragenter\",this.documentEventHandlers.onDragenter).on(\"dragleave\",this.documentEventHandlers.onDragleave).on(\"drop\",this.documentEventHandlers.onDrop),this.$dropzone.on(\"dragenter\",(function(){t.$dropzone.addClass(\"hover\"),o.text(t.lang.image.dropImage)})).on(\"dragleave\",(function(){t.$dropzone.removeClass(\"hover\"),o.text(t.lang.image.dragImageHere)})),this.$dropzone.on(\"drop\",(function(n){var o=n.originalEvent.dataTransfer;n.preventDefault(),o&&o.files&&o.files.length?(t.$editable.focus(),t.context.invoke(\"editor.insertImagesOrCallback\",o.files)):e().each(o.types,(function(n,i){if(!(i.toLowerCase().indexOf(\"_moz_\")>-1)){var r=o.getData(i);i.toLowerCase().indexOf(\"text\")>-1?t.context.invoke(\"editor.pasteHTML\",r):e()(r).each((function(e,n){t.context.invoke(\"editor.insertNode\",n)}))}}))})).on(\"dragover\",!1)}},{key:\"destroy\",value:function(){var t=this;Object.keys(this.documentEventHandlers).forEach((function(e){t.$eventListener.off(e.substr(2).toLowerCase(),t.documentEventHandlers[e])})),this.documentEventHandlers={}}}],o&&zt(n.prototype,o),i&&zt(n,i),t}();function Mt(t,e){var n=\"undefined\"!=typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"];if(!n){if(Array.isArray(t)||(n=function(t,e){if(!t)return;if(\"string\"==typeof t)return Ot(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);\"Object\"===n&&t.constructor&&(n=t.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(t);if(\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Ot(t,e)}(t))||e&&t&&\"number\"==typeof t.length){n&&(t=n);var o=0,i=function(){};return{s:i,n:function(){return o>=t.length?{done:!0}:{done:!1,value:t[o++]}},e:function(t){throw t},f:i}}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}var r,a=!0,s=!1;return{s:function(){n=n.call(t)},n:function(){var t=n.next();return a=t.done,t},e:function(t){s=!0,r=t},f:function(){try{a||null==n.return||n.return()}finally{if(s)throw r}}}}function Ot(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,o=new Array(e);n<e;n++)o[n]=t[n];return o}function Ut(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var jt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.$editor=e.layoutInfo.editor,this.$editable=e.layoutInfo.editable,this.$codable=e.layoutInfo.codable,this.options=e.options,this.CodeMirrorConstructor=window.CodeMirror,this.options.codemirror.CodeMirrorConstructor&&(this.CodeMirrorConstructor=this.options.codemirror.CodeMirrorConstructor)}var e,n,o;return e=t,n=[{key:\"sync\",value:function(t){var e=this.isActivated(),n=this.CodeMirrorConstructor;e&&(t?n?this.$codable.data(\"cmEditor\").getDoc().setValue(t):this.$codable.val(t):n&&this.$codable.data(\"cmEditor\").save())}},{key:\"initialize\",value:function(){var t=this;this.$codable.on(\"keyup\",(function(e){e.keyCode===wt.code.ESCAPE&&t.deactivate()}))}},{key:\"isActivated\",value:function(){return this.$editor.hasClass(\"codeview\")}},{key:\"toggle\",value:function(){this.isActivated()?this.deactivate():this.activate(),this.context.triggerEvent(\"codeview.toggled\")}},{key:\"purify\",value:function(t){if(this.options.codeviewFilter&&(t=t.replace(this.options.codeviewFilterRegex,\"\"),this.options.codeviewIframeFilter)){var e=this.options.codeviewIframeWhitelistSrc.concat(this.options.codeviewIframeWhitelistSrcBase);t=t.replace(/(<iframe.*?>.*?(?:<\\/iframe>)?)/gi,(function(t){if(/<.+src(?==?('|\"|\\s)?)[\\s\\S]+src(?=('|\"|\\s)?)[^>]*?>/i.test(t))return\"\";var n,o=Mt(e);try{for(o.s();!(n=o.n()).done;){var i=n.value;if(new RegExp('src=\"(https?:)?//'+i.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\")+'/(.+)\"').test(t))return t}}catch(t){o.e(t)}finally{o.f()}return\"\"}))}return t}},{key:\"activate\",value:function(){var t=this,e=this.CodeMirrorConstructor;if(this.$codable.val(ht.html(this.$editable,this.options.prettifyHtml)),this.$codable.height(this.$editable.height()),this.context.invoke(\"toolbar.updateCodeview\",!0),this.context.invoke(\"airPopover.updateCodeview\",!0),this.$editor.addClass(\"codeview\"),this.$codable.focus(),e){var n=e.fromTextArea(this.$codable[0],this.options.codemirror);if(this.options.codemirror.tern){var o=new e.TernServer(this.options.codemirror.tern);n.ternServer=o,n.on(\"cursorActivity\",(function(t){o.updateArgHints(t)}))}n.on(\"blur\",(function(e){t.context.triggerEvent(\"blur.codeview\",n.getValue(),e)})),n.on(\"change\",(function(){t.context.triggerEvent(\"change.codeview\",n.getValue(),n)})),n.setSize(null,this.$editable.outerHeight()),this.$codable.data(\"cmEditor\",n)}else this.$codable.on(\"blur\",(function(e){t.context.triggerEvent(\"blur.codeview\",t.$codable.val(),e)})),this.$codable.on(\"input\",(function(){t.context.triggerEvent(\"change.codeview\",t.$codable.val(),t.$codable)}))}},{key:\"deactivate\",value:function(){if(this.CodeMirrorConstructor){var t=this.$codable.data(\"cmEditor\");this.$codable.val(t.getValue()),t.toTextArea()}var e=this.purify(ht.value(this.$codable,this.options.prettifyHtml)||ht.emptyPara),n=this.$editable.html()!==e;this.$editable.html(e),this.$editable.height(this.options.height?this.$codable.height():\"auto\"),this.$editor.removeClass(\"codeview\"),n&&this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable),this.$editable.focus(),this.context.invoke(\"toolbar.updateCodeview\",!1),this.context.invoke(\"airPopover.updateCodeview\",!1)}},{key:\"destroy\",value:function(){this.isActivated()&&this.deactivate()}}],n&&Ut(e.prototype,n),o&&Ut(e,o),t}();function Wt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Kt=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.$document=e()(document),this.$statusbar=n.layoutInfo.statusbar,this.$editable=n.layoutInfo.editable,this.$codable=n.layoutInfo.codable,this.options=n.options}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){var t=this;this.options.airMode||this.options.disableResizeEditor?this.destroy():this.$statusbar.on(\"mousedown\",(function(e){e.preventDefault(),e.stopPropagation();var n=t.$editable.offset().top-t.$document.scrollTop(),o=t.$codable.offset().top-t.$document.scrollTop(),i=function(e){var i=e.clientY-(n+24),r=e.clientY-(o+24);i=t.options.minheight>0?Math.max(i,t.options.minheight):i,i=t.options.maxHeight>0?Math.min(i,t.options.maxHeight):i,r=t.options.minheight>0?Math.max(r,t.options.minheight):r,r=t.options.maxHeight>0?Math.min(r,t.options.maxHeight):r,t.$editable.height(i),t.$codable.height(r)};t.$document.on(\"mousemove\",i).one(\"mouseup\",(function(){t.$document.off(\"mousemove\",i)}))}))}},{key:\"destroy\",value:function(){this.$statusbar.off(),this.$statusbar.addClass(\"locked\")}}])&&Wt(n.prototype,o),i&&Wt(n,i),t}();function Vt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var qt=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$editor=n.layoutInfo.editor,this.$toolbar=n.layoutInfo.toolbar,this.$editable=n.layoutInfo.editable,this.$codable=n.layoutInfo.codable,this.$window=e()(window),this.$scrollbar=e()(\"html, body\"),this.scrollbarClassName=\"note-fullscreen-body\",this.onResize=function(){o.resizeTo({h:o.$window.height()-o.$toolbar.outerHeight()})}}var n,o,i;return n=t,(o=[{key:\"resizeTo\",value:function(t){this.$editable.css(\"height\",t.h),this.$codable.css(\"height\",t.h),this.$codable.data(\"cmeditor\")&&this.$codable.data(\"cmeditor\").setsize(null,t.h)}},{key:\"toggle\",value:function(){this.$editor.toggleClass(\"fullscreen\");var t=this.isFullscreen();this.$scrollbar.toggleClass(this.scrollbarClassName,t),t?(this.$editable.data(\"orgHeight\",this.$editable.css(\"height\")),this.$editable.data(\"orgMaxHeight\",this.$editable.css(\"maxHeight\")),this.$editable.css(\"maxHeight\",\"\"),this.$window.on(\"resize\",this.onResize).trigger(\"resize\")):(this.$window.off(\"resize\",this.onResize),this.resizeTo({h:this.$editable.data(\"orgHeight\")}),this.$editable.css(\"maxHeight\",this.$editable.css(\"orgMaxHeight\"))),this.context.invoke(\"toolbar.updateFullscreen\",t)}},{key:\"isFullscreen\",value:function(){return this.$editor.hasClass(\"fullscreen\")}},{key:\"destroy\",value:function(){this.$scrollbar.removeClass(this.scrollbarClassName)}}])&&Vt(n.prototype,o),i&&Vt(n,i),t}();function _t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Gt=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$document=e()(document),this.$editingArea=n.layoutInfo.editingArea,this.options=n.options,this.lang=this.options.langInfo,this.events={\"summernote.mousedown\":function(t,e){o.update(e.target,e)&&e.preventDefault()},\"summernote.keyup summernote.scroll summernote.change summernote.dialog.shown\":function(){o.update()},\"summernote.disable summernote.blur\":function(){o.hide()},\"summernote.codeview.toggled\":function(){o.update()}}}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){var t=this;this.$handle=e()(['<div class=\"note-handle\">','<div class=\"note-control-selection\">','<div class=\"note-control-selection-bg\"></div>','<div class=\"note-control-holder note-control-nw\"></div>','<div class=\"note-control-holder note-control-ne\"></div>','<div class=\"note-control-holder note-control-sw\"></div>','<div class=\"',this.options.disableResizeImage?\"note-control-holder\":\"note-control-sizing\",' note-control-se\"></div>',this.options.disableResizeImage?\"\":'<div class=\"note-control-selection-info\"></div>',\"</div>\",\"</div>\"].join(\"\")).prependTo(this.$editingArea),this.$handle.on(\"mousedown\",(function(e){if(ht.isControlSizing(e.target)){e.preventDefault(),e.stopPropagation();var n=t.$handle.find(\".note-control-selection\").data(\"target\"),o=n.offset(),i=t.$document.scrollTop(),r=function(e){t.context.invoke(\"editor.resizeTo\",{x:e.clientX-o.left,y:e.clientY-(o.top-i)},n,!e.shiftKey),t.update(n[0],e)};t.$document.on(\"mousemove\",r).one(\"mouseup\",(function(e){e.preventDefault(),t.$document.off(\"mousemove\",r),t.context.invoke(\"editor.afterCommand\")})),n.data(\"ratio\")||n.data(\"ratio\",n.height()/n.width())}})),this.$handle.on(\"wheel\",(function(e){e.preventDefault(),t.update()}))}},{key:\"destroy\",value:function(){this.$handle.remove()}},{key:\"update\",value:function(t,n){if(this.context.isDisabled())return!1;var o=ht.isImg(t),i=this.$handle.find(\".note-control-selection\");if(this.context.invoke(\"imagePopover.update\",t,n),o){var r=e()(t),a=r.position(),s={left:a.left+parseInt(r.css(\"marginLeft\"),10),top:a.top+parseInt(r.css(\"marginTop\"),10)},l={w:r.outerWidth(!1),h:r.outerHeight(!1)};i.css({display:\"block\",left:s.left,top:s.top,width:l.w,height:l.h}).data(\"target\",r);var c=new Image;c.src=r.attr(\"src\");var u=l.w+\"x\"+l.h+\" (\"+this.lang.image.original+\": \"+c.width+\"x\"+c.height+\")\";i.find(\".note-control-selection-info\").text(u),this.context.invoke(\"editor.saveTarget\",t)}else this.hide();return o}},{key:\"hide\",value:function(){this.context.invoke(\"editor.clearTarget\"),this.$handle.children().hide()}}],o&&_t(n.prototype,o),i&&_t(n,i),t}();function Yt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Zt=/^([A-Za-z][A-Za-z0-9+-.]*\\:[\\/]{2}|tel:|mailto:[A-Z0-9._%+-]+@|xmpp:[A-Z0-9._%+-]+@)?(www\\.)?(.+)$/i,Qt=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.options=e.options,this.events={\"summernote.keyup\":function(t,e){e.isDefaultPrevented()||n.handleKeyup(e)},\"summernote.keydown\":function(t,e){n.handleKeydown(e)}}}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){this.lastWordRange=null}},{key:\"destroy\",value:function(){this.lastWordRange=null}},{key:\"replace\",value:function(){if(this.lastWordRange){var t=this.lastWordRange.toString(),n=t.match(Zt);if(n&&(n[1]||n[2])){var o=n[1]?t:\"http://\"+t,i=this.options.showDomainOnlyForAutolink?t.replace(/^(?:https?:\\/\\/)?(?:tel?:?)?(?:mailto?:?)?(?:xmpp?:?)?(?:www\\.)?/i,\"\").split(\"/\")[0]:t,r=e()(\"<a></a>\").html(i).attr(\"href\",o)[0];this.context.options.linkTargetBlank&&e()(r).attr(\"target\",\"_blank\"),this.lastWordRange.insertNode(r),this.lastWordRange=null,this.context.invoke(\"editor.focus\")}}}},{key:\"handleKeydown\",value:function(t){if(k.contains([wt.code.ENTER,wt.code.SPACE],t.keyCode)){var e=this.context.invoke(\"editor.createRange\").getWordRange();this.lastWordRange=e}}},{key:\"handleKeyup\",value:function(t){k.contains([wt.code.ENTER,wt.code.SPACE],t.keyCode)&&this.replace()}}])&&Yt(n.prototype,o),i&&Yt(n,i),t}();function Xt(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Jt=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.$note=e.layoutInfo.note,this.events={\"summernote.change\":function(){n.$note.val(e.invoke(\"code\"))}}}var e,n,o;return e=t,(n=[{key:\"shouldInitialize\",value:function(){return ht.isTextarea(this.$note[0])}}])&&Xt(e.prototype,n),o&&Xt(e,o),t}();function te(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ee=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.options=e.options.replace||{},this.keys=[wt.code.ENTER,wt.code.SPACE,wt.code.PERIOD,wt.code.COMMA,wt.code.SEMICOLON,wt.code.SLASH],this.previousKeydownCode=null,this.events={\"summernote.keyup\":function(t,e){e.isDefaultPrevented()||n.handleKeyup(e)},\"summernote.keydown\":function(t,e){n.handleKeydown(e)}}}var e,n,o;return e=t,(n=[{key:\"shouldInitialize\",value:function(){return!!this.options.match}},{key:\"initialize\",value:function(){this.lastWord=null}},{key:\"destroy\",value:function(){this.lastWord=null}},{key:\"replace\",value:function(){if(this.lastWord){var t=this,e=this.lastWord.toString();this.options.match(e,(function(e){if(e){var n=\"\";if(\"string\"==typeof e?n=ht.createText(e):e instanceof jQuery?n=e[0]:e instanceof Node&&(n=e),!n)return;t.lastWord.insertNode(n),t.lastWord=null,t.context.invoke(\"editor.focus\")}}))}}},{key:\"handleKeydown\",value:function(t){if(this.previousKeydownCode&&k.contains(this.keys,this.previousKeydownCode))this.previousKeydownCode=t.keyCode;else{if(k.contains(this.keys,t.keyCode)){var e=this.context.invoke(\"editor.createRange\").getWordRange();this.lastWord=e}this.previousKeydownCode=t.keyCode}}},{key:\"handleKeyup\",value:function(t){k.contains(this.keys,t.keyCode)&&this.replace()}}])&&te(e.prototype,n),o&&te(e,o),t}();function ne(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var oe=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=e,this.$editingArea=e.layoutInfo.editingArea,this.options=e.options,!0===this.options.inheritPlaceholder&&(this.options.placeholder=this.context.$note.attr(\"placeholder\")||this.options.placeholder),this.events={\"summernote.init summernote.change\":function(){n.update()},\"summernote.codeview.toggled\":function(){n.update()}}}var n,o,i;return n=t,(o=[{key:\"shouldInitialize\",value:function(){return!!this.options.placeholder}},{key:\"initialize\",value:function(){var t=this;this.$placeholder=e()('<div class=\"note-placeholder\"></div>'),this.$placeholder.on(\"click\",(function(){t.context.invoke(\"focus\")})).html(this.options.placeholder).prependTo(this.$editingArea),this.update()}},{key:\"destroy\",value:function(){this.$placeholder.remove()}},{key:\"update\",value:function(){var t=!this.context.invoke(\"codeview.isActivated\")&&this.context.invoke(\"editor.isEmpty\");this.$placeholder.toggle(t)}}])&&ne(n.prototype,o),i&&ne(n,i),t}();function ie(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var re=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.ui=e().summernote.ui,this.context=n,this.$toolbar=n.layoutInfo.toolbar,this.options=n.options,this.lang=this.options.langInfo,this.invertedKeyMap=v.invertObject(this.options.keyMap[f.isMac?\"mac\":\"pc\"])}var n,o,i;return n=t,o=[{key:\"representShortcut\",value:function(t){var e=this.invertedKeyMap[t];return this.options.shortcuts&&e?(f.isMac&&(e=e.replace(\"CMD\",\"⌘\").replace(\"SHIFT\",\"⇧\")),\" (\"+(e=e.replace(\"BACKSLASH\",\"\\\\\").replace(\"SLASH\",\"/\").replace(\"LEFTBRACKET\",\"[\").replace(\"RIGHTBRACKET\",\"]\"))+\")\"):\"\"}},{key:\"button\",value:function(t){return!this.options.tooltip&&t.tooltip&&delete t.tooltip,t.container=this.options.container,this.ui.button(t)}},{key:\"initialize\",value:function(){this.addToolbarButtons(),this.addImagePopoverButtons(),this.addLinkPopoverButtons(),this.addTablePopoverButtons(),this.fontInstalledMap={}}},{key:\"destroy\",value:function(){delete this.fontInstalledMap}},{key:\"isFontInstalled\",value:function(t){return Object.prototype.hasOwnProperty.call(this.fontInstalledMap,t)||(this.fontInstalledMap[t]=f.isFontInstalled(t)||k.contains(this.options.fontNamesIgnoreCheck,t)),this.fontInstalledMap[t]}},{key:\"isFontDeservedToAdd\",value:function(t){return\"\"!==(t=t.toLowerCase())&&this.isFontInstalled(t)&&-1===f.genericFontFamilies.indexOf(t)}},{key:\"colorPalette\",value:function(t,n,o,i){var r=this;return this.ui.buttonGroup({className:\"note-color \"+t,children:[this.button({className:\"note-current-color-button\",contents:this.ui.icon(this.options.icons.font+\" note-recent-color\"),tooltip:n,click:function(t){var n=e()(t.currentTarget);o&&i?r.context.invoke(\"editor.color\",{backColor:n.attr(\"data-backColor\"),foreColor:n.attr(\"data-foreColor\")}):o?r.context.invoke(\"editor.color\",{backColor:n.attr(\"data-backColor\")}):i&&r.context.invoke(\"editor.color\",{foreColor:n.attr(\"data-foreColor\")})},callback:function(t){var e=t.find(\".note-recent-color\");o&&(e.css(\"background-color\",r.options.colorButton.backColor),t.attr(\"data-backColor\",r.options.colorButton.backColor)),i?(e.css(\"color\",r.options.colorButton.foreColor),t.attr(\"data-foreColor\",r.options.colorButton.foreColor)):e.css(\"color\",\"transparent\")}}),this.button({className:\"dropdown-toggle\",contents:this.ui.dropdownButtonContents(\"\",this.options),tooltip:this.lang.color.more,data:{toggle:\"dropdown\"}}),this.ui.dropdown({items:(o?['<div class=\"note-palette\">','<div class=\"note-palette-title\">'+this.lang.color.background+\"</div>\",\"<div>\",'<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"backColor\" data-value=\"transparent\">',this.lang.color.transparent,\"</button>\",\"</div>\",'<div class=\"note-holder\" data-event=\"backColor\">\\x3c!-- back colors --\\x3e</div>',\"<div>\",'<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"backColorPicker-'+this.options.id+'\">',this.lang.color.cpSelect,\"</button>\",'<input type=\"color\" id=\"backColorPicker-'+this.options.id+'\" class=\"note-btn note-color-select-btn\" value=\"'+this.options.colorButton.backColor+'\" data-event=\"backColorPalette-'+this.options.id+'\">',\"</div>\",'<div class=\"note-holder-custom\" id=\"backColorPalette-'+this.options.id+'\" data-event=\"backColor\"></div>',\"</div>\"].join(\"\"):\"\")+(i?['<div class=\"note-palette\">','<div class=\"note-palette-title\">'+this.lang.color.foreground+\"</div>\",\"<div>\",'<button type=\"button\" class=\"note-color-reset btn btn-light btn-default\" data-event=\"removeFormat\" data-value=\"foreColor\">',this.lang.color.resetToDefault,\"</button>\",\"</div>\",'<div class=\"note-holder\" data-event=\"foreColor\">\\x3c!-- fore colors --\\x3e</div>',\"<div>\",'<button type=\"button\" class=\"note-color-select btn btn-light btn-default\" data-event=\"openPalette\" data-value=\"foreColorPicker-'+this.options.id+'\">',this.lang.color.cpSelect,\"</button>\",'<input type=\"color\" id=\"foreColorPicker-'+this.options.id+'\" class=\"note-btn note-color-select-btn\" value=\"'+this.options.colorButton.foreColor+'\" data-event=\"foreColorPalette-'+this.options.id+'\">',\"</div>\",'<div class=\"note-holder-custom\" id=\"foreColorPalette-'+this.options.id+'\" data-event=\"foreColor\"></div>',\"</div>\"].join(\"\"):\"\"),callback:function(t){t.find(\".note-holder\").each((function(t,n){var o=e()(n);o.append(r.ui.palette({colors:r.options.colors,colorsName:r.options.colorsName,eventName:o.data(\"event\"),container:r.options.container,tooltip:r.options.tooltip}).render())}));var n=[[\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\",\"#FFFFFF\"]];t.find(\".note-holder-custom\").each((function(t,o){var i=e()(o);i.append(r.ui.palette({colors:n,colorsName:n,eventName:i.data(\"event\"),container:r.options.container,tooltip:r.options.tooltip}).render())})),t.find(\"input[type=color]\").each((function(n,o){e()(o).change((function(){var n=t.find(\"#\"+e()(this).data(\"event\")).find(\".note-color-btn\").first(),o=this.value.toUpperCase();n.css(\"background-color\",o).attr(\"aria-label\",o).attr(\"data-value\",o).attr(\"data-original-title\",o),n.click()}))}))},click:function(n){n.stopPropagation();var o=e()(\".\"+t).find(\".note-dropdown-menu\"),i=e()(n.target),a=i.data(\"event\"),s=i.attr(\"data-value\");if(\"openPalette\"===a){var l=o.find(\"#\"+s),c=e()(o.find(\"#\"+l.data(\"event\")).find(\".note-color-row\")[0]),u=c.find(\".note-color-btn\").last().detach(),d=l.val();u.css(\"background-color\",d).attr(\"aria-label\",d).attr(\"data-value\",d).attr(\"data-original-title\",d),c.prepend(u),l.click()}else{if(k.contains([\"backColor\",\"foreColor\"],a)){var h=\"backColor\"===a?\"background-color\":\"color\",f=i.closest(\".note-color\").find(\".note-recent-color\"),p=i.closest(\".note-color\").find(\".note-current-color-button\");f.css(h,s),p.attr(\"data-\"+a,s)}r.context.invoke(\"editor.\"+a,s)}}})]}).render()}},{key:\"addToolbarButtons\",value:function(){var t=this;this.context.memo(\"button.style\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents(t.ui.icon(t.options.icons.magic),t.options),tooltip:t.lang.style.style,data:{toggle:\"dropdown\"}}),t.ui.dropdown({className:\"dropdown-style\",items:t.options.styleTags,title:t.lang.style.style,template:function(e){\"string\"==typeof e&&(e={tag:e,title:Object.prototype.hasOwnProperty.call(t.lang.style,e)?t.lang.style[e]:e});var n=e.tag,o=e.title;return\"<\"+n+(e.style?' style=\"'+e.style+'\" ':\"\")+(e.className?' class=\"'+e.className+'\"':\"\")+\">\"+o+\"</\"+n+\">\"},click:t.context.createInvokeHandler(\"editor.formatBlock\")})]).render()}));for(var n=function(e,n){var o=t.options.styleTags[e];t.context.memo(\"button.style.\"+o,(function(){return t.button({className:\"note-btn-style-\"+o,contents:'<div data-value=\"'+o+'\">'+o.toUpperCase()+\"</div>\",tooltip:t.lang.style[o],click:t.context.createInvokeHandler(\"editor.formatBlock\")}).render()}))},o=0,i=this.options.styleTags.length;o<i;o++)n(o);this.context.memo(\"button.bold\",(function(){return t.button({className:\"note-btn-bold\",contents:t.ui.icon(t.options.icons.bold),tooltip:t.lang.font.bold+t.representShortcut(\"bold\"),click:t.context.createInvokeHandlerAndUpdateState(\"editor.bold\")}).render()})),this.context.memo(\"button.italic\",(function(){return t.button({className:\"note-btn-italic\",contents:t.ui.icon(t.options.icons.italic),tooltip:t.lang.font.italic+t.representShortcut(\"italic\"),click:t.context.createInvokeHandlerAndUpdateState(\"editor.italic\")}).render()})),this.context.memo(\"button.underline\",(function(){return t.button({className:\"note-btn-underline\",contents:t.ui.icon(t.options.icons.underline),tooltip:t.lang.font.underline+t.representShortcut(\"underline\"),click:t.context.createInvokeHandlerAndUpdateState(\"editor.underline\")}).render()})),this.context.memo(\"button.clear\",(function(){return t.button({contents:t.ui.icon(t.options.icons.eraser),tooltip:t.lang.font.clear+t.representShortcut(\"removeFormat\"),click:t.context.createInvokeHandler(\"editor.removeFormat\")}).render()})),this.context.memo(\"button.strikethrough\",(function(){return t.button({className:\"note-btn-strikethrough\",contents:t.ui.icon(t.options.icons.strikethrough),tooltip:t.lang.font.strikethrough+t.representShortcut(\"strikethrough\"),click:t.context.createInvokeHandlerAndUpdateState(\"editor.strikethrough\")}).render()})),this.context.memo(\"button.superscript\",(function(){return t.button({className:\"note-btn-superscript\",contents:t.ui.icon(t.options.icons.superscript),tooltip:t.lang.font.superscript,click:t.context.createInvokeHandlerAndUpdateState(\"editor.superscript\")}).render()})),this.context.memo(\"button.subscript\",(function(){return t.button({className:\"note-btn-subscript\",contents:t.ui.icon(t.options.icons.subscript),tooltip:t.lang.font.subscript,click:t.context.createInvokeHandlerAndUpdateState(\"editor.subscript\")}).render()})),this.context.memo(\"button.fontname\",(function(){var n=t.context.invoke(\"editor.currentStyle\");return t.options.addDefaultFonts&&e().each(n[\"font-family\"].split(\",\"),(function(e,n){n=n.trim().replace(/['\"]+/g,\"\"),t.isFontDeservedToAdd(n)&&-1===t.options.fontNames.indexOf(n)&&t.options.fontNames.push(n)})),t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents('<span class=\"note-current-fontname\"></span>',t.options),tooltip:t.lang.font.name,data:{toggle:\"dropdown\"}}),t.ui.dropdownCheck({className:\"dropdown-fontname\",checkClassName:t.options.icons.menuCheck,items:t.options.fontNames.filter(t.isFontInstalled.bind(t)),title:t.lang.font.name,template:function(t){return'<span style=\"font-family: '+f.validFontName(t)+'\">'+t+\"</span>\"},click:t.context.createInvokeHandlerAndUpdateState(\"editor.fontName\")})]).render()})),this.context.memo(\"button.fontsize\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents('<span class=\"note-current-fontsize\"></span>',t.options),tooltip:t.lang.font.size,data:{toggle:\"dropdown\"}}),t.ui.dropdownCheck({className:\"dropdown-fontsize\",checkClassName:t.options.icons.menuCheck,items:t.options.fontSizes,title:t.lang.font.size,click:t.context.createInvokeHandlerAndUpdateState(\"editor.fontSize\")})]).render()})),this.context.memo(\"button.fontsizeunit\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents('<span class=\"note-current-fontsizeunit\"></span>',t.options),tooltip:t.lang.font.sizeunit,data:{toggle:\"dropdown\"}}),t.ui.dropdownCheck({className:\"dropdown-fontsizeunit\",checkClassName:t.options.icons.menuCheck,items:t.options.fontSizeUnits,title:t.lang.font.sizeunit,click:t.context.createInvokeHandlerAndUpdateState(\"editor.fontSizeUnit\")})]).render()})),this.context.memo(\"button.color\",(function(){return t.colorPalette(\"note-color-all\",t.lang.color.recent,!0,!0)})),this.context.memo(\"button.forecolor\",(function(){return t.colorPalette(\"note-color-fore\",t.lang.color.foreground,!1,!0)})),this.context.memo(\"button.backcolor\",(function(){return t.colorPalette(\"note-color-back\",t.lang.color.background,!0,!1)})),this.context.memo(\"button.ul\",(function(){return t.button({contents:t.ui.icon(t.options.icons.unorderedlist),tooltip:t.lang.lists.unordered+t.representShortcut(\"insertUnorderedList\"),click:t.context.createInvokeHandler(\"editor.insertUnorderedList\")}).render()})),this.context.memo(\"button.ol\",(function(){return t.button({contents:t.ui.icon(t.options.icons.orderedlist),tooltip:t.lang.lists.ordered+t.representShortcut(\"insertOrderedList\"),click:t.context.createInvokeHandler(\"editor.insertOrderedList\")}).render()}));var r=this.button({contents:this.ui.icon(this.options.icons.alignLeft),tooltip:this.lang.paragraph.left+this.representShortcut(\"justifyLeft\"),click:this.context.createInvokeHandler(\"editor.justifyLeft\")}),a=this.button({contents:this.ui.icon(this.options.icons.alignCenter),tooltip:this.lang.paragraph.center+this.representShortcut(\"justifyCenter\"),click:this.context.createInvokeHandler(\"editor.justifyCenter\")}),s=this.button({contents:this.ui.icon(this.options.icons.alignRight),tooltip:this.lang.paragraph.right+this.representShortcut(\"justifyRight\"),click:this.context.createInvokeHandler(\"editor.justifyRight\")}),l=this.button({contents:this.ui.icon(this.options.icons.alignJustify),tooltip:this.lang.paragraph.justify+this.representShortcut(\"justifyFull\"),click:this.context.createInvokeHandler(\"editor.justifyFull\")}),c=this.button({contents:this.ui.icon(this.options.icons.outdent),tooltip:this.lang.paragraph.outdent+this.representShortcut(\"outdent\"),click:this.context.createInvokeHandler(\"editor.outdent\")}),u=this.button({contents:this.ui.icon(this.options.icons.indent),tooltip:this.lang.paragraph.indent+this.representShortcut(\"indent\"),click:this.context.createInvokeHandler(\"editor.indent\")});this.context.memo(\"button.justifyLeft\",v.invoke(r,\"render\")),this.context.memo(\"button.justifyCenter\",v.invoke(a,\"render\")),this.context.memo(\"button.justifyRight\",v.invoke(s,\"render\")),this.context.memo(\"button.justifyFull\",v.invoke(l,\"render\")),this.context.memo(\"button.outdent\",v.invoke(c,\"render\")),this.context.memo(\"button.indent\",v.invoke(u,\"render\")),this.context.memo(\"button.paragraph\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents(t.ui.icon(t.options.icons.alignLeft),t.options),tooltip:t.lang.paragraph.paragraph,data:{toggle:\"dropdown\"}}),t.ui.dropdown([t.ui.buttonGroup({className:\"note-align\",children:[r,a,s,l]}),t.ui.buttonGroup({className:\"note-list\",children:[c,u]})])]).render()})),this.context.memo(\"button.height\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents(t.ui.icon(t.options.icons.textHeight),t.options),tooltip:t.lang.font.height,data:{toggle:\"dropdown\"}}),t.ui.dropdownCheck({items:t.options.lineHeights,checkClassName:t.options.icons.menuCheck,className:\"dropdown-line-height\",title:t.lang.font.height,click:t.context.createInvokeHandler(\"editor.lineHeight\")})]).render()})),this.context.memo(\"button.table\",(function(){return t.ui.buttonGroup([t.button({className:\"dropdown-toggle\",contents:t.ui.dropdownButtonContents(t.ui.icon(t.options.icons.table),t.options),tooltip:t.lang.table.table,data:{toggle:\"dropdown\"}}),t.ui.dropdown({title:t.lang.table.table,className:\"note-table\",items:['<div class=\"note-dimension-picker\">','<div class=\"note-dimension-picker-mousecatcher\" data-event=\"insertTable\" data-value=\"1x1\"></div>','<div class=\"note-dimension-picker-highlighted\"></div>','<div class=\"note-dimension-picker-unhighlighted\"></div>',\"</div>\",'<div class=\"note-dimension-display\">1 x 1</div>'].join(\"\")})],{callback:function(e){e.find(\".note-dimension-picker-mousecatcher\").css({width:t.options.insertTableMaxSize.col+\"em\",height:t.options.insertTableMaxSize.row+\"em\"}).mouseup(t.context.createInvokeHandler(\"editor.insertTable\")).on(\"mousemove\",t.tableMoveHandler.bind(t))}}).render()})),this.context.memo(\"button.link\",(function(){return t.button({contents:t.ui.icon(t.options.icons.link),tooltip:t.lang.link.link+t.representShortcut(\"linkDialog.show\"),click:t.context.createInvokeHandler(\"linkDialog.show\")}).render()})),this.context.memo(\"button.picture\",(function(){return t.button({contents:t.ui.icon(t.options.icons.picture),tooltip:t.lang.image.image,click:t.context.createInvokeHandler(\"imageDialog.show\")}).render()})),this.context.memo(\"button.video\",(function(){return t.button({contents:t.ui.icon(t.options.icons.video),tooltip:t.lang.video.video,click:t.context.createInvokeHandler(\"videoDialog.show\")}).render()})),this.context.memo(\"button.hr\",(function(){return t.button({contents:t.ui.icon(t.options.icons.minus),tooltip:t.lang.hr.insert+t.representShortcut(\"insertHorizontalRule\"),click:t.context.createInvokeHandler(\"editor.insertHorizontalRule\")}).render()})),this.context.memo(\"button.fullscreen\",(function(){return t.button({className:\"btn-fullscreen note-codeview-keep\",contents:t.ui.icon(t.options.icons.arrowsAlt),tooltip:t.lang.options.fullscreen,click:t.context.createInvokeHandler(\"fullscreen.toggle\")}).render()})),this.context.memo(\"button.codeview\",(function(){return t.button({className:\"btn-codeview note-codeview-keep\",contents:t.ui.icon(t.options.icons.code),tooltip:t.lang.options.codeview,click:t.context.createInvokeHandler(\"codeview.toggle\")}).render()})),this.context.memo(\"button.redo\",(function(){return t.button({contents:t.ui.icon(t.options.icons.redo),tooltip:t.lang.history.redo+t.representShortcut(\"redo\"),click:t.context.createInvokeHandler(\"editor.redo\")}).render()})),this.context.memo(\"button.undo\",(function(){return t.button({contents:t.ui.icon(t.options.icons.undo),tooltip:t.lang.history.undo+t.representShortcut(\"undo\"),click:t.context.createInvokeHandler(\"editor.undo\")}).render()})),this.context.memo(\"button.help\",(function(){return t.button({contents:t.ui.icon(t.options.icons.question),tooltip:t.lang.options.help,click:t.context.createInvokeHandler(\"helpDialog.show\")}).render()}))}},{key:\"addImagePopoverButtons\",value:function(){var t=this;this.context.memo(\"button.resizeFull\",(function(){return t.button({contents:'<span class=\"note-fontsize-10\">100%</span>',tooltip:t.lang.image.resizeFull,click:t.context.createInvokeHandler(\"editor.resize\",\"1\")}).render()})),this.context.memo(\"button.resizeHalf\",(function(){return t.button({contents:'<span class=\"note-fontsize-10\">50%</span>',tooltip:t.lang.image.resizeHalf,click:t.context.createInvokeHandler(\"editor.resize\",\"0.5\")}).render()})),this.context.memo(\"button.resizeQuarter\",(function(){return t.button({contents:'<span class=\"note-fontsize-10\">25%</span>',tooltip:t.lang.image.resizeQuarter,click:t.context.createInvokeHandler(\"editor.resize\",\"0.25\")}).render()})),this.context.memo(\"button.resizeNone\",(function(){return t.button({contents:t.ui.icon(t.options.icons.rollback),tooltip:t.lang.image.resizeNone,click:t.context.createInvokeHandler(\"editor.resize\",\"0\")}).render()})),this.context.memo(\"button.floatLeft\",(function(){return t.button({contents:t.ui.icon(t.options.icons.floatLeft),tooltip:t.lang.image.floatLeft,click:t.context.createInvokeHandler(\"editor.floatMe\",\"left\")}).render()})),this.context.memo(\"button.floatRight\",(function(){return t.button({contents:t.ui.icon(t.options.icons.floatRight),tooltip:t.lang.image.floatRight,click:t.context.createInvokeHandler(\"editor.floatMe\",\"right\")}).render()})),this.context.memo(\"button.floatNone\",(function(){return t.button({contents:t.ui.icon(t.options.icons.rollback),tooltip:t.lang.image.floatNone,click:t.context.createInvokeHandler(\"editor.floatMe\",\"none\")}).render()})),this.context.memo(\"button.removeMedia\",(function(){return t.button({contents:t.ui.icon(t.options.icons.trash),tooltip:t.lang.image.remove,click:t.context.createInvokeHandler(\"editor.removeMedia\")}).render()}))}},{key:\"addLinkPopoverButtons\",value:function(){var t=this;this.context.memo(\"button.linkDialogShow\",(function(){return t.button({contents:t.ui.icon(t.options.icons.link),tooltip:t.lang.link.edit,click:t.context.createInvokeHandler(\"linkDialog.show\")}).render()})),this.context.memo(\"button.unlink\",(function(){return t.button({contents:t.ui.icon(t.options.icons.unlink),tooltip:t.lang.link.unlink,click:t.context.createInvokeHandler(\"editor.unlink\")}).render()}))}},{key:\"addTablePopoverButtons\",value:function(){var t=this;this.context.memo(\"button.addRowUp\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.rowAbove),tooltip:t.lang.table.addRowAbove,click:t.context.createInvokeHandler(\"editor.addRow\",\"top\")}).render()})),this.context.memo(\"button.addRowDown\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.rowBelow),tooltip:t.lang.table.addRowBelow,click:t.context.createInvokeHandler(\"editor.addRow\",\"bottom\")}).render()})),this.context.memo(\"button.addColLeft\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.colBefore),tooltip:t.lang.table.addColLeft,click:t.context.createInvokeHandler(\"editor.addCol\",\"left\")}).render()})),this.context.memo(\"button.addColRight\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.colAfter),tooltip:t.lang.table.addColRight,click:t.context.createInvokeHandler(\"editor.addCol\",\"right\")}).render()})),this.context.memo(\"button.deleteRow\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.rowRemove),tooltip:t.lang.table.delRow,click:t.context.createInvokeHandler(\"editor.deleteRow\")}).render()})),this.context.memo(\"button.deleteCol\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.colRemove),tooltip:t.lang.table.delCol,click:t.context.createInvokeHandler(\"editor.deleteCol\")}).render()})),this.context.memo(\"button.deleteTable\",(function(){return t.button({className:\"btn-md\",contents:t.ui.icon(t.options.icons.trash),tooltip:t.lang.table.delTable,click:t.context.createInvokeHandler(\"editor.deleteTable\")}).render()}))}},{key:\"build\",value:function(t,e){for(var n=0,o=e.length;n<o;n++){for(var i=e[n],r=Array.isArray(i)?i[0]:i,a=Array.isArray(i)?1===i.length?[i[0]]:i[1]:[i],s=this.ui.buttonGroup({className:\"note-\"+r}).render(),l=0,c=a.length;l<c;l++){var u=this.context.memo(\"button.\"+a[l]);u&&s.append(\"function\"==typeof u?u(this.context):u)}s.appendTo(t)}}},{key:\"updateCurrentStyle\",value:function(t){var n=t||this.$toolbar,o=this.context.invoke(\"editor.currentStyle\");if(this.updateBtnStates(n,{\".note-btn-bold\":function(){return\"bold\"===o[\"font-bold\"]},\".note-btn-italic\":function(){return\"italic\"===o[\"font-italic\"]},\".note-btn-underline\":function(){return\"underline\"===o[\"font-underline\"]},\".note-btn-subscript\":function(){return\"subscript\"===o[\"font-subscript\"]},\".note-btn-superscript\":function(){return\"superscript\"===o[\"font-superscript\"]},\".note-btn-strikethrough\":function(){return\"strikethrough\"===o[\"font-strikethrough\"]}}),o[\"font-family\"]){var i=o[\"font-family\"].split(\",\").map((function(t){return t.replace(/[\\'\\\"]/g,\"\").replace(/\\s+$/,\"\").replace(/^\\s+/,\"\")})),r=k.find(i,this.isFontInstalled.bind(this));n.find(\".dropdown-fontname a\").each((function(t,n){var o=e()(n),i=o.data(\"value\")+\"\"==r+\"\";o.toggleClass(\"checked\",i)})),n.find(\".note-current-fontname\").text(r).css(\"font-family\",r)}if(o[\"font-size\"]){var a=o[\"font-size\"];n.find(\".dropdown-fontsize a\").each((function(t,n){var o=e()(n),i=o.data(\"value\")+\"\"==a+\"\";o.toggleClass(\"checked\",i)})),n.find(\".note-current-fontsize\").text(a);var s=o[\"font-size-unit\"];n.find(\".dropdown-fontsizeunit a\").each((function(t,n){var o=e()(n),i=o.data(\"value\")+\"\"==s+\"\";o.toggleClass(\"checked\",i)})),n.find(\".note-current-fontsizeunit\").text(s)}if(o[\"line-height\"]){var l=o[\"line-height\"];n.find(\".dropdown-line-height a\").each((function(t,n){var o=e()(n),i=e()(n).data(\"value\")+\"\"==l+\"\";o.toggleClass(\"checked\",i)})),n.find(\".note-current-line-height\").text(l)}}},{key:\"updateBtnStates\",value:function(t,n){var o=this;e().each(n,(function(e,n){o.ui.toggleBtnActive(t.find(e),n())}))}},{key:\"tableMoveHandler\",value:function(t){var n,o=e()(t.target.parentNode),i=o.next(),r=o.find(\".note-dimension-picker-mousecatcher\"),a=o.find(\".note-dimension-picker-highlighted\"),s=o.find(\".note-dimension-picker-unhighlighted\");if(void 0===t.offsetX){var l=e()(t.target).offset();n={x:t.pageX-l.left,y:t.pageY-l.top}}else n={x:t.offsetX,y:t.offsetY};var c=Math.ceil(n.x/18)||1,u=Math.ceil(n.y/18)||1;a.css({width:c+\"em\",height:u+\"em\"}),r.data(\"value\",c+\"x\"+u),c>3&&c<this.options.insertTableMaxSize.col&&s.css({width:c+1+\"em\"}),u>3&&u<this.options.insertTableMaxSize.row&&s.css({height:u+1+\"em\"}),i.html(c+\" x \"+u)}}],o&&ie(n.prototype,o),i&&ie(n,i),t}();function ae(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var se=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.$window=e()(window),this.$document=e()(document),this.ui=e().summernote.ui,this.$note=n.layoutInfo.note,this.$editor=n.layoutInfo.editor,this.$toolbar=n.layoutInfo.toolbar,this.$editable=n.layoutInfo.editable,this.$statusbar=n.layoutInfo.statusbar,this.options=n.options,this.isFollowing=!1,this.followScroll=this.followScroll.bind(this)}var n,o,i;return n=t,(o=[{key:\"shouldInitialize\",value:function(){return!this.options.airMode}},{key:\"initialize\",value:function(){var t=this;this.options.toolbar=this.options.toolbar||[],this.options.toolbar.length?this.context.invoke(\"buttons.build\",this.$toolbar,this.options.toolbar):this.$toolbar.hide(),this.options.toolbarContainer&&this.$toolbar.appendTo(this.options.toolbarContainer),this.changeContainer(!1),this.$note.on(\"summernote.keyup summernote.mouseup summernote.change\",(function(){t.context.invoke(\"buttons.updateCurrentStyle\")})),this.context.invoke(\"buttons.updateCurrentStyle\"),this.options.followingToolbar&&this.$window.on(\"scroll resize\",this.followScroll)}},{key:\"destroy\",value:function(){this.$toolbar.children().remove(),this.options.followingToolbar&&this.$window.off(\"scroll resize\",this.followScroll)}},{key:\"followScroll\",value:function(){if(this.$editor.hasClass(\"fullscreen\"))return!1;var t=this.$editor.outerHeight(),n=this.$editor.width(),o=this.$toolbar.height(),i=this.$statusbar.height(),r=0;this.options.otherStaticBar&&(r=e()(this.options.otherStaticBar).outerHeight());var a=this.$document.scrollTop(),s=this.$editor.offset().top,l=s-r,c=s+t-r-o-i;!this.isFollowing&&a>l&&a<c-o?(this.isFollowing=!0,this.$editable.css({marginTop:this.$toolbar.outerHeight()}),this.$toolbar.css({position:\"fixed\",top:r,width:n,zIndex:1e3})):this.isFollowing&&(a<l||a>c)&&(this.isFollowing=!1,this.$toolbar.css({position:\"relative\",top:0,width:\"100%\",zIndex:\"auto\"}),this.$editable.css({marginTop:\"\"}))}},{key:\"changeContainer\",value:function(t){t?this.$toolbar.prependTo(this.$editor):this.options.toolbarContainer&&this.$toolbar.appendTo(this.options.toolbarContainer),this.options.followingToolbar&&this.followScroll()}},{key:\"updateFullscreen\",value:function(t){this.ui.toggleBtnActive(this.$toolbar.find(\".btn-fullscreen\"),t),this.changeContainer(t)}},{key:\"updateCodeview\",value:function(t){this.ui.toggleBtnActive(this.$toolbar.find(\".btn-codeview\"),t),t?this.deactivate():this.activate()}},{key:\"activate\",value:function(t){var e=this.$toolbar.find(\"button\");t||(e=e.not(\".note-codeview-keep\")),this.ui.toggleBtn(e,!0)}},{key:\"deactivate\",value:function(t){var e=this.$toolbar.find(\"button\");t||(e=e.not(\".note-codeview-keep\")),this.ui.toggleBtn(e,!1)}}])&&ae(n.prototype,o),i&&ae(n,i),t}();function le(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ce=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$body=e()(document.body),this.$editor=n.layoutInfo.editor,this.options=n.options,this.lang=this.options.langInfo,n.memo(\"help.linkDialog.show\",this.options.langInfo.help[\"linkDialog.show\"])}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){var t=this.options.dialogsInBody?this.$body:this.options.container,n=['<div class=\"form-group note-form-group\">','<label for=\"note-dialog-link-txt-'.concat(this.options.id,'\" class=\"note-form-label\">').concat(this.lang.link.textToDisplay,\"</label>\"),'<input id=\"note-dialog-link-txt-'.concat(this.options.id,'\" class=\"note-link-text form-control note-form-control note-input\" type=\"text\"/>'),\"</div>\",'<div class=\"form-group note-form-group\">','<label for=\"note-dialog-link-url-'.concat(this.options.id,'\" class=\"note-form-label\">').concat(this.lang.link.url,\"</label>\"),'<input id=\"note-dialog-link-url-'.concat(this.options.id,'\" class=\"note-link-url form-control note-form-control note-input\" type=\"text\" value=\"http://\"/>'),\"</div>\",this.options.disableLinkTarget?\"\":e()(\"<div></div>\").append(this.ui.checkbox({className:\"sn-checkbox-open-in-new-window\",text:this.lang.link.openInNewWindow,checked:!0}).render()).html(),e()(\"<div></div>\").append(this.ui.checkbox({className:\"sn-checkbox-use-protocol\",text:this.lang.link.useProtocol,checked:!0}).render()).html()].join(\"\"),o='<input type=\"button\" href=\"#\" class=\"'.concat(\"btn btn-primary note-btn note-btn-primary note-link-btn\",'\" value=\"').concat(this.lang.link.insert,'\" disabled>');this.$dialog=this.ui.dialog({className:\"link-dialog\",title:this.lang.link.insert,fade:this.options.dialogsFade,body:n,footer:o}).render().appendTo(t)}},{key:\"destroy\",value:function(){this.ui.hideDialog(this.$dialog),this.$dialog.remove()}},{key:\"bindEnterKey\",value:function(t,e){t.on(\"keypress\",(function(t){t.keyCode===wt.code.ENTER&&(t.preventDefault(),e.trigger(\"click\"))}))}},{key:\"toggleLinkBtn\",value:function(t,e,n){this.ui.toggleBtn(t,e.val()&&n.val())}},{key:\"showLinkDialog\",value:function(t){var n=this;return e().Deferred((function(e){var o=n.$dialog.find(\".note-link-text\"),i=n.$dialog.find(\".note-link-url\"),r=n.$dialog.find(\".note-link-btn\"),a=n.$dialog.find(\".sn-checkbox-open-in-new-window input[type=checkbox]\"),s=n.$dialog.find(\".sn-checkbox-use-protocol input[type=checkbox]\");n.ui.onDialogShown(n.$dialog,(function(){n.context.triggerEvent(\"dialog.shown\"),!t.url&&v.isValidUrl(t.text)&&(t.url=t.text),o.on(\"input paste propertychange\",(function(){t.text=o.val(),n.toggleLinkBtn(r,o,i)})).val(t.text),i.on(\"input paste propertychange\",(function(){t.text||o.val(i.val()),n.toggleLinkBtn(r,o,i)})).val(t.url),f.isSupportTouch||i.trigger(\"focus\"),n.toggleLinkBtn(r,o,i),n.bindEnterKey(i,r),n.bindEnterKey(o,r);var l=void 0!==t.isNewWindow?t.isNewWindow:n.context.options.linkTargetBlank;a.prop(\"checked\",l);var c=!t.url&&n.context.options.useProtocol;s.prop(\"checked\",c),r.one(\"click\",(function(r){r.preventDefault(),e.resolve({range:t.range,url:i.val(),text:o.val(),isNewWindow:a.is(\":checked\"),checkProtocol:s.is(\":checked\")}),n.ui.hideDialog(n.$dialog)}))})),n.ui.onDialogHidden(n.$dialog,(function(){o.off(),i.off(),r.off(),\"pending\"===e.state()&&e.reject()})),n.ui.showDialog(n.$dialog)})).promise()}},{key:\"show\",value:function(){var t=this,e=this.context.invoke(\"editor.getLinkInfo\");this.context.invoke(\"editor.saveRange\"),this.showLinkDialog(e).then((function(e){t.context.invoke(\"editor.restoreRange\"),t.context.invoke(\"editor.createLink\",e)})).fail((function(){t.context.invoke(\"editor.restoreRange\")}))}}])&&le(n.prototype,o),i&&le(n,i),t}();function ue(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var de=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.options=n.options,this.events={\"summernote.keyup summernote.mouseup summernote.change summernote.scroll\":function(){o.update()},\"summernote.disable summernote.dialog.shown\":function(){o.hide()},\"summernote.blur\":function(t,e){e.originalEvent&&e.originalEvent.relatedTarget&&o.$popover[0].contains(e.originalEvent.relatedTarget)||o.hide()}}}var n,o,i;return n=t,(o=[{key:\"shouldInitialize\",value:function(){return!k.isEmpty(this.options.popover.link)}},{key:\"initialize\",value:function(){this.$popover=this.ui.popover({className:\"note-link-popover\",callback:function(t){t.find(\".popover-content,.note-popover-content\").prepend('<span><a target=\"_blank\"></a>&nbsp;</span>')}}).render().appendTo(this.options.container);var t=this.$popover.find(\".popover-content,.note-popover-content\");this.context.invoke(\"buttons.build\",t,this.options.popover.link),this.$popover.on(\"mousedown\",(function(t){t.preventDefault()}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"update\",value:function(){if(this.context.invoke(\"editor.hasFocus\")){var t=this.context.invoke(\"editor.getLastRange\");if(t.isCollapsed()&&t.isOnAnchor()){var n=ht.ancestor(t.sc,ht.isAnchor),o=e()(n).attr(\"href\");this.$popover.find(\"a\").attr(\"href\",o).text(o);var i=ht.posFromPlaceholder(n),r=e()(this.options.container).offset();i.top-=r.top,i.left-=r.left,this.$popover.css({display:\"block\",left:i.left,top:i.top})}else this.hide()}else this.hide()}},{key:\"hide\",value:function(){this.$popover.hide()}}])&&ue(n.prototype,o),i&&ue(n,i),t}();function he(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var fe=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$body=e()(document.body),this.$editor=n.layoutInfo.editor,this.options=n.options,this.lang=this.options.langInfo}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){var t=\"\";if(this.options.maximumImageFileSize){var e=Math.floor(Math.log(this.options.maximumImageFileSize)/Math.log(1024)),n=1*(this.options.maximumImageFileSize/Math.pow(1024,e)).toFixed(2)+\" \"+\" KMGTP\"[e]+\"B\";t=\"<small>\".concat(this.lang.image.maximumFileSize+\" : \"+n,\"</small>\")}var o=this.options.dialogsInBody?this.$body:this.options.container,i=['<div class=\"form-group note-form-group note-group-select-from-files\">','<label for=\"note-dialog-image-file-'+this.options.id+'\" class=\"note-form-label\">'+this.lang.image.selectFromFiles+\"</label>\",'<input id=\"note-dialog-image-file-'+this.options.id+'\" class=\"note-image-input form-control-file note-form-control note-input\" ',' type=\"file\" name=\"files\" accept=\"'+this.options.acceptImageFileTypes+'\" multiple=\"multiple\"/>',t,\"</div>\",'<div class=\"form-group note-group-image-url\">','<label for=\"note-dialog-image-url-'+this.options.id+'\" class=\"note-form-label\">'+this.lang.image.url+\"</label>\",'<input id=\"note-dialog-image-url-'+this.options.id+'\" class=\"note-image-url form-control note-form-control note-input\" type=\"text\"/>',\"</div>\"].join(\"\"),r='<input type=\"button\" href=\"#\" class=\"'.concat(\"btn btn-primary note-btn note-btn-primary note-image-btn\",'\" value=\"').concat(this.lang.image.insert,'\" disabled>');this.$dialog=this.ui.dialog({title:this.lang.image.insert,fade:this.options.dialogsFade,body:i,footer:r}).render().appendTo(o)}},{key:\"destroy\",value:function(){this.ui.hideDialog(this.$dialog),this.$dialog.remove()}},{key:\"bindEnterKey\",value:function(t,e){t.on(\"keypress\",(function(t){t.keyCode===wt.code.ENTER&&(t.preventDefault(),e.trigger(\"click\"))}))}},{key:\"show\",value:function(){var t=this;this.context.invoke(\"editor.saveRange\"),this.showImageDialog().then((function(e){t.ui.hideDialog(t.$dialog),t.context.invoke(\"editor.restoreRange\"),\"string\"==typeof e?t.options.callbacks.onImageLinkInsert?t.context.triggerEvent(\"image.link.insert\",e):t.context.invoke(\"editor.insertImage\",e):t.context.invoke(\"editor.insertImagesOrCallback\",e)})).fail((function(){t.context.invoke(\"editor.restoreRange\")}))}},{key:\"showImageDialog\",value:function(){var t=this;return e().Deferred((function(e){var n=t.$dialog.find(\".note-image-input\"),o=t.$dialog.find(\".note-image-url\"),i=t.$dialog.find(\".note-image-btn\");t.ui.onDialogShown(t.$dialog,(function(){t.context.triggerEvent(\"dialog.shown\"),n.replaceWith(n.clone().on(\"change\",(function(t){e.resolve(t.target.files||t.target.value)})).val(\"\")),o.on(\"input paste propertychange\",(function(){t.ui.toggleBtn(i,o.val())})).val(\"\"),f.isSupportTouch||o.trigger(\"focus\"),i.click((function(t){t.preventDefault(),e.resolve(o.val())})),t.bindEnterKey(o,i)})),t.ui.onDialogHidden(t.$dialog,(function(){n.off(),o.off(),i.off(),\"pending\"===e.state()&&e.reject()})),t.ui.showDialog(t.$dialog)}))}}])&&he(n.prototype,o),i&&he(n,i),t}();function pe(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ve=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.editable=n.layoutInfo.editable[0],this.options=n.options,this.events={\"summernote.disable summernote.dialog.shown\":function(){o.hide()},\"summernote.blur\":function(t,e){e.originalEvent&&e.originalEvent.relatedTarget&&o.$popover[0].contains(e.originalEvent.relatedTarget)||o.hide()}}}var n,o,i;return n=t,o=[{key:\"shouldInitialize\",value:function(){return!k.isEmpty(this.options.popover.image)}},{key:\"initialize\",value:function(){this.$popover=this.ui.popover({className:\"note-image-popover\"}).render().appendTo(this.options.container);var t=this.$popover.find(\".popover-content,.note-popover-content\");this.context.invoke(\"buttons.build\",t,this.options.popover.image),this.$popover.on(\"mousedown\",(function(t){t.preventDefault()}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"update\",value:function(t,n){if(ht.isImg(t)){var o=e()(t).offset(),i=e()(this.options.container).offset(),r={};this.options.popatmouse?(r.left=n.pageX-20,r.top=n.pageY):r=o,r.top-=i.top,r.left-=i.left,this.$popover.css({display:\"block\",left:r.left,top:r.top})}else this.hide()}},{key:\"hide\",value:function(){this.$popover.hide()}}],o&&pe(n.prototype,o),i&&pe(n,i),t}();function me(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ge=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.options=n.options,this.events={\"summernote.mousedown\":function(t,e){o.update(e.target)},\"summernote.keyup summernote.scroll summernote.change\":function(){o.update()},\"summernote.disable summernote.dialog.shown\":function(){o.hide()},\"summernote.blur\":function(t,e){e.originalEvent&&e.originalEvent.relatedTarget&&o.$popover[0].contains(e.originalEvent.relatedTarget)||o.hide()}}}var n,o,i;return n=t,o=[{key:\"shouldInitialize\",value:function(){return!k.isEmpty(this.options.popover.table)}},{key:\"initialize\",value:function(){this.$popover=this.ui.popover({className:\"note-table-popover\"}).render().appendTo(this.options.container);var t=this.$popover.find(\".popover-content,.note-popover-content\");this.context.invoke(\"buttons.build\",t,this.options.popover.table),f.isFF&&document.execCommand(\"enableInlineTableEditing\",!1,!1),this.$popover.on(\"mousedown\",(function(t){t.preventDefault()}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"update\",value:function(t){if(this.context.isDisabled())return!1;var n=ht.isCell(t)||ht.isCell(null==t?void 0:t.parentElement);if(n){var o=ht.posFromPlaceholder(t),i=e()(this.options.container).offset();o.top-=i.top,o.left-=i.left,this.$popover.css({display:\"block\",left:o.left,top:o.top})}else this.hide();return n}},{key:\"hide\",value:function(){this.$popover.hide()}}],o&&me(n.prototype,o),i&&me(n,i),t}();function be(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var ye=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$body=e()(document.body),this.$editor=n.layoutInfo.editor,this.options=n.options,this.lang=this.options.langInfo}var n,o,i;return n=t,(o=[{key:\"initialize\",value:function(){var t=this.options.dialogsInBody?this.$body:this.options.container,e=['<div class=\"form-group note-form-group row-fluid\">','<label for=\"note-dialog-video-url-'.concat(this.options.id,'\" class=\"note-form-label\">').concat(this.lang.video.url,' <small class=\"text-muted\">').concat(this.lang.video.providers,\"</small></label>\"),'<input id=\"note-dialog-video-url-'.concat(this.options.id,'\" class=\"note-video-url form-control note-form-control note-input\" type=\"text\"/>'),\"</div>\"].join(\"\"),n='<input type=\"button\" href=\"#\" class=\"'.concat(\"btn btn-primary note-btn note-btn-primary note-video-btn\",'\" value=\"').concat(this.lang.video.insert,'\" disabled>');this.$dialog=this.ui.dialog({title:this.lang.video.insert,fade:this.options.dialogsFade,body:e,footer:n}).render().appendTo(t)}},{key:\"destroy\",value:function(){this.ui.hideDialog(this.$dialog),this.$dialog.remove()}},{key:\"bindEnterKey\",value:function(t,e){t.on(\"keypress\",(function(t){t.keyCode===wt.code.ENTER&&(t.preventDefault(),e.trigger(\"click\"))}))}},{key:\"createVideoNode\",value:function(t){var n,o=t.match(/\\/\\/(?:(?:www|m)\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))([\\w|-]{11})(?:(?:[\\?&]t=)(\\S+))?$/),i=t.match(/(?:\\.|\\/\\/)drive\\.google\\.com\\/file\\/d\\/(.[a-zA-Z0-9_-]*)\\/view/),r=t.match(/(?:www\\.|\\/\\/)instagram\\.com\\/p\\/(.[a-zA-Z0-9_-]*)/),a=t.match(/\\/\\/vine\\.co\\/v\\/([a-zA-Z0-9]+)/),s=t.match(/\\/\\/(player\\.)?vimeo\\.com\\/([a-z]*\\/)*(\\d+)[?]?.*/),l=t.match(/.+dailymotion.com\\/(video|hub)\\/([^_]+)[^#]*(#video=([^_&]+))?/),c=t.match(/\\/\\/v\\.youku\\.com\\/v_show\\/id_(\\w+)=*\\.html/),u=t.match(/\\/\\/(.*)\\/videos\\/watch\\/([^?]*)(?:\\?(?:start=(\\w*))?(?:&stop=(\\w*))?(?:&loop=([10]))?(?:&autoplay=([10]))?(?:&muted=([10]))?)?/),d=t.match(/\\/\\/v\\.qq\\.com.*?vid=(.+)/),h=t.match(/\\/\\/v\\.qq\\.com\\/x?\\/?(page|cover).*?\\/([^\\/]+)\\.html\\??.*/),f=t.match(/^.+.(mp4|m4v)$/),p=t.match(/^.+.(ogg|ogv)$/),v=t.match(/^.+.(webm)$/),m=t.match(/(?:www\\.|\\/\\/)facebook\\.com\\/([^\\/]+)\\/videos\\/([0-9]+)/);if(o&&11===o[1].length){var g=o[1],b=0;if(void 0!==o[2]){var y=o[2].match(/^(?:(\\d+)h)?(?:(\\d+)m)?(?:(\\d+)s)?$/);if(y)for(var k=[3600,60,1],w=0,C=k.length;w<C;w++)b+=void 0!==y[w+1]?k[w]*parseInt(y[w+1],10):0}n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"//www.youtube.com/embed/\"+g+(b>0?\"?start=\"+b:\"\")).attr(\"width\",\"640\").attr(\"height\",\"360\")}else if(i&&i[0].length)n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"https://drive.google.com/file/d/\"+i[1]+\"/preview\").attr(\"width\",\"640\").attr(\"height\",\"480\");else if(r&&r[0].length)n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"https://instagram.com/p/\"+r[1]+\"/embed/\").attr(\"width\",\"612\").attr(\"height\",\"710\").attr(\"scrolling\",\"no\").attr(\"allowtransparency\",\"true\");else if(a&&a[0].length)n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",a[0]+\"/embed/simple\").attr(\"width\",\"600\").attr(\"height\",\"600\").attr(\"class\",\"vine-embed\");else if(s&&s[3].length)n=e()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\",0).attr(\"src\",\"//player.vimeo.com/video/\"+s[3]).attr(\"width\",\"640\").attr(\"height\",\"360\");else if(l&&l[2].length)n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"//www.dailymotion.com/embed/video/\"+l[2]).attr(\"width\",\"640\").attr(\"height\",\"360\");else if(c&&c[1].length)n=e()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\",0).attr(\"height\",\"498\").attr(\"width\",\"510\").attr(\"src\",\"//player.youku.com/embed/\"+c[1]);else if(u&&u[0].length){var x=0;\"undefined\"!==u[2]&&(x=u[2]);var S=0;\"undefined\"!==u[3]&&(S=u[3]);var T=0;\"undefined\"!==u[4]&&(T=u[4]);var E=0;\"undefined\"!==u[5]&&(E=u[5]);var I=0;\"undefined\"!==u[6]&&(I=u[6]),n=e()('<iframe allowfullscreen sandbox=\"allow-same-origin allow-scripts allow-popups\">').attr(\"frameborder\",0).attr(\"src\",\"//\"+u[1]+\"/videos/embed/\"+u[2]+\"?loop=\"+T+\"&autoplay=\"+E+\"&muted=\"+I+(x>0?\"&start=\"+x:\"\")+(S>0?\"&end=\"+b:\"\")).attr(\"width\",\"560\").attr(\"height\",\"315\")}else if(d&&d[1].length||h&&h[2].length){var $=d&&d[1].length?d[1]:h[2];n=e()(\"<iframe webkitallowfullscreen mozallowfullscreen allowfullscreen>\").attr(\"frameborder\",0).attr(\"height\",\"310\").attr(\"width\",\"500\").attr(\"src\",\"https://v.qq.com/txp/iframe/player.html?vid=\"+$+\"&amp;auto=0\")}else if(f||p||v)n=e()(\"<video controls>\").attr(\"src\",t).attr(\"width\",\"640\").attr(\"height\",\"360\");else{if(!m||!m[0].length)return!1;n=e()(\"<iframe>\").attr(\"frameborder\",0).attr(\"src\",\"https://www.facebook.com/plugins/video.php?href=\"+encodeURIComponent(m[0])+\"&show_text=0&width=560\").attr(\"width\",\"560\").attr(\"height\",\"301\").attr(\"scrolling\",\"no\").attr(\"allowtransparency\",\"true\")}return n.addClass(\"note-video-clip\"),n[0]}},{key:\"show\",value:function(){var t=this,e=this.context.invoke(\"editor.getSelectedText\");this.context.invoke(\"editor.saveRange\"),this.showVideoDialog(e).then((function(e){t.ui.hideDialog(t.$dialog),t.context.invoke(\"editor.restoreRange\");var n=t.createVideoNode(e);n&&t.context.invoke(\"editor.insertNode\",n)})).fail((function(){t.context.invoke(\"editor.restoreRange\")}))}},{key:\"showVideoDialog\",value:function(){var t=this;return e().Deferred((function(e){var n=t.$dialog.find(\".note-video-url\"),o=t.$dialog.find(\".note-video-btn\");t.ui.onDialogShown(t.$dialog,(function(){t.context.triggerEvent(\"dialog.shown\"),n.on(\"input paste propertychange\",(function(){t.ui.toggleBtn(o,n.val())})),f.isSupportTouch||n.trigger(\"focus\"),o.click((function(t){t.preventDefault(),e.resolve(n.val())})),t.bindEnterKey(n,o)})),t.ui.onDialogHidden(t.$dialog,(function(){n.off(),o.off(),\"pending\"===e.state()&&e.reject()})),t.ui.showDialog(t.$dialog)}))}}])&&be(n.prototype,o),i&&be(n,i),t}();function ke(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var we=function(){function t(n){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$body=e()(document.body),this.$editor=n.layoutInfo.editor,this.options=n.options,this.lang=this.options.langInfo}var n,o,i;return n=t,o=[{key:\"initialize\",value:function(){var t=this.options.dialogsInBody?this.$body:this.options.container,e=['<p class=\"text-center\">','<a href=\"http://summernote.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Summernote 0.8.20</a> · ','<a href=\"https://github.com/summernote/summernote\" target=\"_blank\" rel=\"noopener noreferrer\">Project</a> · ','<a href=\"https://github.com/summernote/summernote/issues\" target=\"_blank\" rel=\"noopener noreferrer\">Issues</a>',\"</p>\"].join(\"\");this.$dialog=this.ui.dialog({title:this.lang.options.help,fade:this.options.dialogsFade,body:this.createShortcutList(),footer:e,callback:function(t){t.find(\".modal-body,.note-modal-body\").css({\"max-height\":300,overflow:\"scroll\"})}}).render().appendTo(t)}},{key:\"destroy\",value:function(){this.ui.hideDialog(this.$dialog),this.$dialog.remove()}},{key:\"createShortcutList\",value:function(){var t=this,n=this.options.keyMap[f.isMac?\"mac\":\"pc\"];return Object.keys(n).map((function(o){var i=n[o],r=e()('<div><div class=\"help-list-item\"></div></div>');return r.append(e()(\"<label><kbd>\"+o+\"</kdb></label>\").css({width:180,\"margin-right\":10})).append(e()(\"<span></span>\").html(t.context.memo(\"help.\"+i)||i)),r.html()})).join(\"\")}},{key:\"showHelpDialog\",value:function(){var t=this;return e().Deferred((function(e){t.ui.onDialogShown(t.$dialog,(function(){t.context.triggerEvent(\"dialog.shown\"),e.resolve()})),t.ui.showDialog(t.$dialog)})).promise()}},{key:\"show\",value:function(){var t=this;this.context.invoke(\"editor.saveRange\"),this.showHelpDialog().then((function(){t.context.invoke(\"editor.restoreRange\")}))}}],o&&ke(n.prototype,o),i&&ke(n,i),t}();function Ce(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var xe=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.options=n.options,this.hidable=!0,this.onContextmenu=!1,this.pageX=null,this.pageY=null,this.events={\"summernote.contextmenu\":function(t){o.options.editing&&(t.preventDefault(),t.stopPropagation(),o.onContextmenu=!0,o.update(!0))},\"summernote.mousedown\":function(t,e){o.pageX=e.pageX,o.pageY=e.pageY},\"summernote.keyup summernote.mouseup summernote.scroll\":function(t,e){o.options.editing&&!o.onContextmenu&&(o.pageX=e.pageX,o.pageY=e.pageY,o.update()),o.onContextmenu=!1},\"summernote.disable summernote.change summernote.dialog.shown summernote.blur\":function(){o.hide()},\"summernote.focusout\":function(){o.$popover.is(\":active,:focus\")||o.hide()}}}var n,o,i;return n=t,(o=[{key:\"shouldInitialize\",value:function(){return this.options.airMode&&!k.isEmpty(this.options.popover.air)}},{key:\"initialize\",value:function(){var t=this;this.$popover=this.ui.popover({className:\"note-air-popover\"}).render().appendTo(this.options.container);var e=this.$popover.find(\".popover-content\");this.context.invoke(\"buttons.build\",e,this.options.popover.air),this.$popover.on(\"mousedown\",(function(){t.hidable=!1})),this.$popover.on(\"mouseup\",(function(){t.hidable=!0}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"update\",value:function(t){var n=this.context.invoke(\"editor.currentStyle\");if(!n.range||n.range.isCollapsed()&&!t)this.hide();else{var o={left:this.pageX,top:this.pageY},i=e()(this.options.container).offset();o.top-=i.top,o.left-=i.left,this.$popover.css({display:\"block\",left:Math.max(o.left,0)+-5,top:o.top+5}),this.context.invoke(\"buttons.updateCurrentStyle\",this.$popover)}}},{key:\"updateCodeview\",value:function(t){this.ui.toggleBtnActive(this.$popover.find(\".btn-codeview\"),t),t&&this.hide()}},{key:\"hide\",value:function(){this.hidable&&this.$popover.hide()}}])&&Ce(n.prototype,o),i&&Ce(n,i),t}();function Se(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}var Te=function(){function t(n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.context=n,this.ui=e().summernote.ui,this.$editable=n.layoutInfo.editable,this.options=n.options,this.hint=this.options.hint||[],this.direction=this.options.hintDirection||\"bottom\",this.hints=Array.isArray(this.hint)?this.hint:[this.hint],this.events={\"summernote.keyup\":function(t,e){e.isDefaultPrevented()||o.handleKeyup(e)},\"summernote.keydown\":function(t,e){o.handleKeydown(e)},\"summernote.disable summernote.dialog.shown summernote.blur\":function(){o.hide()}}}var n,o,i;return n=t,o=[{key:\"shouldInitialize\",value:function(){return this.hints.length>0}},{key:\"initialize\",value:function(){var t=this;this.lastWordRange=null,this.matchingWord=null,this.$popover=this.ui.popover({className:\"note-hint-popover\",hideArrow:!0,direction:\"\"}).render().appendTo(this.options.container),this.$popover.hide(),this.$content=this.$popover.find(\".popover-content,.note-popover-content\"),this.$content.on(\"click\",\".note-hint-item\",(function(n){t.$content.find(\".active\").removeClass(\"active\"),e()(n.currentTarget).addClass(\"active\"),t.replace()})),this.$popover.on(\"mousedown\",(function(t){t.preventDefault()}))}},{key:\"destroy\",value:function(){this.$popover.remove()}},{key:\"selectItem\",value:function(t){this.$content.find(\".active\").removeClass(\"active\"),t.addClass(\"active\"),this.$content[0].scrollTop=t[0].offsetTop-this.$content.innerHeight()/2}},{key:\"moveDown\",value:function(){var t=this.$content.find(\".note-hint-item.active\"),e=t.next();if(e.length)this.selectItem(e);else{var n=t.parent().next();n.length||(n=this.$content.find(\".note-hint-group\").first()),this.selectItem(n.find(\".note-hint-item\").first())}}},{key:\"moveUp\",value:function(){var t=this.$content.find(\".note-hint-item.active\"),e=t.prev();if(e.length)this.selectItem(e);else{var n=t.parent().prev();n.length||(n=this.$content.find(\".note-hint-group\").last()),this.selectItem(n.find(\".note-hint-item\").last())}}},{key:\"replace\",value:function(){var t=this.$content.find(\".note-hint-item.active\");if(t.length){var n=this.nodeFromItem(t);if(null!==this.matchingWord&&0===this.matchingWord.length)this.lastWordRange.so=this.lastWordRange.eo;else if(null!==this.matchingWord&&this.matchingWord.length>0&&!this.lastWordRange.isCollapsed()){var o=this.lastWordRange.eo-this.lastWordRange.so-this.matchingWord.length;o>0&&(this.lastWordRange.so+=o)}if(this.lastWordRange.insertNode(n),\"next\"===this.options.hintSelect){var i=document.createTextNode(\"\");e()(n).after(i),yt.createFromNodeBefore(i).select()}else yt.createFromNodeAfter(n).select();this.lastWordRange=null,this.hide(),this.context.invoke(\"editor.focus\"),this.context.triggerEvent(\"change\",this.$editable.html(),this.$editable)}}},{key:\"nodeFromItem\",value:function(t){var e=this.hints[t.data(\"index\")],n=t.data(\"item\"),o=e.content?e.content(n):n;return\"string\"==typeof o&&(o=ht.createText(o)),o}},{key:\"createItemTemplates\",value:function(t,n){var o=this.hints[t];return n.map((function(n){var i=e()('<div class=\"note-hint-item\"></div>');return i.append(o.template?o.template(n):n+\"\"),i.data({index:t,item:n}),i}))}},{key:\"handleKeydown\",value:function(t){this.$popover.is(\":visible\")&&(t.keyCode===wt.code.ENTER?(t.preventDefault(),this.replace()):t.keyCode===wt.code.UP?(t.preventDefault(),this.moveUp()):t.keyCode===wt.code.DOWN&&(t.preventDefault(),this.moveDown()))}},{key:\"searchKeyword\",value:function(t,e,n){var o=this.hints[t];if(o&&o.match.test(e)&&o.search){var i=o.match.exec(e);this.matchingWord=i[0],o.search(i[1],n)}else n()}},{key:\"createGroup\",value:function(t,n){var o=this,i=e()('<div class=\"note-hint-group note-hint-group-'+t+'\"></div>');return this.searchKeyword(t,n,(function(e){(e=e||[]).length&&(i.html(o.createItemTemplates(t,e)),o.show())})),i}},{key:\"handleKeyup\",value:function(t){var n=this;if(!k.contains([wt.code.ENTER,wt.code.UP,wt.code.DOWN],t.keyCode)){var o,i,r=this.context.invoke(\"editor.getLastRange\");if(\"words\"===this.options.hintMode){if(o=r.getWordsRange(r),i=o.toString(),this.hints.forEach((function(t){if(t.match.test(i))return o=r.getWordsMatchRange(t.match),!1})),!o)return void this.hide();i=o.toString()}else o=r.getWordRange(),i=o.toString();if(this.hints.length&&i){this.$content.empty();var a=v.rect2bnd(k.last(o.getClientRects())),s=e()(this.options.container).offset();a&&(a.top-=s.top,a.left-=s.left,this.$popover.hide(),this.lastWordRange=o,this.hints.forEach((function(t,e){t.match.test(i)&&n.createGroup(e,i).appendTo(n.$content)})),this.$content.find(\".note-hint-item:first\").addClass(\"active\"),\"top\"===this.direction?this.$popover.css({left:a.left,top:a.top-this.$popover.outerHeight()-5}):this.$popover.css({left:a.left,top:a.top+a.height+5}))}else this.hide()}}},{key:\"show\",value:function(){this.$popover.show()}},{key:\"hide\",value:function(){this.$popover.hide()}}],o&&Se(n.prototype,o),i&&Se(n,i),t}();function Ee(t){return Ee=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},Ee(t)}function Ie(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,\"value\"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}e().summernote=e().extend(e().summernote,{version:\"0.8.20\",plugins:{},dom:ht,range:yt,lists:k,options:{langInfo:e().summernote.lang[\"en-US\"],editing:!0,modules:{editor:Ft,clipboard:Ht,dropzone:Bt,codeview:jt,statusbar:Kt,fullscreen:qt,handle:Gt,hintPopover:Te,autoLink:Qt,autoSync:Jt,autoReplace:ee,placeholder:oe,buttons:re,toolbar:se,linkDialog:ce,linkPopover:de,imageDialog:fe,imagePopover:ve,tablePopover:ge,videoDialog:ye,helpDialog:we,airPopover:xe},buttons:{},lang:\"en-US\",followingToolbar:!1,toolbarPosition:\"top\",otherStaticBar:\"\",codeviewKeepButton:!1,toolbar:[[\"style\",[\"style\"]],[\"font\",[\"bold\",\"underline\",\"clear\"]],[\"fontname\",[\"fontname\"]],[\"color\",[\"color\"]],[\"para\",[\"ul\",\"ol\",\"paragraph\"]],[\"table\",[\"table\"]],[\"insert\",[\"link\",\"picture\",\"video\"]],[\"view\",[\"fullscreen\",\"codeview\",\"help\"]]],popatmouse:!0,popover:{image:[[\"resize\",[\"resizeFull\",\"resizeHalf\",\"resizeQuarter\",\"resizeNone\"]],[\"float\",[\"floatLeft\",\"floatRight\",\"floatNone\"]],[\"remove\",[\"removeMedia\"]]],link:[[\"link\",[\"linkDialogShow\",\"unlink\"]]],table:[[\"add\",[\"addRowDown\",\"addRowUp\",\"addColLeft\",\"addColRight\"]],[\"delete\",[\"deleteRow\",\"deleteCol\",\"deleteTable\"]]],air:[[\"color\",[\"color\"]],[\"font\",[\"bold\",\"underline\",\"clear\"]],[\"para\",[\"ul\",\"paragraph\"]],[\"table\",[\"table\"]],[\"insert\",[\"link\",\"picture\"]],[\"view\",[\"fullscreen\",\"codeview\"]]]},airMode:!1,overrideContextMenu:!1,width:null,height:null,linkTargetBlank:!0,useProtocol:!0,defaultProtocol:\"http://\",focus:!1,tabDisabled:!1,tabSize:4,styleWithCSS:!1,shortcuts:!0,textareaAutoSync:!0,tooltip:\"auto\",container:null,maxTextLength:0,blockquoteBreakingLevel:2,spellCheck:!0,disableGrammar:!1,placeholder:null,inheritPlaceholder:!1,recordEveryKeystroke:!1,historyLimit:200,showDomainOnlyForAutolink:!1,hintMode:\"word\",hintSelect:\"after\",hintDirection:\"bottom\",styleTags:[\"p\",\"blockquote\",\"pre\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\"],fontNames:[\"Arial\",\"Arial Black\",\"Comic Sans MS\",\"Courier New\",\"Helvetica Neue\",\"Helvetica\",\"Impact\",\"Lucida Grande\",\"Tahoma\",\"Times New Roman\",\"Verdana\"],fontNamesIgnoreCheck:[],addDefaultFonts:!0,fontSizes:[\"8\",\"9\",\"10\",\"11\",\"12\",\"14\",\"18\",\"24\",\"36\"],fontSizeUnits:[\"px\",\"pt\"],colors:[[\"#000000\",\"#424242\",\"#636363\",\"#9C9C94\",\"#CEC6CE\",\"#EFEFEF\",\"#F7F7F7\",\"#FFFFFF\"],[\"#FF0000\",\"#FF9C00\",\"#FFFF00\",\"#00FF00\",\"#00FFFF\",\"#0000FF\",\"#9C00FF\",\"#FF00FF\"],[\"#F7C6CE\",\"#FFE7CE\",\"#FFEFC6\",\"#D6EFD6\",\"#CEDEE7\",\"#CEE7F7\",\"#D6D6E7\",\"#E7D6DE\"],[\"#E79C9C\",\"#FFC69C\",\"#FFE79C\",\"#B5D6A5\",\"#A5C6CE\",\"#9CC6EF\",\"#B5A5D6\",\"#D6A5BD\"],[\"#E76363\",\"#F7AD6B\",\"#FFD663\",\"#94BD7B\",\"#73A5AD\",\"#6BADDE\",\"#8C7BC6\",\"#C67BA5\"],[\"#CE0000\",\"#E79439\",\"#EFC631\",\"#6BA54A\",\"#4A7B8C\",\"#3984C6\",\"#634AA5\",\"#A54A7B\"],[\"#9C0000\",\"#B56308\",\"#BD9400\",\"#397B21\",\"#104A5A\",\"#085294\",\"#311873\",\"#731842\"],[\"#630000\",\"#7B3900\",\"#846300\",\"#295218\",\"#083139\",\"#003163\",\"#21104A\",\"#4A1031\"]],colorsName:[[\"Black\",\"Tundora\",\"Dove Gray\",\"Star Dust\",\"Pale Slate\",\"Gallery\",\"Alabaster\",\"White\"],[\"Red\",\"Orange Peel\",\"Yellow\",\"Green\",\"Cyan\",\"Blue\",\"Electric Violet\",\"Magenta\"],[\"Azalea\",\"Karry\",\"Egg White\",\"Zanah\",\"Botticelli\",\"Tropical Blue\",\"Mischka\",\"Twilight\"],[\"Tonys Pink\",\"Peach Orange\",\"Cream Brulee\",\"Sprout\",\"Casper\",\"Perano\",\"Cold Purple\",\"Careys Pink\"],[\"Mandy\",\"Rajah\",\"Dandelion\",\"Olivine\",\"Gulf Stream\",\"Viking\",\"Blue Marguerite\",\"Puce\"],[\"Guardsman Red\",\"Fire Bush\",\"Golden Dream\",\"Chelsea Cucumber\",\"Smalt Blue\",\"Boston Blue\",\"Butterfly Bush\",\"Cadillac\"],[\"Sangria\",\"Mai Tai\",\"Buddha Gold\",\"Forest Green\",\"Eden\",\"Venice Blue\",\"Meteorite\",\"Claret\"],[\"Rosewood\",\"Cinnamon\",\"Olive\",\"Parsley\",\"Tiber\",\"Midnight Blue\",\"Valentino\",\"Loulou\"]],colorButton:{foreColor:\"#000000\",backColor:\"#FFFF00\"},lineHeights:[\"1.0\",\"1.2\",\"1.4\",\"1.5\",\"1.6\",\"1.8\",\"2.0\",\"3.0\"],tableClassName:\"table table-bordered\",insertTableMaxSize:{col:10,row:10},dialogsInBody:!1,dialogsFade:!1,maximumImageFileSize:null,acceptImageFileTypes:\"image/*\",callbacks:{onBeforeCommand:null,onBlur:null,onBlurCodeview:null,onChange:null,onChangeCodeview:null,onDialogShown:null,onEnter:null,onFocus:null,onImageLinkInsert:null,onImageUpload:null,onImageUploadError:null,onInit:null,onKeydown:null,onKeyup:null,onMousedown:null,onMouseup:null,onPaste:null,onScroll:null},codemirror:{mode:\"text/html\",htmlMode:!0,lineNumbers:!0},codeviewFilter:!0,codeviewFilterRegex:/<\\/*(?:applet|b(?:ase|gsound|link)|embed|frame(?:set)?|ilayer|l(?:ayer|ink)|meta|object|s(?:cript|tyle)|t(?:itle|extarea)|xml)[^>]*?>/gi,codeviewIframeFilter:!0,codeviewIframeWhitelistSrc:[],codeviewIframeWhitelistSrcBase:[\"www.youtube.com\",\"www.youtube-nocookie.com\",\"www.facebook.com\",\"vine.co\",\"instagram.com\",\"player.vimeo.com\",\"www.dailymotion.com\",\"player.youku.com\",\"jumpingbean.tv\",\"v.qq.com\"],keyMap:{pc:{ESC:\"escape\",ENTER:\"insertParagraph\",\"CTRL+Z\":\"undo\",\"CTRL+Y\":\"redo\",TAB:\"tab\",\"SHIFT+TAB\":\"untab\",\"CTRL+B\":\"bold\",\"CTRL+I\":\"italic\",\"CTRL+U\":\"underline\",\"CTRL+SHIFT+S\":\"strikethrough\",\"CTRL+BACKSLASH\":\"removeFormat\",\"CTRL+SHIFT+L\":\"justifyLeft\",\"CTRL+SHIFT+E\":\"justifyCenter\",\"CTRL+SHIFT+R\":\"justifyRight\",\"CTRL+SHIFT+J\":\"justifyFull\",\"CTRL+SHIFT+NUM7\":\"insertUnorderedList\",\"CTRL+SHIFT+NUM8\":\"insertOrderedList\",\"CTRL+LEFTBRACKET\":\"outdent\",\"CTRL+RIGHTBRACKET\":\"indent\",\"CTRL+NUM0\":\"formatPara\",\"CTRL+NUM1\":\"formatH1\",\"CTRL+NUM2\":\"formatH2\",\"CTRL+NUM3\":\"formatH3\",\"CTRL+NUM4\":\"formatH4\",\"CTRL+NUM5\":\"formatH5\",\"CTRL+NUM6\":\"formatH6\",\"CTRL+ENTER\":\"insertHorizontalRule\",\"CTRL+K\":\"linkDialog.show\"},mac:{ESC:\"escape\",ENTER:\"insertParagraph\",\"CMD+Z\":\"undo\",\"CMD+SHIFT+Z\":\"redo\",TAB:\"tab\",\"SHIFT+TAB\":\"untab\",\"CMD+B\":\"bold\",\"CMD+I\":\"italic\",\"CMD+U\":\"underline\",\"CMD+SHIFT+S\":\"strikethrough\",\"CMD+BACKSLASH\":\"removeFormat\",\"CMD+SHIFT+L\":\"justifyLeft\",\"CMD+SHIFT+E\":\"justifyCenter\",\"CMD+SHIFT+R\":\"justifyRight\",\"CMD+SHIFT+J\":\"justifyFull\",\"CMD+SHIFT+NUM7\":\"insertUnorderedList\",\"CMD+SHIFT+NUM8\":\"insertOrderedList\",\"CMD+LEFTBRACKET\":\"outdent\",\"CMD+RIGHTBRACKET\":\"indent\",\"CMD+NUM0\":\"formatPara\",\"CMD+NUM1\":\"formatH1\",\"CMD+NUM2\":\"formatH2\",\"CMD+NUM3\":\"formatH3\",\"CMD+NUM4\":\"formatH4\",\"CMD+NUM5\":\"formatH5\",\"CMD+NUM6\":\"formatH6\",\"CMD+ENTER\":\"insertHorizontalRule\",\"CMD+K\":\"linkDialog.show\"}},icons:{align:\"note-icon-align\",alignCenter:\"note-icon-align-center\",alignJustify:\"note-icon-align-justify\",alignLeft:\"note-icon-align-left\",alignRight:\"note-icon-align-right\",rowBelow:\"note-icon-row-below\",colBefore:\"note-icon-col-before\",colAfter:\"note-icon-col-after\",rowAbove:\"note-icon-row-above\",rowRemove:\"note-icon-row-remove\",colRemove:\"note-icon-col-remove\",indent:\"note-icon-align-indent\",outdent:\"note-icon-align-outdent\",arrowsAlt:\"note-icon-arrows-alt\",bold:\"note-icon-bold\",caret:\"note-icon-caret\",circle:\"note-icon-circle\",close:\"note-icon-close\",code:\"note-icon-code\",eraser:\"note-icon-eraser\",floatLeft:\"note-icon-float-left\",floatRight:\"note-icon-float-right\",font:\"note-icon-font\",frame:\"note-icon-frame\",italic:\"note-icon-italic\",link:\"note-icon-link\",unlink:\"note-icon-chain-broken\",magic:\"note-icon-magic\",menuCheck:\"note-icon-menu-check\",minus:\"note-icon-minus\",orderedlist:\"note-icon-orderedlist\",pencil:\"note-icon-pencil\",picture:\"note-icon-picture\",question:\"note-icon-question\",redo:\"note-icon-redo\",rollback:\"note-icon-rollback\",square:\"note-icon-square\",strikethrough:\"note-icon-strikethrough\",subscript:\"note-icon-subscript\",superscript:\"note-icon-superscript\",table:\"note-icon-table\",textHeight:\"note-icon-text-height\",trash:\"note-icon-trash\",underline:\"note-icon-underline\",undo:\"note-icon-undo\",unorderedlist:\"note-icon-unorderedlist\",video:\"note-icon-video\"}}});var $e=function(){function t(e,n,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,t),this.markup=e,this.children=n,this.options=o,this.callback=i}var n,o,i;return n=t,(o=[{key:\"render\",value:function(t){var n=e()(this.markup);if(this.options&&this.options.contents&&n.html(this.options.contents),this.options&&this.options.className&&n.addClass(this.options.className),this.options&&this.options.data&&e().each(this.options.data,(function(t,e){n.attr(\"data-\"+t,e)})),this.options&&this.options.click&&n.on(\"click\",this.options.click),this.children){var o=n.find(\".note-children-container\");this.children.forEach((function(t){t.render(o.length?o:n)}))}return this.callback&&this.callback(n,this.options),this.options&&this.options.callback&&this.options.callback(n),t&&t.append(n),n}}])&&Ie(n.prototype,o),i&&Ie(n,i),t}();const Ne=function(t,e){return function(){var n=\"object\"===Ee(arguments[1])?arguments[1]:arguments[0],o=Array.isArray(arguments[0])?arguments[0]:[];return n&&n.children&&(o=n.children),new $e(t,o,n,e)}};function Pe(t){return Pe=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},Pe(t)}var Re=Ne('<div class=\"note-editor note-frame panel panel-default\"></div>'),Le=Ne('<div class=\"panel-heading note-toolbar\" role=\"toolbar\"></div>'),Ae=Ne('<div class=\"note-editing-area\"></div>'),Fe=Ne('<textarea class=\"note-codable\" aria-multiline=\"true\"></textarea>'),De=Ne('<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>'),He=Ne(['<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>','<div class=\"note-statusbar\" role=\"status\">','<div class=\"note-resizebar\" aria-label=\"Resize\">','<div class=\"note-icon-bar\"></div>','<div class=\"note-icon-bar\"></div>','<div class=\"note-icon-bar\"></div>',\"</div>\",\"</div>\"].join(\"\")),ze=Ne('<div class=\"note-editor note-airframe\"></div>'),Be=Ne(['<div class=\"note-editable\" contentEditable=\"true\" role=\"textbox\" aria-multiline=\"true\"></div>','<output class=\"note-status-output\" role=\"status\" aria-live=\"polite\"></output>'].join(\"\")),Me=Ne('<div class=\"note-btn-group btn-group\"></div>'),Oe=Ne('<ul class=\"note-dropdown-menu dropdown-menu\"></ul>',(function(t,e){var n=Array.isArray(e.items)?e.items.map((function(t){var n=\"string\"==typeof t?t:t.value||\"\",o=e.template?e.template(t):t,i=\"object\"===Pe(t)?t.option:void 0;return'<li aria-label=\"'+n+'\"><a href=\"#\" '+('data-value=\"'+n+'\"'+(void 0!==i?' data-option=\"'+i+'\"':\"\"))+\">\"+o+\"</a></li>\"})).join(\"\"):e.items;t.html(n).attr({\"aria-label\":e.title}),e&&e.codeviewKeepButton&&t.addClass(\"note-codeview-keep\")})),Ue=function(t,e){return t+\" \"+qe(e.icons.caret,\"span\")},je=Ne('<ul class=\"note-dropdown-menu dropdown-menu note-check\"></ul>',(function(t,e){var n=Array.isArray(e.items)?e.items.map((function(t){var n=\"string\"==typeof t?t:t.value||\"\",o=e.template?e.template(t):t;return'<li aria-label=\"'+t+'\"><a href=\"#\" data-value=\"'+n+'\">'+qe(e.checkClassName)+\" \"+o+\"</a></li>\"})).join(\"\"):e.items;t.html(n).attr({\"aria-label\":e.title}),e&&e.codeviewKeepButton&&t.addClass(\"note-codeview-keep\")})),We=Ne('<div class=\"modal note-modal\" aria-hidden=\"false\" tabindex=\"-1\" role=\"dialog\"></div>',(function(t,e){e.fade&&t.addClass(\"fade\"),t.attr({\"aria-label\":e.title}),t.html(['<div class=\"modal-dialog\">','<div class=\"modal-content\">',e.title?'<div class=\"modal-header\"><button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" aria-hidden=\"true\">&times;</button><h4 class=\"modal-title\">'+e.title+\"</h4></div>\":\"\",'<div class=\"modal-body\">'+e.body+\"</div>\",e.footer?'<div class=\"modal-footer\">'+e.footer+\"</div>\":\"\",\"</div>\",\"</div>\"].join(\"\"))})),Ke=Ne(['<div class=\"note-popover popover in\">','<div class=\"arrow\"></div>','<div class=\"popover-content note-children-container\"></div>',\"</div>\"].join(\"\"),(function(t,e){var n=void 0!==e.direction?e.direction:\"bottom\";t.addClass(n),e.hideArrow&&t.find(\".arrow\").hide()})),Ve=Ne('<div class=\"checkbox\"></div>',(function(t,e){t.html([\"<label\"+(e.id?' for=\"note-'+e.id+'\"':\"\")+\">\",'<input type=\"checkbox\"'+(e.id?' id=\"note-'+e.id+'\"':\"\"),e.checked?\" checked\":\"\",' aria-checked=\"'+(e.checked?\"true\":\"false\")+'\"/>',e.text?e.text:\"\",\"</label>\"].join(\"\"))})),qe=function(t,e){return t.match(/^</)?t:\"<\"+(e=e||\"i\")+' class=\"'+t+'\"></'+e+\">\"};e().summernote=e().extend(e().summernote,{ui_template:function(t){return{editor:Re,toolbar:Le,editingArea:Ae,codable:Fe,editable:De,statusbar:He,airEditor:ze,airEditable:Be,buttonGroup:Me,dropdown:Oe,dropdownButtonContents:Ue,dropdownCheck:je,dialog:We,popover:Ke,checkbox:Ve,icon:qe,options:t,palette:function(e,n){return Ne('<div class=\"note-color-palette\"></div>',(function(e,n){for(var o=[],i=0,r=n.colors.length;i<r;i++){for(var a=n.eventName,s=n.colors[i],l=n.colorsName[i],c=[],u=0,d=s.length;u<d;u++){var h=s[u],f=l[u];c.push(['<button type=\"button\" class=\"note-color-btn\"','style=\"background-color:',h,'\" ','data-event=\"',a,'\" ','data-value=\"',h,'\" ','title=\"',f,'\" ','aria-label=\"',f,'\" ','data-toggle=\"button\" tabindex=\"-1\"></button>'].join(\"\"))}o.push('<div class=\"note-color-row\">'+c.join(\"\")+\"</div>\")}e.html(o.join(\"\")),n.tooltip&&e.find(\".note-color-btn\").tooltip({container:n.container||t.container,trigger:\"hover\",placement:\"bottom\"})}))(e,n)},button:function(n,o){return Ne('<button type=\"button\" class=\"note-btn btn btn-default btn-sm\" tabindex=\"-1\"></button>',(function(n,o){o&&o.tooltip&&n.attr({title:o.tooltip,\"aria-label\":o.tooltip}).tooltip({container:o.container||t.container,trigger:\"hover\",placement:\"bottom\"}).on(\"click\",(function(t){e()(t.currentTarget).tooltip(\"hide\")})),o&&o.codeviewButton&&n.addClass(\"note-codeview-keep\")}))(n,o)},toggleBtn:function(t,e){t.toggleClass(\"disabled\",!e),t.attr(\"disabled\",!e)},toggleBtnActive:function(t,e){t.toggleClass(\"active\",e)},onDialogShown:function(t,e){t.one(\"shown.bs.modal\",e)},onDialogHidden:function(t,e){t.one(\"hidden.bs.modal\",e)},showDialog:function(t){t.modal(\"show\")},hideDialog:function(t){t.modal(\"hide\")},createLayout:function(e){var n=(t.airMode?ze([Ae([Fe(),Be()])]):\"bottom\"===t.toolbarPosition?Re([Ae([Fe(),De()]),Le(),He()]):Re([Le(),Ae([Fe(),De()]),He()])).render();return n.insertAfter(e),{note:e,editor:n,toolbar:n.find(\".note-toolbar\"),editingArea:n.find(\".note-editing-area\"),editable:n.find(\".note-editable\"),codable:n.find(\".note-codable\"),statusbar:n.find(\".note-statusbar\")}},removeLayout:function(t,e){t.html(e.editable.html()),e.editor.remove(),t.show()}}},interface:\"bs3\"})})(),i})()}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/summernote/dist/summernote.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/js/summernote.min": 0,
/******/ 			"css/app": 0,
/******/ 			"css/mail-invoice": 0,
/******/ 			"css/front": 0,
/******/ 			"css/custom": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk"] = self["webpackChunk"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["css/app","css/mail-invoice","css/front","css/custom"], () => (__webpack_require__("./node_modules/summernote/dist/summernote.min.js")))
/******/ 	__webpack_require__.O(undefined, ["css/app","css/mail-invoice","css/front","css/custom"], () => (__webpack_require__("./node_modules/summernote/dist/summernote-bs5.min.js")))
/******/ 	__webpack_require__.O(undefined, ["css/app","css/mail-invoice","css/front","css/custom"], () => (__webpack_require__("./resources/sass/app.scss")))
/******/ 	__webpack_require__.O(undefined, ["css/app","css/mail-invoice","css/front","css/custom"], () => (__webpack_require__("./resources/sass/custom.scss")))
/******/ 	__webpack_require__.O(undefined, ["css/app","css/mail-invoice","css/front","css/custom"], () => (__webpack_require__("./resources/css/front.css")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["css/app","css/mail-invoice","css/front","css/custom"], () => (__webpack_require__("./resources/css/mail-invoice.css")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;